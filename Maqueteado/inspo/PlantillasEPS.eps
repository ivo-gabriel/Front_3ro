%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Cyrillic
%%Title: vector_196-01.eps
%%Creator: Adobe Illustrator(R) 16.0
%%For: Max
%%CreationDate: 6/3/2014
%%BoundingBox: 0 0 1000 1000
%%HiResBoundingBox: 0 0 1000 1000
%%CropBox: 0 0 1000 1000
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 16.0.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 16.0.0 x682 R agm 4.6676 ct 5.2591%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.3-c011 66.145661, 2012/02/06-14:56:27        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Basic RGB</rdf:li>
            </rdf:Alt>
         </dc:title>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xmp:CreatorTool>Adobe Illustrator CS6 (Windows)</xmp:CreatorTool>
         <xmp:CreateDate>2014-06-03T14:26:48+03:00</xmp:CreateDate>
         <xmp:ModifyDate>2014-06-03T14:26:49+03:00</xmp:ModifyDate>
         <xmp:MetadataDate>2014-06-03T14:26:49+03:00</xmp:MetadataDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>256</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgBAAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A7Zma6B2KuxV2KuxV2Kux&#xA;V2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxVqDTtXubxBE&#xA;UFo/7XxFgKb/ALPHqPHMaeWYnVDh+Nuzw6TDPFxGUuP3CufzTX/DVz/y0H7l/pkvG8mH5Efzlh8t&#xA;X9dpxTt0/pj43kv5Efzlj+WtU24Tp78v7BhGbvDCehP8JW/4b1j/AH/H/n/scl4w7mH5GfeHf4b1&#xA;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&#xA;sVdirsVdir//2Q==</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#">
         <xmpMM:OriginalDocumentID>uuid:9E3E5C9A8C81DB118734DB58FDDE4BA7</xmpMM:OriginalDocumentID>
         <xmpMM:DocumentID>xmp.did:5CB8F1F311EBE311829F857D90D45AC0</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:5CB8F1F311EBE311829F857D90D45AC0</xmpMM:InstanceID>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>uuid:008fa0b0-c258-4d6d-af1f-4a5d16b23291</stRef:instanceID>
            <stRef:documentID>xmp.did:A0C96D0733D4E311B0CCF33D7962548B</stRef:documentID>
            <stRef:originalDocumentID>uuid:9E3E5C9A8C81DB118734DB58FDDE4BA7</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:A0C96D0733D4E311B0CCF33D7962548B</stEvt:instanceID>
                  <stEvt:when>2014-05-05T23:28:56+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:5CB8F1F311EBE311829F857D90D45AC0</stEvt:instanceID>
                  <stEvt:when>2014-06-03T14:26:49+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/">
         <illustrator:StartupProfile>Basic RGB</illustrator:StartupProfile>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/">
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>1000.000000</stDim:w>
            <stDim:h>1000.000000</stDim:h>
            <stDim:unit>Points</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>White</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Black</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Red</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Yellow</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Green</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Cyan</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Blue</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Magenta</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=193 G=39 B=45</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>193</xmpG:red>
                           <xmpG:green>39</xmpG:green>
                           <xmpG:blue>45</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=237 G=28 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>237</xmpG:red>
                           <xmpG:green>28</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=241 G=90 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>241</xmpG:red>
                           <xmpG:green>90</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=247 G=147 B=30</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>247</xmpG:red>
                           <xmpG:green>147</xmpG:green>
                           <xmpG:blue>30</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=251 G=176 B=59</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>251</xmpG:red>
                           <xmpG:green>176</xmpG:green>
                           <xmpG:blue>59</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=252 G=238 B=33</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>252</xmpG:red>
                           <xmpG:green>238</xmpG:green>
                           <xmpG:blue>33</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=217 G=224 B=33</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>217</xmpG:red>
                           <xmpG:green>224</xmpG:green>
                           <xmpG:blue>33</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=140 G=198 B=63</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>140</xmpG:red>
                           <xmpG:green>198</xmpG:green>
                           <xmpG:blue>63</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=57 G=181 B=74</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>57</xmpG:red>
                           <xmpG:green>181</xmpG:green>
                           <xmpG:blue>74</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=146 B=69</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>146</xmpG:green>
                           <xmpG:blue>69</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=104 B=55</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>104</xmpG:green>
                           <xmpG:blue>55</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=34 G=181 B=115</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>34</xmpG:red>
                           <xmpG:green>181</xmpG:green>
                           <xmpG:blue>115</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=169 B=157</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>169</xmpG:green>
                           <xmpG:blue>157</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=41 G=171 B=226</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>41</xmpG:red>
                           <xmpG:green>171</xmpG:green>
                           <xmpG:blue>226</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=113 B=188</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>113</xmpG:green>
                           <xmpG:blue>188</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=46 G=49 B=146</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>46</xmpG:red>
                           <xmpG:green>49</xmpG:green>
                           <xmpG:blue>146</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=27 G=20 B=100</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>27</xmpG:red>
                           <xmpG:green>20</xmpG:green>
                           <xmpG:blue>100</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=102 G=45 B=145</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>102</xmpG:red>
                           <xmpG:green>45</xmpG:green>
                           <xmpG:blue>145</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=147 G=39 B=143</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>147</xmpG:red>
                           <xmpG:green>39</xmpG:green>
                           <xmpG:blue>143</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=158 G=0 B=93</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>158</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>93</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=212 G=20 B=90</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>212</xmpG:red>
                           <xmpG:green>20</xmpG:green>
                           <xmpG:blue>90</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=237 G=30 B=121</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>237</xmpG:red>
                           <xmpG:green>30</xmpG:green>
                           <xmpG:blue>121</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=199 G=178 B=153</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>199</xmpG:red>
                           <xmpG:green>178</xmpG:green>
                           <xmpG:blue>153</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=153 G=134 B=117</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>153</xmpG:red>
                           <xmpG:green>134</xmpG:green>
                           <xmpG:blue>117</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=115 G=99 B=87</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>115</xmpG:red>
                           <xmpG:green>99</xmpG:green>
                           <xmpG:blue>87</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=83 G=71 B=65</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>83</xmpG:red>
                           <xmpG:green>71</xmpG:green>
                           <xmpG:blue>65</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=198 G=156 B=109</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>198</xmpG:red>
                           <xmpG:green>156</xmpG:green>
                           <xmpG:blue>109</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=166 G=124 B=82</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>166</xmpG:red>
                           <xmpG:green>124</xmpG:green>
                           <xmpG:blue>82</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=140 G=98 B=57</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>140</xmpG:red>
                           <xmpG:green>98</xmpG:green>
                           <xmpG:blue>57</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=117 G=76 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>117</xmpG:red>
                           <xmpG:green>76</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=96 G=56 B=19</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>96</xmpG:red>
                           <xmpG:green>56</xmpG:green>
                           <xmpG:blue>19</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=66 G=33 B=11</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>66</xmpG:red>
                           <xmpG:green>33</xmpG:green>
                           <xmpG:blue>11</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Cold</xmpG:groupName>
                  <xmpG:groupType>1</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=56 M=0 Y=20 K=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>101</xmpG:red>
                           <xmpG:green>200</xmpG:green>
                           <xmpG:blue>208</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=51 M=43 Y=0 K=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>131</xmpG:red>
                           <xmpG:green>139</xmpG:green>
                           <xmpG:blue>197</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=26 M=41 Y=0 K=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>186</xmpG:red>
                           <xmpG:green>155</xmpG:green>
                           <xmpG:blue>201</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Grays</xmpG:groupName>
                  <xmpG:groupType>1</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=0 B=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=26 G=26 B=26</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>26</xmpG:red>
                           <xmpG:green>26</xmpG:green>
                           <xmpG:blue>26</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=51 G=51 B=51</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>51</xmpG:red>
                           <xmpG:green>51</xmpG:green>
                           <xmpG:blue>51</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=77 G=77 B=77</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>77</xmpG:red>
                           <xmpG:green>77</xmpG:green>
                           <xmpG:blue>77</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=102 G=102 B=102</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>102</xmpG:red>
                           <xmpG:green>102</xmpG:green>
                           <xmpG:blue>102</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=128 G=128 B=128</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>128</xmpG:red>
                           <xmpG:green>128</xmpG:green>
                           <xmpG:blue>128</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=153 G=153 B=153</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>153</xmpG:red>
                           <xmpG:green>153</xmpG:green>
                           <xmpG:blue>153</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=179 G=179 B=179</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>179</xmpG:red>
                           <xmpG:green>179</xmpG:green>
                           <xmpG:blue>179</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=204 G=204 B=204</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>204</xmpG:red>
                           <xmpG:green>204</xmpG:green>
                           <xmpG:blue>204</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=230 G=230 B=230</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>230</xmpG:red>
                           <xmpG:green>230</xmpG:green>
                           <xmpG:blue>230</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=242 G=242 B=242</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>242</xmpG:red>
                           <xmpG:green>242</xmpG:green>
                           <xmpG:blue>242</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
         <pdf:Producer>Adobe PDF library 10.01</pdf:Producer>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -1000 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 1000 li
1000 1000 li
1000 0 li
cp
clp
1000 1000 mo
0 1000 li
0 0 li
1000 0 li
1000 1000 li
cp
false sop
/0 
[/DeviceRGB] /CSA add_res
.670588 .878431 .898039 rgb
f
240 60 mo
40 60 li
40 240 li
240 240 li
240 60 li
cp
.94902 .94902 .94902 rgb
f
240 40 mo
40 40 li
40 50.001 li
240 50.001 li
240 40 li
cp
.568627 .827451 .85098 rgb
f
240 50.001 mo
40 50.001 li
40 60 li
240 60 li
240 50.001 li
cp
.901961 .898039 .898039 rgb
f
222.669 56.9985 mo
57.3345 56.9985 li
57.3345 53.0005 li
222.669 53.0005 li
222.669 56.9985 li
cp
1 1 1 rgb
f
57.3345 50.001 mo
40 50.001 li
40 44.9995 li
57.3345 44.9995 li
57.3345 50.001 li
cp
.964706 .513726 .376471 rgb
f
98.6685 44.9995 mo
57.3345 44.9995 li
57.3345 50.001 li
98.6685 50.001 li
98.6685 44.9995 li
cp
.901961 .898039 .898039 rgb
f
140.002 44.9995 mo
98.6685 44.9995 li
98.6685 50.001 li
140.002 50.001 li
140.002 44.9995 li
cp
.85098 .847059 .843137 rgb
f
53.8594 56.9985 mo
49.8628 56.9985 li
49.8628 53.0005 li
53.8594 53.0005 li
53.8594 56.9985 li
cp
.8 .796078 .792157 rgb
f
47.4717 56.9985 mo
43.4731 56.9985 li
43.4731 53.0005 li
47.4717 53.0005 li
47.4717 56.9985 li
cp
f
236.529 56.9985 mo
232.53 56.9985 li
232.53 53.0005 li
236.529 53.0005 li
236.529 56.9985 li
cp
f
230.142 56.9985 mo
226.141 56.9985 li
226.141 53.0005 li
230.142 53.0005 li
230.142 56.9985 li
cp
f
230.141 240 mo
49.8628 240 li
49.8628 60 li
230.141 60 li
230.141 240 li
cp
1 1 1 rgb
f
230.141 213.533 mo
49.8628 213.533 li
49.8628 131 li
230.141 131 li
230.141 213.533 li
cp
1 .6 .470588 rgb
f
76.7046 157.076 mo
65.4019 157.076 li
65.4019 145.771 li
76.7046 145.771 li
76.7046 157.076 li
cp
1 1 1 rgb
f
80.3159 162.146 mo
61.7886 162.146 li
61.7886 161.495 li
80.3159 161.495 li
80.3159 162.146 li
cp
f
80.3159 164.298 mo
61.7886 164.298 li
61.7886 163.646 li
80.3159 163.646 li
80.3159 164.298 li
cp
f
75.8081 166.447 mo
66.2983 166.447 li
66.2983 165.796 li
75.8081 165.796 li
75.8081 166.447 li
cp
f
111.179 157.076 mo
99.8765 157.076 li
99.8765 145.771 li
111.179 145.771 li
111.179 157.076 li
cp
f
114.791 162.146 mo
96.2632 162.146 li
96.2632 161.495 li
114.791 161.495 li
114.791 162.146 li
cp
f
114.791 164.298 mo
96.2632 164.298 li
96.2632 163.646 li
114.791 163.646 li
114.791 164.298 li
cp
f
110.283 166.447 mo
100.773 166.447 li
100.773 165.796 li
110.283 165.796 li
110.283 166.447 li
cp
f
145.654 157.076 mo
134.351 157.076 li
134.351 145.771 li
145.654 145.771 li
145.654 157.076 li
cp
f
149.265 162.146 mo
130.738 162.146 li
130.738 161.495 li
149.265 161.495 li
149.265 162.146 li
cp
f
149.265 164.298 mo
130.738 164.298 li
130.738 163.646 li
149.265 163.646 li
149.265 164.298 li
cp
f
144.757 166.447 mo
135.248 166.447 li
135.248 165.796 li
144.757 165.796 li
144.757 166.447 li
cp
f
180.128 157.076 mo
168.826 157.076 li
168.826 145.771 li
180.128 145.771 li
180.128 157.076 li
cp
f
183.74 162.146 mo
165.212 162.146 li
165.212 161.495 li
183.74 161.495 li
183.74 162.146 li
cp
f
183.74 164.298 mo
165.212 164.298 li
165.212 163.646 li
183.74 163.646 li
183.74 164.298 li
cp
f
179.232 166.447 mo
169.722 166.447 li
169.722 165.796 li
179.232 165.796 li
179.232 166.447 li
cp
f
214.603 157.076 mo
203.3 157.076 li
203.3 145.771 li
214.603 145.771 li
214.603 157.076 li
cp
f
218.214 162.146 mo
199.687 162.146 li
199.687 161.495 li
218.214 161.495 li
218.214 162.146 li
cp
f
218.214 164.298 mo
199.687 164.298 li
199.687 163.646 li
218.214 163.646 li
218.214 164.298 li
cp
f
213.707 166.447 mo
204.197 166.447 li
204.197 165.796 li
213.707 165.796 li
213.707 166.447 li
cp
f
76.7046 189.391 mo
65.4019 189.391 li
65.4019 178.086 li
76.7046 178.086 li
76.7046 189.391 li
cp
f
80.3159 194.461 mo
61.7886 194.461 li
61.7886 193.81 li
80.3159 193.81 li
80.3159 194.461 li
cp
f
80.3159 196.612 mo
61.7886 196.612 li
61.7886 195.96 li
80.3159 195.96 li
80.3159 196.612 li
cp
f
75.8081 198.762 mo
66.2983 198.762 li
66.2983 198.11 li
75.8081 198.11 li
75.8081 198.762 li
cp
f
111.179 189.391 mo
99.8765 189.391 li
99.8765 178.086 li
111.179 178.086 li
111.179 189.391 li
cp
f
114.791 194.461 mo
96.2632 194.461 li
96.2632 193.81 li
114.791 193.81 li
114.791 194.461 li
cp
f
114.791 196.612 mo
96.2632 196.612 li
96.2632 195.96 li
114.791 195.96 li
114.791 196.612 li
cp
f
110.283 198.762 mo
100.773 198.762 li
100.773 198.11 li
110.283 198.11 li
110.283 198.762 li
cp
f
145.654 189.391 mo
134.351 189.391 li
134.351 178.086 li
145.654 178.086 li
145.654 189.391 li
cp
f
149.265 194.461 mo
130.738 194.461 li
130.738 193.81 li
149.265 193.81 li
149.265 194.461 li
cp
f
149.265 196.612 mo
130.738 196.612 li
130.738 195.96 li
149.265 195.96 li
149.265 196.612 li
cp
f
144.757 198.762 mo
135.248 198.762 li
135.248 198.11 li
144.757 198.11 li
144.757 198.762 li
cp
f
180.128 189.391 mo
168.826 189.391 li
168.826 178.086 li
180.128 178.086 li
180.128 189.391 li
cp
f
183.74 194.461 mo
165.212 194.461 li
165.212 193.81 li
183.74 193.81 li
183.74 194.461 li
cp
f
183.74 196.612 mo
165.212 196.612 li
165.212 195.96 li
183.74 195.96 li
183.74 196.612 li
cp
f
179.232 198.762 mo
169.722 198.762 li
169.722 198.11 li
179.232 198.11 li
179.232 198.762 li
cp
f
214.603 189.391 mo
203.3 189.391 li
203.3 178.086 li
214.603 178.086 li
214.603 189.391 li
cp
f
218.214 194.461 mo
199.687 194.461 li
199.687 193.81 li
218.214 193.81 li
218.214 194.461 li
cp
f
218.214 196.612 mo
199.687 196.612 li
199.687 195.96 li
218.214 195.96 li
218.214 196.612 li
cp
f
213.707 198.762 mo
204.197 198.762 li
204.197 198.11 li
213.707 198.11 li
213.707 198.762 li
cp
f
108.738 99 mo
53.8589 99 li
53.8589 124 li
108.738 124 li
108.738 99 li
cp
.670588 .878431 .898039 rgb
f
167.439 99 mo
112.56 99 li
112.56 124 li
167.439 124 li
167.439 99 li
cp
.396078 .415686 .45098 rgb
f
226.14 99 mo
171.261 99 li
171.261 124 li
226.14 124 li
226.14 99 li
cp
.85098 .847059 .843137 rgb
f
155.436 75.1855 mo
124.563 75.1855 li
124.563 70.1855 li
155.436 70.1855 li
155.436 75.1855 li
cp
f
126.063 73.1855 mo
126.063 72.1855 li
153.936 72.1855 li
153.936 73.1855 li
126.063 73.1855 li
cp
1 1 1 rgb
f
155.436 82.4209 mo
124.563 82.4209 li
124.563 77.4209 li
155.436 77.4209 li
155.436 82.4209 li
cp
.85098 .847059 .843137 rgb
f
126.063 80.4209 mo
126.063 79.4209 li
153.936 79.4209 li
153.936 80.4209 li
126.063 80.4209 li
cp
1 1 1 rgb
f
148.821 88.8145 mo
131.178 88.8145 li
131.178 85.498 li
148.821 85.498 li
148.821 88.8145 li
cp
1 .6 .470588 rgb
f
108.738 67 mo
53.8589 67 li
53.8589 92 li
108.738 92 li
108.738 67 li
cp
.85098 .847059 .843137 rgb
f
102.518 75.4736 mo
81.5181 75.4736 li
81.5181 74.5 li
102.518 74.5 li
102.518 75.4736 li
cp
.396078 .415686 .45098 rgb
f
102.518 78.4824 mo
81.5181 78.4824 li
81.5181 77.5088 li
102.518 77.5088 li
102.518 78.4824 li
cp
f
97.269 84.5 mo
86.7671 84.5 li
86.7671 83.5264 li
97.269 83.5264 li
97.269 84.5 li
cp
f
102.518 81.4912 mo
81.5181 81.4912 li
81.5181 80.5176 li
102.518 80.5176 li
102.518 81.4912 li
cp
f
59.8589 86 mo
59.8589 73 li
75.2983 73 li
75.2983 86 li
59.8589 86 li
cp
1 1 1 rgb
f
80.3159 226.018 mo
61.7886 226.018 li
61.7886 225.365 li
80.3159 225.365 li
80.3159 226.018 li
cp
.8 .796078 .792157 rgb
f
80.3159 223.867 mo
61.7886 223.867 li
61.7886 223.215 li
80.3159 223.215 li
80.3159 223.867 li
cp
f
80.3159 228.168 mo
61.7886 228.168 li
61.7886 227.516 li
80.3159 227.516 li
80.3159 228.168 li
cp
f
75.8081 230.318 mo
66.2983 230.318 li
66.2983 229.666 li
75.8081 229.666 li
75.8081 230.318 li
cp
f
114.791 226.018 mo
96.2632 226.018 li
96.2632 225.365 li
114.791 225.365 li
114.791 226.018 li
cp
f
114.791 223.867 mo
96.2632 223.867 li
96.2632 223.215 li
114.791 223.215 li
114.791 223.867 li
cp
f
114.791 228.168 mo
96.2632 228.168 li
96.2632 227.516 li
114.791 227.516 li
114.791 228.168 li
cp
f
110.283 230.318 mo
100.773 230.318 li
100.773 229.666 li
110.283 229.666 li
110.283 230.318 li
cp
f
149.265 226.018 mo
130.738 226.018 li
130.738 225.365 li
149.265 225.365 li
149.265 226.018 li
cp
f
149.265 223.867 mo
130.738 223.867 li
130.738 223.215 li
149.265 223.215 li
149.265 223.867 li
cp
f
149.265 228.168 mo
130.738 228.168 li
130.738 227.516 li
149.265 227.516 li
149.265 228.168 li
cp
f
144.757 230.318 mo
135.248 230.318 li
135.248 229.666 li
144.757 229.666 li
144.757 230.318 li
cp
f
183.74 226.018 mo
165.212 226.018 li
165.212 225.365 li
183.74 225.365 li
183.74 226.018 li
cp
f
183.74 223.867 mo
165.212 223.867 li
165.212 223.215 li
183.74 223.215 li
183.74 223.867 li
cp
f
183.74 228.168 mo
165.212 228.168 li
165.212 227.516 li
183.74 227.516 li
183.74 228.168 li
cp
f
179.232 230.318 mo
169.722 230.318 li
169.722 229.666 li
179.232 229.666 li
179.232 230.318 li
cp
f
218.214 226.018 mo
199.687 226.018 li
199.687 225.365 li
218.214 225.365 li
218.214 226.018 li
cp
f
218.214 223.867 mo
199.687 223.867 li
199.687 223.215 li
218.214 223.215 li
218.214 223.867 li
cp
f
218.214 228.168 mo
199.687 228.168 li
199.687 227.516 li
218.214 227.516 li
218.214 228.168 li
cp
f
213.707 230.318 mo
204.197 230.318 li
204.197 229.666 li
213.707 229.666 li
213.707 230.318 li
cp
f
720 60 mo
520 60 li
520 240 li
720 240 li
720 60 li
cp
1 1 1 rgb
f
720 40 mo
520 40 li
520 50.001 li
720 50.001 li
720 40 li
cp
.568627 .827451 .85098 rgb
f
720 50.001 mo
520 50.001 li
520 60 li
720 60 li
720 50.001 li
cp
.901961 .898039 .898039 rgb
f
702.67 56.9985 mo
537.334 56.9985 li
537.334 53.0005 li
702.67 53.0005 li
702.67 56.9985 li
cp
1 1 1 rgb
f
537.334 50.001 mo
520 50.001 li
520 44.9995 li
537.334 44.9995 li
537.334 50.001 li
cp
.964706 .513726 .376471 rgb
f
578.668 44.9995 mo
537.334 44.9995 li
537.334 50.001 li
578.668 50.001 li
578.668 44.9995 li
cp
.901961 .898039 .898039 rgb
f
620.002 44.9995 mo
578.668 44.9995 li
578.668 50.001 li
620.002 50.001 li
620.002 44.9995 li
cp
.85098 .847059 .843137 rgb
f
533.859 56.9985 mo
529.863 56.9985 li
529.863 53.0005 li
533.859 53.0005 li
533.859 56.9985 li
cp
.8 .796078 .792157 rgb
f
527.472 56.9985 mo
523.473 56.9985 li
523.473 53.0005 li
527.472 53.0005 li
527.472 56.9985 li
cp
f
716.529 56.9985 mo
712.53 56.9985 li
712.53 53.0005 li
716.529 53.0005 li
716.529 56.9985 li
cp
f
710.142 56.9985 mo
706.141 56.9985 li
706.141 53.0005 li
710.142 53.0005 li
710.142 56.9985 li
cp
f
720 85 mo
520 85 li
520 60 li
720 60 li
720 85 li
cp
.396078 .415686 .45098 rgb
f
569.5 64 mo
552.5 64 li
552.5 81 li
569.5 81 li
569.5 64 li
cp
.768627 .929412 .945098 rgb
f
594.545 73.5 mo
580.459 73.5 li
580.459 71.5 li
594.545 71.5 li
594.545 73.5 li
cp
1 1 1 rgb
f
606.644 73.5 mo
599.061 73.5 li
599.061 71.5 li
606.644 71.5 li
606.644 73.5 li
cp
f
621.979 73.5 mo
611.159 73.5 li
611.159 71.5 li
621.979 71.5 li
621.979 73.5 li
cp
f
632.801 73.5 mo
626.495 73.5 li
626.495 71.5 li
632.801 71.5 li
632.801 73.5 li
cp
f
656.061 73.5 mo
637.316 73.5 li
637.316 71.5 li
656.061 71.5 li
656.061 73.5 li
cp
f
669.267 73.5 mo
660.576 73.5 li
660.576 71.5 li
669.267 71.5 li
669.267 73.5 li
cp
f
687.5 73.5 mo
673.782 73.5 li
673.782 71.5 li
687.5 71.5 li
687.5 73.5 li
cp
f
652.5 240 mo
552.5 240 li
552.5 85 li
652.5 85 li
652.5 240 li
cp
.94902 .94902 .94902 rgb
f
687.5 240 mo
652.5 240 li
652.5 85 li
687.5 85 li
687.5 240 li
cp
.8 .796078 .792157 rgb
f
680.094 100.625 mo
659.906 100.625 li
659.906 97.3184 li
680.094 97.3184 li
680.094 100.625 li
cp
.396078 .415686 .45098 rgb
f
675.906 104.812 mo
659.906 104.812 li
659.906 103.812 li
675.906 103.812 li
675.906 104.812 li
cp
1 1 1 rgb
f
680.094 107.874 mo
659.906 107.874 li
659.906 106.874 li
680.094 106.874 li
680.094 107.874 li
cp
f
680.094 110.937 mo
659.906 110.937 li
659.906 109.937 li
680.094 109.937 li
680.094 110.937 li
cp
f
680.094 113.999 mo
659.906 113.999 li
659.906 112.999 li
680.094 112.999 li
680.094 113.999 li
cp
f
670.156 117.062 mo
659.906 117.062 li
659.906 116.062 li
670.156 116.062 li
670.156 117.062 li
cp
f
669.407 130.985 mo
659.906 130.985 li
659.906 127.678 li
669.407 127.678 li
669.407 130.985 li
cp
.396078 .415686 .45098 rgb
f
680.094 135.171 mo
659.906 135.171 li
659.906 134.171 li
680.094 134.171 li
680.094 135.171 li
cp
1 1 1 rgb
f
680.094 138.234 mo
659.906 138.234 li
659.906 137.234 li
680.094 137.234 li
680.094 138.234 li
cp
f
680.094 141.296 mo
659.906 141.296 li
659.906 140.296 li
680.094 140.296 li
680.094 141.296 li
cp
f
670.156 144.359 mo
659.906 144.359 li
659.906 143.359 li
670.156 143.359 li
670.156 144.359 li
cp
f
670.156 147.421 mo
659.906 147.421 li
659.906 146.421 li
670.156 146.421 li
670.156 147.421 li
cp
f
675.906 161.345 mo
659.906 161.345 li
659.906 158.038 li
675.906 158.038 li
675.906 161.345 li
cp
.396078 .415686 .45098 rgb
f
680.094 165.531 mo
659.906 165.531 li
659.906 164.531 li
680.094 164.531 li
680.094 165.531 li
cp
1 1 1 rgb
f
680.094 168.594 mo
659.906 168.594 li
659.906 167.594 li
680.094 167.594 li
680.094 168.594 li
cp
f
680.094 171.656 mo
659.906 171.656 li
659.906 170.656 li
680.094 170.656 li
680.094 171.656 li
cp
f
680.094 174.719 mo
659.906 174.719 li
659.906 173.719 li
680.094 173.719 li
680.094 174.719 li
cp
f
670.156 177.781 mo
659.906 177.781 li
659.906 176.781 li
670.156 176.781 li
670.156 177.781 li
cp
f
680.094 191.705 mo
659.906 191.705 li
659.906 188.398 li
680.094 188.398 li
680.094 191.705 li
cp
.396078 .415686 .45098 rgb
f
680.094 195.891 mo
659.906 195.891 li
659.906 194.891 li
680.094 194.891 li
680.094 195.891 li
cp
1 1 1 rgb
f
680.094 198.954 mo
659.906 198.954 li
659.906 197.954 li
680.094 197.954 li
680.094 198.954 li
cp
f
674.969 202.016 mo
659.906 202.016 li
659.906 201.016 li
674.969 201.016 li
674.969 202.016 li
cp
f
602.583 115.216 mo
565.063 115.216 li
565.063 97.3184 li
602.583 97.3184 li
602.583 115.216 li
cp
1 .6 .470588 rgb
f
639.938 121.049 mo
565.229 121.049 li
565.229 119.049 li
639.938 119.049 li
639.938 121.049 li
cp
.396078 .415686 .45098 rgb
f
639.938 126.883 mo
565.229 126.883 li
565.229 124.883 li
639.938 124.883 li
639.938 126.883 li
cp
.8 .796078 .792157 rgb
f
639.938 132.716 mo
565.229 132.716 li
565.229 130.716 li
639.938 130.716 li
639.938 132.716 li
cp
f
600.623 138.55 mo
565.229 138.55 li
565.229 136.55 li
600.623 136.55 li
600.623 138.55 li
cp
f
602.583 210.181 mo
565.063 210.181 li
565.063 192.284 li
602.583 192.284 li
602.583 210.181 li
cp
.396078 .415686 .45098 rgb
f
639.938 216.015 mo
565.229 216.015 li
565.229 214.015 li
639.938 214.015 li
639.938 216.015 li
cp
.8 .796078 .792157 rgb
f
639.938 221.848 mo
565.229 221.848 li
565.229 219.848 li
639.938 219.848 li
639.938 221.848 li
cp
f
602.583 227.682 mo
565.229 227.682 li
565.229 225.682 li
602.583 225.682 li
602.583 227.682 li
cp
f
584.563 165.615 mo
565.063 165.615 li
565.063 147.718 li
584.563 147.718 li
584.563 165.615 li
cp
.568627 .827451 .85098 rgb
f
639.938 171.449 mo
565.229 171.449 li
565.229 169.449 li
639.938 169.449 li
639.938 171.449 li
cp
.8 .796078 .792157 rgb
f
639.938 177.282 mo
565.229 177.282 li
565.229 175.282 li
639.938 175.282 li
639.938 177.282 li
cp
f
639.938 183.116 mo
565.229 183.116 li
565.229 181.116 li
639.938 181.116 li
639.938 183.116 li
cp
f
617.646 149.718 mo
589.479 149.718 li
589.479 147.718 li
617.646 147.718 li
617.646 149.718 li
cp
.396078 .415686 .45098 rgb
f
604.063 155.551 mo
589.479 155.551 li
589.479 153.551 li
604.063 153.551 li
604.063 155.551 li
cp
.8 .796078 .792157 rgb
f
960 60 mo
760 60 li
760 240 li
960 240 li
960 60 li
cp
1 1 1 rgb
f
960 40 mo
760 40 li
760 50.001 li
960 50.001 li
960 40 li
cp
.568627 .827451 .85098 rgb
f
960 50.001 mo
760 50.001 li
760 60 li
960 60 li
960 50.001 li
cp
.901961 .898039 .898039 rgb
f
942.67 56.9985 mo
777.334 56.9985 li
777.334 53.0005 li
942.67 53.0005 li
942.67 56.9985 li
cp
1 1 1 rgb
f
777.334 50.001 mo
760 50.001 li
760 44.9995 li
777.334 44.9995 li
777.334 50.001 li
cp
.964706 .513726 .376471 rgb
f
818.668 44.9995 mo
777.334 44.9995 li
777.334 50.001 li
818.668 50.001 li
818.668 44.9995 li
cp
.901961 .898039 .898039 rgb
f
860.002 44.9995 mo
818.668 44.9995 li
818.668 50.001 li
860.002 50.001 li
860.002 44.9995 li
cp
.85098 .847059 .843137 rgb
f
773.859 56.9985 mo
769.863 56.9985 li
769.863 53.0005 li
773.859 53.0005 li
773.859 56.9985 li
cp
.8 .796078 .792157 rgb
f
767.472 56.9985 mo
763.473 56.9985 li
763.473 53.0005 li
767.472 53.0005 li
767.472 56.9985 li
cp
f
956.529 56.9985 mo
952.53 56.9985 li
952.53 53.0005 li
956.529 53.0005 li
956.529 56.9985 li
cp
f
950.142 56.9985 mo
946.141 56.9985 li
946.141 53.0005 li
950.142 53.0005 li
950.142 56.9985 li
cp
f
942.67 240 mo
777.334 240 li
777.334 85 li
942.67 85 li
942.67 240 li
cp
.901961 .898039 .898039 rgb
f
942.67 240 mo
777.334 240 li
777.334 224.625 li
942.67 224.625 li
942.67 240 li
cp
.396078 .415686 .45098 rgb
f
825.994 229.55 mo
808.703 229.55 li
808.703 228.882 li
825.994 228.882 li
825.994 229.55 li
cp
.8 .796078 .792157 rgb
f
825.994 231.614 mo
808.703 231.614 li
808.703 230.946 li
825.994 230.946 li
825.994 231.614 li
cp
f
821.672 235.743 mo
813.025 235.743 li
813.025 235.075 li
821.672 235.075 li
821.672 235.743 li
cp
f
825.994 233.679 mo
808.703 233.679 li
808.703 233.011 li
825.994 233.011 li
825.994 233.679 li
cp
f
854.43 229.55 mo
837.139 229.55 li
837.139 228.882 li
854.43 228.882 li
854.43 229.55 li
cp
f
854.43 231.614 mo
837.139 231.614 li
837.139 230.946 li
854.43 230.946 li
854.43 231.614 li
cp
f
850.107 235.743 mo
841.461 235.743 li
841.461 235.075 li
850.107 235.075 li
850.107 235.743 li
cp
f
854.43 233.679 mo
837.139 233.679 li
837.139 233.011 li
854.43 233.011 li
854.43 233.679 li
cp
f
882.865 229.55 mo
865.574 229.55 li
865.574 228.882 li
882.865 228.882 li
882.865 229.55 li
cp
f
882.865 231.614 mo
865.574 231.614 li
865.574 230.946 li
882.865 230.946 li
882.865 231.614 li
cp
f
878.543 235.743 mo
869.896 235.743 li
869.896 235.075 li
878.543 235.075 li
878.543 235.743 li
cp
f
882.865 233.679 mo
865.574 233.679 li
865.574 233.011 li
882.865 233.011 li
882.865 233.679 li
cp
f
911.301 229.55 mo
894.01 229.55 li
894.01 228.882 li
911.301 228.882 li
911.301 229.55 li
cp
f
911.301 231.614 mo
894.01 231.614 li
894.01 230.946 li
911.301 230.946 li
911.301 231.614 li
cp
f
906.979 235.743 mo
898.332 235.743 li
898.332 235.075 li
906.979 235.075 li
906.979 235.743 li
cp
f
911.301 233.679 mo
894.01 233.679 li
894.01 233.011 li
911.301 233.011 li
911.301 233.679 li
cp
f
942.67 75.375 mo
777.334 75.375 li
777.334 60 li
942.67 60 li
942.67 75.375 li
cp
.396078 .415686 .45098 rgb
f
823.666 63.6875 mo
781.534 63.6875 li
781.534 71.6875 li
823.666 71.6875 li
823.666 63.6875 li
cp
1 .72549 .34902 rgb
f
871.467 66.1875 mo
895 66.1875 li
895 69.1875 li
871.467 69.1875 li
871.467 66.1875 li
cp
1 1 1 rgb
f
898.583 66.1875 mo
922.116 66.1875 li
922.116 69.1875 li
898.583 69.1875 li
898.583 66.1875 li
cp
f
925.699 66.1875 mo
938.47 66.1875 li
938.47 69.1875 li
925.699 69.1875 li
925.699 66.1875 li
cp
1 .72549 .34902 rgb
f
942.67 85 mo
777.334 85 li
777.334 75.375 li
942.67 75.375 li
942.67 85 li
cp
.8 .796078 .792157 rgb
f
824.4 85 mo
800.867 85 li
800.867 75.375 li
824.4 75.375 li
824.4 85 li
cp
.278431 .309804 .34902 rgb
f
781.534 80.7998 mo
781.534 79.5752 li
796.667 79.5752 li
796.667 80.7998 li
781.534 80.7998 li
cp
f
828.601 80.7998 mo
828.601 79.5752 li
843.733 79.5752 li
843.733 80.7998 li
828.601 80.7998 li
cp
f
852.134 80.7998 mo
852.134 79.5752 li
867.267 79.5752 li
867.267 80.7998 li
852.134 80.7998 li
cp
f
875.667 80.7998 mo
875.667 79.5752 li
890.8 79.5752 li
890.8 80.7998 li
875.667 80.7998 li
cp
f
942.67 147.551 mo
777.334 147.551 li
777.334 94.625 li
942.67 94.625 li
942.67 147.551 li
cp
.94902 .94902 .94902 rgb
f
823.666 137.588 mo
777.334 137.588 li
777.334 104.588 li
823.666 104.588 li
823.666 137.588 li
cp
.396078 .415686 .45098 rgb
f
815.499 116.854 mo
785.501 116.854 li
785.501 112.736 li
815.499 112.736 li
815.499 116.854 li
cp
1 .72549 .34902 rgb
f
815.499 121.048 mo
785.501 121.048 li
785.501 119.809 li
815.499 119.809 li
815.499 121.048 li
cp
1 1 1 rgb
f
815.499 125.245 mo
785.501 125.245 li
785.501 124.005 li
815.499 124.005 li
815.499 125.245 li
cp
f
800.495 129.439 mo
785.501 129.439 li
785.501 128.2 li
800.495 128.2 li
800.495 129.439 li
cp
f
895.375 124.588 mo
930.375 124.588 li
930.375 104.588 li
895.375 104.588 li
895.375 124.588 li
cp
1 .6 .470588 rgb
f
860.002 137.588 mo
930.375 137.588 li
930.375 130.088 li
860.002 130.088 li
860.002 137.588 li
cp
.396078 .415686 .45098 rgb
f
860.002 106.673 mo
890 106.673 li
890 104.588 li
860.002 104.588 li
860.002 106.673 li
cp
f
860.002 112.645 mo
890 112.645 li
890 110.56 li
860.002 110.56 li
860.002 112.645 li
cp
.8 .796078 .792157 rgb
f
860.002 118.616 mo
890 118.616 li
890 116.531 li
860.002 116.531 li
860.002 118.616 li
cp
f
860.002 124.588 mo
875.001 124.588 li
875.001 122.503 li
860.002 122.503 li
860.002 124.588 li
cp
f
828.332 224.625 mo
777.334 224.625 li
777.334 157.176 li
828.332 157.176 li
828.332 224.625 li
cp
.94902 .94902 .94902 rgb
f
885.501 224.625 mo
834.503 224.625 li
834.503 157.176 li
885.501 157.176 li
885.501 224.625 li
cp
f
942.67 224.625 mo
891.672 224.625 li
891.672 157.176 li
942.67 157.176 li
942.67 224.625 li
cp
f
818.5 202.95 mo
787.166 202.95 li
787.166 199.474 li
818.5 199.474 li
818.5 202.95 li
cp
.396078 .415686 .45098 rgb
f
818.5 207.237 mo
787.166 207.237 li
787.166 206.134 li
818.5 206.134 li
818.5 207.237 li
cp
.8 .796078 .792157 rgb
f
818.5 210.874 mo
787.166 210.874 li
787.166 209.771 li
818.5 209.771 li
818.5 210.874 li
cp
f
810.875 214.51 mo
794.793 214.51 li
794.793 213.407 li
810.875 213.407 li
810.875 214.51 li
cp
f
813.775 189.175 mo
791.892 189.175 li
791.892 167.292 li
813.775 167.292 li
813.775 189.175 li
cp
.396078 .415686 .45098 rgb
f
875.669 202.95 mo
844.335 202.95 li
844.335 199.474 li
875.669 199.474 li
875.669 202.95 li
cp
f
875.669 207.237 mo
844.335 207.237 li
844.335 206.134 li
875.669 206.134 li
875.669 207.237 li
cp
.8 .796078 .792157 rgb
f
875.669 210.874 mo
844.335 210.874 li
844.335 209.771 li
875.669 209.771 li
875.669 210.874 li
cp
f
868.044 214.51 mo
851.962 214.51 li
851.962 213.407 li
868.044 213.407 li
868.044 214.51 li
cp
f
870.943 189.175 mo
849.06 189.175 li
849.06 167.292 li
870.943 167.292 li
870.943 189.175 li
cp
1 .6 .470588 rgb
f
932.838 202.95 mo
901.504 202.95 li
901.504 199.474 li
932.838 199.474 li
932.838 202.95 li
cp
.396078 .415686 .45098 rgb
f
932.838 207.237 mo
901.504 207.237 li
901.504 206.134 li
932.838 206.134 li
932.838 207.237 li
cp
.8 .796078 .792157 rgb
f
932.838 210.874 mo
901.504 210.874 li
901.504 209.771 li
932.838 209.771 li
932.838 210.874 li
cp
f
925.213 214.51 mo
909.131 214.51 li
909.131 213.407 li
925.213 213.407 li
925.213 214.51 li
cp
f
928.111 189.175 mo
906.228 189.175 li
906.228 167.292 li
928.111 167.292 li
928.111 189.175 li
cp
1 .72549 .34902 rgb
f
480 300 mo
280 300 li
280 480 li
480 480 li
480 300 li
cp
1 1 1 rgb
f
480 280 mo
280 280 li
280 290.001 li
480 290.001 li
480 280 li
cp
.568627 .827451 .85098 rgb
f
480 290.001 mo
280 290.001 li
280 300 li
480 300 li
480 290.001 li
cp
.901961 .898039 .898039 rgb
f
462.669 296.999 mo
297.334 296.999 li
297.334 293 li
462.669 293 li
462.669 296.999 li
cp
1 1 1 rgb
f
297.334 290.001 mo
280 290.001 li
280 285 li
297.334 285 li
297.334 290.001 li
cp
.964706 .513726 .376471 rgb
f
338.668 285 mo
297.334 285 li
297.334 290.001 li
338.668 290.001 li
338.668 285 li
cp
.901961 .898039 .898039 rgb
f
380.002 285 mo
338.668 285 li
338.668 290.001 li
380.002 290.001 li
380.002 285 li
cp
.85098 .847059 .843137 rgb
f
293.859 296.999 mo
289.863 296.999 li
289.863 293 li
293.859 293 li
293.859 296.999 li
cp
.8 .796078 .792157 rgb
f
287.472 296.999 mo
283.473 296.999 li
283.473 293 li
287.472 293 li
287.472 296.999 li
cp
f
476.529 296.999 mo
472.53 296.999 li
472.53 293 li
476.529 293 li
476.529 296.999 li
cp
f
470.142 296.999 mo
466.141 296.999 li
466.141 293 li
470.142 293 li
470.142 296.999 li
cp
f
470.142 480 mo
289.863 480 li
289.863 315 li
470.142 315 li
470.142 480 li
cp
.94902 .94902 .94902 rgb
f
311.249 412.387 mo
296.5 412.387 li
296.5 427.136 li
311.249 427.136 li
311.249 412.387 li
cp
.670588 .878431 .898039 rgb
f
314.508 416.043 mo
372.5 416.043 li
372.5 415.193 li
314.508 415.193 li
314.508 416.043 li
cp
.8 .796078 .792157 rgb
f
314.508 413.238 mo
372.5 413.238 li
372.5 412.387 li
314.508 412.387 li
314.508 413.238 li
cp
f
314.508 418.85 mo
372.5 418.85 li
372.5 417.999 li
314.508 417.999 li
314.508 418.85 li
cp
f
320.392 421.654 mo
366.617 421.654 li
366.617 420.804 li
320.392 420.804 li
320.392 421.654 li
cp
f
311.249 435.345 mo
296.5 435.345 li
296.5 450.093 li
311.249 450.093 li
311.249 435.345 li
cp
.670588 .878431 .898039 rgb
f
314.508 439.001 mo
372.5 439.001 li
372.5 438.15 li
314.508 438.15 li
314.508 439.001 li
cp
.8 .796078 .792157 rgb
f
314.508 436.195 mo
372.5 436.195 li
372.5 435.345 li
314.508 435.345 li
314.508 436.195 li
cp
f
314.508 441.808 mo
372.5 441.808 li
372.5 440.956 li
314.508 440.956 li
314.508 441.808 li
cp
f
320.392 444.611 mo
366.617 444.611 li
366.617 443.762 li
320.392 443.762 li
320.392 444.611 li
cp
f
311.249 458.302 mo
296.5 458.302 li
296.5 473.051 li
311.249 473.051 li
311.249 458.302 li
cp
.670588 .878431 .898039 rgb
f
314.508 461.958 mo
372.5 461.958 li
372.5 461.108 li
314.508 461.108 li
314.508 461.958 li
cp
.8 .796078 .792157 rgb
f
314.508 459.153 mo
372.5 459.153 li
372.5 458.302 li
314.508 458.302 li
314.508 459.153 li
cp
f
314.508 464.765 mo
372.5 464.765 li
372.5 463.914 li
314.508 463.914 li
314.508 464.765 li
cp
f
320.392 467.569 mo
366.617 467.569 li
366.617 466.719 li
320.392 466.719 li
320.392 467.569 li
cp
f
344.862 323.16 mo
295.084 323.16 li
295.084 320.406 li
344.862 320.406 li
344.862 323.16 li
cp
1 .6 .470588 rgb
f
394.642 325.971 mo
295.084 325.971 li
295.084 325.053 li
394.642 325.053 li
394.642 325.971 li
cp
.8 .796078 .792157 rgb
f
394.642 328.783 mo
295.084 328.783 li
295.084 327.865 li
394.642 327.865 li
394.642 328.783 li
cp
f
374.362 331.594 mo
315.362 331.594 li
315.362 330.676 li
374.362 330.676 li
374.362 331.594 li
cp
f
399.863 480 mo
470.142 480 li
470.142 315 li
399.863 315 li
399.863 480 li
cp
.901961 .898039 .898039 rgb
f
462.138 326.438 mo
441.95 326.438 li
441.95 323 li
462.138 323 li
462.138 326.438 li
cp
1 1 1 rgb
f
462.138 330.791 mo
441.95 330.791 li
441.95 329.751 li
462.138 329.751 li
462.138 330.791 li
cp
f
462.138 333.976 mo
441.95 333.976 li
441.95 332.936 li
462.138 332.936 li
462.138 333.976 li
cp
f
462.138 337.16 mo
441.95 337.16 li
441.95 336.12 li
462.138 336.12 li
462.138 337.16 li
cp
f
455.429 340.344 mo
441.95 340.344 li
441.95 339.304 li
455.429 339.304 li
455.429 340.344 li
cp
f
435.617 340.344 mo
407.867 340.344 li
407.867 323 li
435.617 323 li
435.617 340.344 li
cp
.8 .796078 .792157 rgb
f
462.138 357.47 mo
441.95 357.47 li
441.95 354.031 li
462.138 354.031 li
462.138 357.47 li
cp
1 1 1 rgb
f
462.138 361.822 mo
441.95 361.822 li
441.95 360.783 li
462.138 360.783 li
462.138 361.822 li
cp
f
462.138 365.007 mo
441.95 365.007 li
441.95 363.967 li
462.138 363.967 li
462.138 365.007 li
cp
f
462.138 368.191 mo
441.95 368.191 li
441.95 367.151 li
462.138 367.151 li
462.138 368.191 li
cp
f
455.429 371.375 mo
441.95 371.375 li
441.95 370.335 li
455.429 370.335 li
455.429 371.375 li
cp
f
435.617 371.375 mo
407.867 371.375 li
407.867 354.031 li
435.617 354.031 li
435.617 371.375 li
cp
.8 .796078 .792157 rgb
f
462.138 388.501 mo
441.95 388.501 li
441.95 385.063 li
462.138 385.063 li
462.138 388.501 li
cp
1 1 1 rgb
f
462.138 392.854 mo
441.95 392.854 li
441.95 391.814 li
462.138 391.814 li
462.138 392.854 li
cp
f
462.138 396.038 mo
441.95 396.038 li
441.95 394.998 li
462.138 394.998 li
462.138 396.038 li
cp
f
462.138 399.222 mo
441.95 399.222 li
441.95 398.182 li
462.138 398.182 li
462.138 399.222 li
cp
f
455.429 402.406 mo
441.95 402.406 li
441.95 401.366 li
455.429 401.366 li
455.429 402.406 li
cp
f
435.617 402.406 mo
407.867 402.406 li
407.867 385.063 li
435.617 385.063 li
435.617 402.406 li
cp
.8 .796078 .792157 rgb
f
462.138 419.532 mo
441.95 419.532 li
441.95 416.094 li
462.138 416.094 li
462.138 419.532 li
cp
1 1 1 rgb
f
462.138 423.885 mo
441.95 423.885 li
441.95 422.845 li
462.138 422.845 li
462.138 423.885 li
cp
f
462.138 427.069 mo
441.95 427.069 li
441.95 426.029 li
462.138 426.029 li
462.138 427.069 li
cp
f
462.138 430.253 mo
441.95 430.253 li
441.95 429.213 li
462.138 429.213 li
462.138 430.253 li
cp
f
455.429 433.438 mo
441.95 433.438 li
441.95 432.397 li
455.429 432.397 li
455.429 433.438 li
cp
f
435.617 433.438 mo
407.867 433.438 li
407.867 416.094 li
435.617 416.094 li
435.617 433.438 li
cp
.8 .796078 .792157 rgb
f
462.138 450.563 mo
441.95 450.563 li
441.95 447.125 li
462.138 447.125 li
462.138 450.563 li
cp
1 1 1 rgb
f
462.138 454.916 mo
441.95 454.916 li
441.95 453.876 li
462.138 453.876 li
462.138 454.916 li
cp
f
462.138 458.101 mo
441.95 458.101 li
441.95 457.061 li
462.138 457.061 li
462.138 458.101 li
cp
f
462.138 461.285 mo
441.95 461.285 li
441.95 460.245 li
462.138 460.245 li
462.138 461.285 li
cp
f
455.429 464.469 mo
441.95 464.469 li
441.95 463.429 li
455.429 463.429 li
455.429 464.469 li
cp
f
435.617 464.469 mo
407.867 464.469 li
407.867 447.125 li
435.617 447.125 li
435.617 464.469 li
cp
.8 .796078 .792157 rgb
f
480 315 mo
280 315 li
280 300 li
480 300 li
480 315 li
cp
1 .6 .470588 rgb
f
430.031 310.5 mo
320.031 310.5 li
320.031 304.5 li
430.031 304.5 li
430.031 310.5 li
cp
1 1 1 rgb
f
433.969 304.5 mo
439.969 304.5 li
439.969 310.5 li
433.969 310.5 li
433.969 304.5 li
cp
f
399.863 405.75 mo
289.863 405.75 li
289.863 337 li
399.863 337 li
399.863 405.75 li
cp
.396078 .415686 .45098 rgb
f
337.406 362.765 mo
352.319 371.375 li
337.406 379.985 li
337.406 362.765 li
cp
1 1 1 rgb
f
240 300 mo
40 300 li
40 480 li
240 480 li
240 300 li
cp
f
240 280 mo
40 280 li
40 290.001 li
240 290.001 li
240 280 li
cp
.568627 .827451 .85098 rgb
f
240 290.001 mo
40 290.001 li
40 300 li
240 300 li
240 290.001 li
cp
.901961 .898039 .898039 rgb
f
222.669 296.999 mo
57.3345 296.999 li
57.3345 293 li
222.669 293 li
222.669 296.999 li
cp
1 1 1 rgb
f
57.3345 290.001 mo
40 290.001 li
40 285 li
57.3345 285 li
57.3345 290.001 li
cp
.964706 .513726 .376471 rgb
f
98.6685 285 mo
57.3345 285 li
57.3345 290.001 li
98.6685 290.001 li
98.6685 285 li
cp
.901961 .898039 .898039 rgb
f
140.002 285 mo
98.6685 285 li
98.6685 290.001 li
140.002 290.001 li
140.002 285 li
cp
.85098 .847059 .843137 rgb
f
53.8594 296.999 mo
49.8628 296.999 li
49.8628 293 li
53.8594 293 li
53.8594 296.999 li
cp
.8 .796078 .792157 rgb
f
47.4717 296.999 mo
43.4731 296.999 li
43.4731 293 li
47.4717 293 li
47.4717 296.999 li
cp
f
236.529 296.999 mo
232.53 296.999 li
232.53 293 li
236.529 293 li
236.529 296.999 li
cp
f
230.142 296.999 mo
226.141 296.999 li
226.141 293 li
230.142 293 li
230.142 296.999 li
cp
f
79.3545 450.022 mo
45 450.022 li
45 415.668 li
79.3545 415.668 li
79.3545 450.022 li
cp
1 .839216 .501961 rgb
f
118.266 450.022 mo
83.9111 450.022 li
83.9111 415.668 li
118.266 415.668 li
118.266 450.022 li
cp
.8 .796078 .792157 rgb
f
79.3545 411.111 mo
45 411.111 li
45 376.757 li
79.3545 376.757 li
79.3545 411.111 li
cp
.396078 .415686 .45098 rgb
f
118.266 411.111 mo
83.9111 411.111 li
83.9111 376.757 li
118.266 376.757 li
118.266 411.111 li
cp
.568627 .827451 .85098 rgb
f
235 450.022 mo
200.646 450.022 li
200.646 415.668 li
235 415.668 li
235 450.022 li
cp
.396078 .415686 .45098 rgb
f
235 411.111 mo
200.646 411.111 li
200.646 376.757 li
235 376.757 li
235 411.111 li
cp
1 .839216 .501961 rgb
f
196.089 450.022 mo
122.823 450.022 li
122.823 376.757 li
196.089 376.757 li
196.089 450.022 li
cp
.768627 .929412 .945098 rgb
f
143.326 408.17 mo
122.823 434.593 li
163.828 434.593 li
143.326 408.17 li
cp
.670588 .878431 .898039 rgb
f
169.707 400.594 mo
143.326 434.593 li
196.088 434.593 li
169.707 400.594 li
cp
.568627 .827451 .85098 rgb
f
196.088 434.593 mo
122.823 434.593 li
122.823 450.022 li
196.088 450.022 li
196.088 434.593 li
cp
f
240 311.938 mo
40 311.938 li
40 300 li
240 300 li
240 311.938 li
cp
f
79.3545 300 mo
40 300 li
40 311.938 li
79.3545 311.938 li
79.3545 300 li
cp
.768627 .929412 .945098 rgb
f
168.797 304.469 mo
192.33 304.469 li
192.33 307.469 li
168.797 307.469 li
168.797 304.469 li
cp
1 1 1 rgb
f
195.913 304.469 mo
219.446 304.469 li
219.446 307.469 li
195.913 307.469 li
195.913 304.469 li
cp
f
223.029 304.469 mo
235.8 304.469 li
235.8 307.469 li
223.029 307.469 li
223.029 304.469 li
cp
.964706 .513726 .376471 rgb
f
79.3545 352.913 mo
45 352.913 li
45 318.559 li
79.3545 318.559 li
79.3545 352.913 li
cp
.901961 .898039 .898039 rgb
f
54 343.913 mo
54 327.559 li
70.3545 327.559 li
70.3545 343.913 li
54 343.913 li
cp
.8 .796078 .792157 rgb
f
75.6768 357.177 mo
48.6768 357.177 li
48.6768 356.177 li
75.6768 356.177 li
75.6768 357.177 li
cp
f
75.6768 360.239 mo
48.6768 360.239 li
48.6768 359.239 li
75.6768 359.239 li
75.6768 360.239 li
cp
f
75.6768 363.302 mo
48.6768 363.302 li
48.6768 362.302 li
75.6768 362.302 li
75.6768 363.302 li
cp
f
70.6768 370.136 mo
53.6768 370.136 li
53.6768 365.136 li
70.6768 365.136 li
70.6768 370.136 li
cp
.396078 .415686 .45098 rgb
f
67.1768 368.136 mo
57.1768 368.136 li
57.1768 367.136 li
67.1768 367.136 li
67.1768 368.136 li
cp
.8 .796078 .792157 rgb
f
168.044 338.191 mo
118.266 338.191 li
118.266 335.191 li
168.044 335.191 li
168.044 338.191 li
cp
.396078 .415686 .45098 rgb
f
217.823 341.253 mo
118.266 341.253 li
118.266 340.253 li
217.823 340.253 li
217.823 341.253 li
cp
.8 .796078 .792157 rgb
f
217.823 344.316 mo
118.266 344.316 li
118.266 343.316 li
217.823 343.316 li
217.823 344.316 li
cp
f
217.823 347.378 mo
118.266 347.378 li
118.266 346.378 li
217.823 346.378 li
217.823 347.378 li
cp
f
217.823 350.441 mo
118.266 350.441 li
118.266 349.441 li
217.823 349.441 li
217.823 350.441 li
cp
f
192.933 353.503 mo
143.154 353.503 li
143.154 352.503 li
192.933 352.503 li
192.933 353.503 li
cp
f
101.088 344.347 mo
105.555 348.813 li
105.555 339.881 li
101.088 344.347 li
cp
f
235 344.347 mo
230.534 348.813 li
230.534 339.881 li
235 344.347 li
cp
f
106.708 463.748 mo
97.5391 463.748 li
97.5391 454.579 li
106.708 454.579 li
106.708 463.748 li
cp
.396078 .415686 .45098 rgb
f
131.959 463.748 mo
122.79 463.748 li
122.79 454.579 li
131.959 454.579 li
131.959 463.748 li
cp
f
157.21 463.748 mo
148.041 463.748 li
148.041 454.579 li
157.21 454.579 li
157.21 463.748 li
cp
f
182.461 463.748 mo
173.292 463.748 li
173.292 454.579 li
182.461 454.579 li
182.461 463.748 li
cp
f
109.637 468.804 mo
94.6094 468.804 li
94.6094 467.137 li
109.637 467.137 li
109.637 468.804 li
cp
.8 .796078 .792157 rgb
f
109.637 470.86 mo
94.6094 470.86 li
94.6094 470.332 li
109.637 470.332 li
109.637 470.86 li
cp
f
109.637 472.605 mo
94.6094 472.605 li
94.6094 472.076 li
109.637 472.076 li
109.637 472.605 li
cp
f
105.98 474.349 mo
98.2671 474.349 li
98.2671 473.82 li
105.98 473.82 li
105.98 474.349 li
cp
f
134.889 468.804 mo
119.861 468.804 li
119.861 467.137 li
134.889 467.137 li
134.889 468.804 li
cp
f
134.889 470.86 mo
119.861 470.86 li
119.861 470.332 li
134.889 470.332 li
134.889 470.86 li
cp
f
134.889 472.605 mo
119.861 472.605 li
119.861 472.076 li
134.889 472.076 li
134.889 472.605 li
cp
f
131.231 474.349 mo
123.519 474.349 li
123.519 473.82 li
131.231 473.82 li
131.231 474.349 li
cp
f
160.14 468.804 mo
145.112 468.804 li
145.112 467.137 li
160.14 467.137 li
160.14 468.804 li
cp
f
160.14 470.86 mo
145.112 470.86 li
145.112 470.332 li
160.14 470.332 li
160.14 470.86 li
cp
f
160.14 472.605 mo
145.112 472.605 li
145.112 472.076 li
160.14 472.076 li
160.14 472.605 li
cp
f
156.483 474.349 mo
148.77 474.349 li
148.77 473.82 li
156.483 473.82 li
156.483 474.349 li
cp
f
185.392 468.804 mo
170.364 468.804 li
170.364 467.137 li
185.392 467.137 li
185.392 468.804 li
cp
f
185.392 470.86 mo
170.364 470.86 li
170.364 470.332 li
185.392 470.332 li
185.392 470.86 li
cp
f
185.392 472.605 mo
170.364 472.605 li
170.364 472.076 li
185.392 472.076 li
185.392 472.605 li
cp
f
181.734 474.349 mo
174.021 474.349 li
174.021 473.82 li
181.734 473.82 li
181.734 474.349 li
cp
f
720 300 mo
520 300 li
520 480 li
720 480 li
720 300 li
cp
1 1 1 rgb
f
720 280 mo
520 280 li
520 290.001 li
720 290.001 li
720 280 li
cp
.568627 .827451 .85098 rgb
f
720 290.001 mo
520 290.001 li
520 300 li
720 300 li
720 290.001 li
cp
.901961 .898039 .898039 rgb
f
702.67 296.999 mo
537.334 296.999 li
537.334 293 li
702.67 293 li
702.67 296.999 li
cp
1 1 1 rgb
f
537.334 290.001 mo
520 290.001 li
520 285 li
537.334 285 li
537.334 290.001 li
cp
.964706 .513726 .376471 rgb
f
578.668 285 mo
537.334 285 li
537.334 290.001 li
578.668 290.001 li
578.668 285 li
cp
.901961 .898039 .898039 rgb
f
620.002 285 mo
578.668 285 li
578.668 290.001 li
620.002 290.001 li
620.002 285 li
cp
.85098 .847059 .843137 rgb
f
533.859 296.999 mo
529.863 296.999 li
529.863 293 li
533.859 293 li
533.859 296.999 li
cp
.8 .796078 .792157 rgb
f
527.472 296.999 mo
523.473 296.999 li
523.473 293 li
527.472 293 li
527.472 296.999 li
cp
f
716.529 296.999 mo
712.53 296.999 li
712.53 293 li
716.529 293 li
716.529 296.999 li
cp
f
710.142 296.999 mo
706.141 296.999 li
706.141 293 li
710.142 293 li
710.142 296.999 li
cp
f
720 480 mo
520 480 li
520 468.063 li
720 468.063 li
720 480 li
cp
.396078 .415686 .45098 rgb
f
616.625 474.781 mo
545 474.781 li
545 473.281 li
616.625 473.281 li
616.625 474.781 li
cp
.8 .796078 .792157 rgb
f
668.965 474.781 mo
649.194 474.781 li
649.194 473.281 li
668.965 473.281 li
668.965 474.781 li
cp
f
695 474.781 mo
675.229 474.781 li
675.229 473.281 li
695 473.281 li
695 474.781 li
cp
f
582.08 436.679 mo
545 436.679 li
545 432.729 li
582.08 432.729 li
582.08 436.679 li
cp
.396078 .415686 .45098 rgb
f
582.08 441.914 mo
545 441.914 li
545 440.594 li
582.08 440.594 li
582.08 441.914 li
cp
.8 .796078 .792157 rgb
f
582.08 446.266 mo
545 446.266 li
545 444.945 li
582.08 444.945 li
582.08 446.266 li
cp
f
573.057 450.618 mo
554.025 450.618 li
554.025 449.298 li
573.057 449.298 li
573.057 450.618 li
cp
f
582.08 425.156 mo
545 425.156 li
545 401.222 li
582.08 401.222 li
582.08 425.156 li
cp
.568627 .827451 .85098 rgb
f
638.54 436.679 mo
601.46 436.679 li
601.46 432.729 li
638.54 432.729 li
638.54 436.679 li
cp
.396078 .415686 .45098 rgb
f
638.54 441.914 mo
601.46 441.914 li
601.46 440.594 li
638.54 440.594 li
638.54 441.914 li
cp
.8 .796078 .792157 rgb
f
638.54 446.266 mo
601.46 446.266 li
601.46 444.945 li
638.54 444.945 li
638.54 446.266 li
cp
f
629.517 450.618 mo
610.485 450.618 li
610.485 449.298 li
629.517 449.298 li
629.517 450.618 li
cp
f
638.54 425.156 mo
601.46 425.156 li
601.46 401.222 li
638.54 401.222 li
638.54 425.156 li
cp
.568627 .827451 .85098 rgb
f
695 436.679 mo
657.92 436.679 li
657.92 432.729 li
695 432.729 li
695 436.679 li
cp
.396078 .415686 .45098 rgb
f
695 441.914 mo
657.92 441.914 li
657.92 440.594 li
695 440.594 li
695 441.914 li
cp
.8 .796078 .792157 rgb
f
695 446.266 mo
657.92 446.266 li
657.92 444.945 li
695 444.945 li
695 446.266 li
cp
f
685.977 450.618 mo
666.945 450.618 li
666.945 449.298 li
685.977 449.298 li
685.977 450.618 li
cp
f
695 425.156 mo
657.92 425.156 li
657.92 401.222 li
695 401.222 li
695 425.156 li
cp
.568627 .827451 .85098 rgb
f
720 311.938 mo
520 311.938 li
520 300 li
720 300 li
720 311.938 li
cp
f
590.869 306.969 mo
571.099 306.969 li
571.099 304.969 li
590.869 304.969 li
590.869 306.969 li
cp
1 1 1 rgb
f
564.771 306.969 mo
545 306.969 li
545 304.969 li
564.771 304.969 li
564.771 306.969 li
cp
f
642.941 306.969 mo
623.171 306.969 li
623.171 304.969 li
642.941 304.969 li
642.941 306.969 li
cp
f
668.965 306.969 mo
649.194 306.969 li
649.194 304.969 li
668.965 304.969 li
668.965 306.969 li
cp
f
695 306.969 mo
675.229 306.969 li
675.229 304.969 li
695 304.969 li
695 306.969 li
cp
f
594.006 311.938 mo
620.031 311.938 li
620.031 300 li
594.006 300 li
594.006 311.938 li
cp
.670588 .878431 .898039 rgb
f
720 365.007 mo
520 365.007 li
520 311.938 li
720 311.938 li
720 365.007 li
cp
.768627 .929412 .945098 rgb
f
644.498 321.917 mo
594.006 321.917 li
594.006 317.972 li
644.498 317.972 li
644.498 321.917 li
cp
.568627 .827451 .85098 rgb
f
695 325.943 mo
594.006 325.943 li
594.006 324.628 li
695 324.628 li
695 325.943 li
cp
1 1 1 rgb
f
695 329.969 mo
594.006 329.969 li
594.006 328.654 li
695 328.654 li
695 329.969 li
cp
f
695 333.996 mo
594.006 333.996 li
594.006 332.681 li
695 332.681 li
695 333.996 li
cp
f
695 338.022 mo
594.006 338.022 li
594.006 336.708 li
695 336.708 li
695 338.022 li
cp
f
669.754 342.049 mo
619.253 342.049 li
619.253 340.734 li
669.754 340.734 li
669.754 342.049 li
cp
f
580.914 358.972 mo
545 358.972 li
545 324.125 li
580.914 324.125 li
580.914 358.972 li
cp
.94902 .94902 .94902 rgb
f
580.914 324.125 mo
545 324.125 li
545 317.972 li
580.914 317.972 li
580.914 324.125 li
cp
.396078 .415686 .45098 rgb
f
572.457 330.575 mo
553.457 330.575 li
553.457 327.575 li
572.457 327.575 li
572.457 330.575 li
cp
1 1 1 rgb
f
572.457 337.121 mo
553.457 337.121 li
553.457 334.121 li
572.457 334.121 li
572.457 337.121 li
cp
f
572.457 343.667 mo
553.457 343.667 li
553.457 340.667 li
572.457 340.667 li
572.457 343.667 li
cp
f
572.457 350.213 mo
553.457 350.213 li
553.457 347.213 li
572.457 347.213 li
572.457 350.213 li
cp
.568627 .827451 .85098 rgb
f
695 375.568 mo
545 375.568 li
545 372.268 li
695 372.268 li
695 375.568 li
cp
.396078 .415686 .45098 rgb
f
695 382.9 mo
545 382.9 li
545 381.4 li
695 381.4 li
695 382.9 li
cp
.8 .796078 .792157 rgb
f
695 386.9 mo
545 386.9 li
545 385.4 li
695 385.4 li
695 386.9 li
cp
f
657.5 390.9 mo
582.5 390.9 li
582.5 389.4 li
657.5 389.4 li
657.5 390.9 li
cp
f
960 300 mo
760 300 li
760 480 li
960 480 li
960 300 li
cp
.94902 .94902 .94902 rgb
f
960 280 mo
760 280 li
760 290.001 li
960 290.001 li
960 280 li
cp
.568627 .827451 .85098 rgb
f
960 290.001 mo
760 290.001 li
760 300 li
960 300 li
960 290.001 li
cp
.901961 .898039 .898039 rgb
f
942.67 296.999 mo
777.334 296.999 li
777.334 293 li
942.67 293 li
942.67 296.999 li
cp
1 1 1 rgb
f
777.334 290.001 mo
760 290.001 li
760 285 li
777.334 285 li
777.334 290.001 li
cp
.964706 .513726 .376471 rgb
f
818.668 285 mo
777.334 285 li
777.334 290.001 li
818.668 290.001 li
818.668 285 li
cp
.901961 .898039 .898039 rgb
f
860.002 285 mo
818.668 285 li
818.668 290.001 li
860.002 290.001 li
860.002 285 li
cp
.85098 .847059 .843137 rgb
f
773.859 296.999 mo
769.863 296.999 li
769.863 293 li
773.859 293 li
773.859 296.999 li
cp
.8 .796078 .792157 rgb
f
767.472 296.999 mo
763.473 296.999 li
763.473 293 li
767.472 293 li
767.472 296.999 li
cp
f
956.529 296.999 mo
952.53 296.999 li
952.53 293 li
956.529 293 li
956.529 296.999 li
cp
f
950.142 296.999 mo
946.141 296.999 li
946.141 293 li
950.142 293 li
950.142 296.999 li
cp
f
942.67 480 mo
777.334 480 li
777.334 377 li
942.67 377 li
942.67 480 li
cp
1 1 1 rgb
f
942.67 377 mo
777.334 377 li
777.334 312 li
942.67 312 li
942.67 377 li
cp
1 .6 .470588 rgb
f
900.002 349.5 mo
810.002 349.5 li
810.002 339.5 li
900.002 339.5 li
900.002 349.5 li
cp
1 1 1 rgb
f
900.002 339.5 mo
910.002 339.5 li
910.002 349.5 li
900.002 349.5 li
900.002 339.5 li
cp
.396078 .415686 .45098 rgb
f
960 312 mo
760 312 li
760 300 li
960 300 li
960 312 li
cp
f
777.334 304.5 mo
810.002 304.5 li
810.002 307.5 li
777.334 307.5 li
777.334 304.5 li
cp
.568627 .827451 .85098 rgb
f
821.71 437.852 mo
787.502 437.852 li
787.502 403.641 li
821.71 403.641 li
821.71 437.852 li
cp
1 .6 .470588 rgb
f
932.502 474.785 mo
898.294 474.785 li
898.294 403.641 li
932.502 403.641 li
932.502 474.785 li
cp
.901961 .898039 .898039 rgb
f
858.646 437.852 mo
824.431 437.852 li
824.431 403.641 li
858.646 403.641 li
858.646 437.852 li
cp
f
895.575 437.852 mo
861.358 437.852 li
861.358 403.641 li
895.575 403.641 li
895.575 437.852 li
cp
.568627 .827451 .85098 rgb
f
821.71 474.785 mo
787.502 474.785 li
787.502 440.573 li
821.71 440.573 li
821.71 474.785 li
cp
f
895.575 474.785 mo
824.431 474.785 li
824.431 440.573 li
895.575 440.573 li
895.575 474.785 li
cp
1 .6 .470588 rgb
f
826.64 393.82 mo
797.253 393.82 li
797.253 386.82 li
826.64 386.82 li
826.64 393.82 li
cp
.8 .796078 .792157 rgb
f
860.172 393.82 mo
830.794 393.82 li
830.794 386.82 li
860.172 386.82 li
860.172 393.82 li
cp
f
893.712 393.82 mo
864.335 393.82 li
864.335 386.82 li
893.712 386.82 li
893.712 393.82 li
cp
f
927.253 393.82 mo
897.869 393.82 li
897.869 386.82 li
927.253 386.82 li
927.253 393.82 li
cp
f
804.446 391.07 mo
804.446 389.57 li
819.446 389.57 li
819.446 391.07 li
804.446 391.07 li
cp
1 1 1 rgb
f
837.982 391.07 mo
837.982 389.57 li
852.982 389.57 li
852.982 391.07 li
837.982 391.07 li
cp
f
871.523 391.07 mo
871.523 389.57 li
886.523 389.57 li
886.523 391.07 li
871.523 391.07 li
cp
f
905.061 391.07 mo
905.061 389.57 li
920.061 389.57 li
920.061 391.07 li
905.061 391.07 li
cp
f
480 540 mo
280 540 li
280 720 li
480 720 li
480 540 li
cp
f
480 520 mo
280 520 li
280 530.001 li
480 530.001 li
480 520 li
cp
.568627 .827451 .85098 rgb
f
480 530.001 mo
280 530.001 li
280 540 li
480 540 li
480 530.001 li
cp
.901961 .898039 .898039 rgb
f
462.669 536.998 mo
297.334 536.998 li
297.334 533 li
462.669 533 li
462.669 536.998 li
cp
1 1 1 rgb
f
297.334 530.001 mo
280 530.001 li
280 525 li
297.334 525 li
297.334 530.001 li
cp
.964706 .513726 .376471 rgb
f
338.668 525 mo
297.334 525 li
297.334 530.001 li
338.668 530.001 li
338.668 525 li
cp
.901961 .898039 .898039 rgb
f
380.002 525 mo
338.668 525 li
338.668 530.001 li
380.002 530.001 li
380.002 525 li
cp
.85098 .847059 .843137 rgb
f
293.859 536.998 mo
289.863 536.998 li
289.863 533 li
293.859 533 li
293.859 536.998 li
cp
.8 .796078 .792157 rgb
f
287.472 536.998 mo
283.473 536.998 li
283.473 533 li
287.472 533 li
287.472 536.998 li
cp
f
476.529 536.998 mo
472.53 536.998 li
472.53 533 li
476.529 533 li
476.529 536.998 li
cp
f
470.142 536.998 mo
466.141 536.998 li
466.141 533 li
470.142 533 li
470.142 536.998 li
cp
f
380 640 mo
280 640 li
280 720 li
380 720 li
380 640 li
cp
.396078 .415686 .45098 rgb
f
291.333 699.496 mo
291.333 649.31 li
368.667 649.31 li
368.667 699.496 li
291.333 699.496 li
cp
1 1 1 rgb
f
366.196 697.026 mo
293.804 697.026 li
293.804 651.78 li
366.196 651.78 li
366.196 697.026 li
cp
.8 .796078 .792157 rgb
f
325.093 668.737 mo
334.908 674.403 li
325.093 680.068 li
325.093 668.737 li
cp
1 1 1 rgb
f
340.91 710.69 mo
319.09 710.69 li
319.09 705.559 li
340.91 705.559 li
340.91 710.69 li
cp
1 .839216 .501961 rgb
f
324.413 708.791 mo
324.413 707.458 li
335.586 707.458 li
335.586 708.791 li
324.413 708.791 li
cp
1 1 1 rgb
f
480 640 mo
380 640 li
380 720 li
480 720 li
480 640 li
cp
.278431 .309804 .34902 rgb
f
439.152 650.316 mo
410.688 650.316 li
410.688 648.363 li
439.152 648.363 li
439.152 650.316 li
cp
.396078 .415686 .45098 rgb
f
439.152 652.789 mo
410.688 652.789 li
410.688 652.197 li
439.152 652.197 li
439.152 652.789 li
cp
1 1 1 rgb
f
439.152 654.596 mo
410.688 654.596 li
410.688 654.006 li
439.152 654.006 li
439.152 654.596 li
cp
f
439.152 656.404 mo
410.688 656.404 li
410.688 655.814 li
439.152 655.814 li
439.152 656.404 li
cp
f
435.343 658.213 mo
410.688 658.213 li
410.688 657.621 li
435.343 657.621 li
435.343 658.213 li
cp
f
407.092 658.213 mo
391.333 658.213 li
391.333 648.363 li
407.092 648.363 li
407.092 658.213 li
cp
.8 .796078 .792157 rgb
f
439.152 668.125 mo
410.688 668.125 li
410.688 666.172 li
439.152 666.172 li
439.152 668.125 li
cp
.396078 .415686 .45098 rgb
f
439.152 670.596 mo
410.688 670.596 li
410.688 670.006 li
439.152 670.006 li
439.152 670.596 li
cp
1 1 1 rgb
f
439.152 672.404 mo
410.688 672.404 li
410.688 671.813 li
439.152 671.813 li
439.152 672.404 li
cp
f
439.152 674.213 mo
410.688 674.213 li
410.688 673.621 li
439.152 673.621 li
439.152 674.213 li
cp
f
435.343 676.021 mo
410.688 676.021 li
410.688 675.43 li
435.343 675.43 li
435.343 676.021 li
cp
f
407.092 676.021 mo
391.333 676.021 li
391.333 666.172 li
407.092 666.172 li
407.092 676.021 li
cp
.8 .796078 .792157 rgb
f
439.152 685.932 mo
410.688 685.932 li
410.688 683.979 li
439.152 683.979 li
439.152 685.932 li
cp
.396078 .415686 .45098 rgb
f
439.152 688.404 mo
410.688 688.404 li
410.688 687.813 li
439.152 687.813 li
439.152 688.404 li
cp
1 1 1 rgb
f
439.152 690.213 mo
410.688 690.213 li
410.688 689.621 li
439.152 689.621 li
439.152 690.213 li
cp
f
439.152 692.02 mo
410.688 692.02 li
410.688 691.43 li
439.152 691.43 li
439.152 692.02 li
cp
f
435.343 693.828 mo
410.688 693.828 li
410.688 693.238 li
435.343 693.238 li
435.343 693.828 li
cp
f
407.092 693.828 mo
391.333 693.828 li
391.333 683.979 li
407.092 683.979 li
407.092 693.828 li
cp
.8 .796078 .792157 rgb
f
439.152 703.74 mo
410.688 703.74 li
410.688 701.787 li
439.152 701.787 li
439.152 703.74 li
cp
.396078 .415686 .45098 rgb
f
439.152 706.211 mo
410.688 706.211 li
410.688 705.621 li
439.152 705.621 li
439.152 706.211 li
cp
1 1 1 rgb
f
439.152 708.02 mo
410.688 708.02 li
410.688 707.428 li
439.152 707.428 li
439.152 708.02 li
cp
f
439.152 709.828 mo
410.688 709.828 li
410.688 709.236 li
439.152 709.236 li
439.152 709.828 li
cp
f
435.343 711.637 mo
410.688 711.637 li
410.688 711.045 li
435.343 711.045 li
435.343 711.637 li
cp
f
407.092 711.637 mo
391.333 711.637 li
391.333 701.787 li
407.092 701.787 li
407.092 711.637 li
cp
.8 .796078 .792157 rgb
f
463.024 648.363 mo
468.667 654.006 li
457.383 654.006 li
463.024 648.363 li
cp
1 .839216 .501961 rgb
f
463.025 711.637 mo
457.383 705.994 li
468.667 705.994 li
463.025 711.637 li
cp
f
333.803 607.02 mo
291.333 607.02 li
291.333 602.025 li
333.803 602.025 li
333.803 607.02 li
cp
.8 .796078 .792157 rgb
f
333.803 617.914 mo
291.333 617.914 li
291.333 612.92 li
333.803 612.92 li
333.803 617.914 li
cp
f
333.803 628.807 mo
312.568 628.807 li
312.568 623.813 li
333.803 623.813 li
333.803 628.807 li
cp
.396078 .415686 .45098 rgb
f
333.803 569.072 mo
291.333 569.072 li
291.333 596.127 li
333.803 596.127 li
333.803 569.072 li
cp
1 .839216 .501961 rgb
f
297.857 589.602 mo
297.857 575.596 li
327.279 575.596 li
327.279 589.602 li
297.857 589.602 li
cp
1 .72549 .34902 rgb
f
460 557.879 mo
300 557.879 li
300 547.879 li
460 547.879 li
460 557.879 li
cp
1 .839216 .501961 rgb
f
365.834 553.717 mo
348.454 553.717 li
348.454 552.041 li
365.834 552.041 li
365.834 553.717 li
cp
1 1 1 rgb
f
342.891 553.717 mo
325.51 553.717 li
325.51 552.041 li
342.891 552.041 li
342.891 553.717 li
cp
f
411.612 553.717 mo
394.231 553.717 li
394.231 552.041 li
411.612 552.041 li
411.612 553.717 li
cp
f
388.722 553.717 mo
371.341 553.717 li
371.341 552.041 li
388.722 552.041 li
388.722 553.717 li
cp
f
434.49 553.717 mo
417.109 553.717 li
417.109 552.041 li
434.49 552.041 li
434.49 553.717 li
cp
f
468.667 628.807 mo
348.454 628.807 li
348.454 569.072 li
468.667 569.072 li
468.667 628.807 li
cp
.396078 .415686 .45098 rgb
f
355.454 621.807 mo
355.454 576.072 li
401.188 576.072 li
401.188 621.807 li
355.454 621.807 li
cp
.278431 .309804 .34902 rgb
f
434.927 579.337 mo
408.802 579.337 li
408.802 576.072 li
434.927 576.072 li
434.927 579.337 li
cp
1 .839216 .501961 rgb
f
461.052 582.67 mo
408.802 582.67 li
408.802 581.581 li
461.052 581.581 li
461.052 582.67 li
cp
.8 .796078 .792157 rgb
f
461.052 586.002 mo
408.802 586.002 li
408.802 584.914 li
461.052 584.914 li
461.052 586.002 li
cp
f
461.052 589.335 mo
408.802 589.335 li
408.802 588.246 li
461.052 588.246 li
461.052 589.335 li
cp
f
461.052 592.667 mo
408.802 592.667 li
408.802 591.579 li
461.052 591.579 li
461.052 592.667 li
cp
f
447.99 596 mo
421.865 596 li
421.865 594.912 li
447.99 594.912 li
447.99 596 li
cp
f
240 540 mo
40 540 li
40 720 li
240 720 li
240 540 li
cp
.396078 .415686 .45098 rgb
f
240 520 mo
40 520 li
40 530.001 li
240 530.001 li
240 520 li
cp
.568627 .827451 .85098 rgb
f
240 530.001 mo
40 530.001 li
40 540 li
240 540 li
240 530.001 li
cp
.901961 .898039 .898039 rgb
f
222.669 536.998 mo
57.3345 536.998 li
57.3345 533 li
222.669 533 li
222.669 536.998 li
cp
1 1 1 rgb
f
57.3345 530.001 mo
40 530.001 li
40 525 li
57.3345 525 li
57.3345 530.001 li
cp
.964706 .513726 .376471 rgb
f
98.6685 525 mo
57.3345 525 li
57.3345 530.001 li
98.6685 530.001 li
98.6685 525 li
cp
.901961 .898039 .898039 rgb
f
140.002 525 mo
98.6685 525 li
98.6685 530.001 li
140.002 530.001 li
140.002 525 li
cp
.85098 .847059 .843137 rgb
f
53.8594 536.998 mo
49.8628 536.998 li
49.8628 533 li
53.8594 533 li
53.8594 536.998 li
cp
.8 .796078 .792157 rgb
f
47.4717 536.998 mo
43.4731 536.998 li
43.4731 533 li
47.4717 533 li
47.4717 536.998 li
cp
f
236.529 536.998 mo
232.53 536.998 li
232.53 533 li
236.529 533 li
236.529 536.998 li
cp
f
230.142 536.998 mo
226.141 536.998 li
226.141 533 li
230.142 533 li
230.142 536.998 li
cp
f
235 585 mo
87.5 585 li
87.5 545 li
235 545 li
235 585 li
cp
1 1 1 rgb
f
127.835 575.125 mo
120.345 575.125 li
120.345 567.635 li
127.835 567.635 li
127.835 575.125 li
cp
.670588 .878431 .898039 rgb
f
129.81 576.851 mo
118.373 576.851 li
118.373 576.418 li
129.81 576.418 li
129.81 576.851 li
cp
.8 .796078 .792157 rgb
f
129.81 578.274 mo
118.373 578.274 li
118.373 577.843 li
129.81 577.843 li
129.81 578.274 li
cp
f
127.026 579.7 mo
121.157 579.7 li
121.157 579.269 li
127.026 579.269 li
127.026 579.7 li
cp
f
146.416 575.125 mo
138.925 575.125 li
138.925 567.635 li
146.416 567.635 li
146.416 575.125 li
cp
.670588 .878431 .898039 rgb
f
148.39 576.851 mo
136.953 576.851 li
136.953 576.418 li
148.39 576.418 li
148.39 576.851 li
cp
.8 .796078 .792157 rgb
f
148.39 578.274 mo
136.953 578.274 li
136.953 577.843 li
148.39 577.843 li
148.39 578.274 li
cp
f
145.606 579.7 mo
139.736 579.7 li
139.736 579.269 li
145.606 579.269 li
145.606 579.7 li
cp
f
164.994 575.125 mo
157.504 575.125 li
157.504 567.635 li
164.994 567.635 li
164.994 575.125 li
cp
.670588 .878431 .898039 rgb
f
166.968 576.851 mo
155.532 576.851 li
155.532 576.418 li
166.968 576.418 li
166.968 576.851 li
cp
.8 .796078 .792157 rgb
f
166.968 578.274 mo
155.532 578.274 li
155.532 577.843 li
166.968 577.843 li
166.968 578.274 li
cp
f
164.185 579.7 mo
158.316 579.7 li
158.316 579.269 li
164.185 579.269 li
164.185 579.7 li
cp
f
183.574 575.125 mo
176.083 575.125 li
176.083 567.635 li
183.574 567.635 li
183.574 575.125 li
cp
.670588 .878431 .898039 rgb
f
185.548 576.851 mo
174.111 576.851 li
174.111 576.418 li
185.548 576.418 li
185.548 576.851 li
cp
.8 .796078 .792157 rgb
f
185.548 578.274 mo
174.111 578.274 li
174.111 577.843 li
185.548 577.843 li
185.548 578.274 li
cp
f
182.765 579.7 mo
176.895 579.7 li
176.895 579.269 li
182.765 579.269 li
182.765 579.7 li
cp
f
202.153 575.125 mo
194.662 575.125 li
194.662 567.635 li
202.153 567.635 li
202.153 575.125 li
cp
.670588 .878431 .898039 rgb
f
204.127 576.851 mo
192.69 576.851 li
192.69 576.418 li
204.127 576.418 li
204.127 576.851 li
cp
.8 .796078 .792157 rgb
f
204.127 578.274 mo
192.69 578.274 li
192.69 577.843 li
204.127 577.843 li
204.127 578.274 li
cp
f
201.344 579.7 mo
195.475 579.7 li
195.475 579.269 li
201.344 579.269 li
201.344 579.7 li
cp
f
106.411 555.69 mo
109.569 558.849 li
109.569 552.532 li
106.411 555.69 li
cp
f
216.089 555.69 mo
212.931 558.849 li
212.931 552.532 li
216.089 555.69 li
cp
f
161.25 552.421 mo
118.556 552.421 li
118.556 550.3 li
161.25 550.3 li
161.25 552.421 li
cp
.396078 .415686 .45098 rgb
f
203.944 554.586 mo
118.556 554.586 li
118.556 553.879 li
203.944 553.879 li
203.944 554.586 li
cp
.8 .796078 .792157 rgb
f
203.944 556.751 mo
118.556 556.751 li
118.556 556.044 li
203.944 556.044 li
203.944 556.751 li
cp
f
203.944 558.916 mo
118.556 558.916 li
118.556 558.209 li
203.944 558.209 li
203.944 558.916 li
cp
f
189.25 561.082 mo
133.25 561.082 li
133.25 560.375 li
189.25 560.375 li
189.25 561.082 li
cp
f
87.5 585 mo
45 585 li
45 545 li
87.5 545 li
87.5 585 li
cp
.670588 .878431 .898039 rgb
f
76.75 559.423 mo
55.75 559.423 li
55.75 556.106 li
76.75 556.106 li
76.75 559.423 li
cp
1 1 1 rgb
f
76.75 566.658 mo
55.75 566.658 li
55.75 563.342 li
76.75 563.342 li
76.75 566.658 li
cp
f
72.25 573.894 mo
60.25 573.894 li
60.25 570.577 li
72.25 570.577 li
72.25 573.894 li
cp
.396078 .415686 .45098 rgb
f
87.5 715 mo
45 715 li
45 675 li
87.5 675 li
87.5 715 li
cp
.670588 .878431 .898039 rgb
f
53.7402 683.74 mo
51.0811 683.74 li
51.0811 681.081 li
53.7402 681.081 li
53.7402 683.74 li
cp
.396078 .415686 .45098 rgb
f
81.4189 683.74 mo
55.4434 683.74 li
55.4434 681.081 li
81.4189 681.081 li
81.4189 683.74 li
cp
1 1 1 rgb
f
53.7402 689.887 mo
51.0811 689.887 li
51.0811 687.229 li
53.7402 687.229 li
53.7402 689.887 li
cp
.396078 .415686 .45098 rgb
f
81.4189 689.887 mo
55.4434 689.887 li
55.4434 687.229 li
81.4189 687.229 li
81.4189 689.887 li
cp
1 1 1 rgb
f
53.7402 696.033 mo
51.0811 696.033 li
51.0811 693.375 li
53.7402 693.375 li
53.7402 696.033 li
cp
.396078 .415686 .45098 rgb
f
81.4189 696.033 mo
55.4434 696.033 li
55.4434 693.375 li
81.4189 693.375 li
81.4189 696.033 li
cp
1 1 1 rgb
f
235 715 mo
87.5 715 li
87.5 675 li
235 675 li
235 715 li
cp
.901961 .898039 .898039 rgb
f
110.863 694.768 mo
103.29 694.768 li
103.29 687.195 li
110.863 687.195 li
110.863 694.768 li
cp
1 1 1 rgb
f
136.246 694.768 mo
114.182 694.768 li
114.182 693.194 li
136.246 693.194 li
136.246 694.768 li
cp
.396078 .415686 .45098 rgb
f
136.246 697.748 mo
103.29 697.748 li
103.29 696.981 li
136.246 696.981 li
136.246 697.748 li
cp
.8 .796078 .792157 rgb
f
136.246 700.277 mo
103.29 700.277 li
103.29 699.511 li
136.246 699.511 li
136.246 700.277 li
cp
f
130.944 702.805 mo
108.592 702.805 li
108.592 702.038 li
130.944 702.038 li
130.944 702.805 li
cp
f
152.345 694.768 mo
144.772 694.768 li
144.772 687.195 li
152.345 687.195 li
152.345 694.768 li
cp
1 1 1 rgb
f
177.728 694.768 mo
155.664 694.768 li
155.664 693.194 li
177.728 693.194 li
177.728 694.768 li
cp
.396078 .415686 .45098 rgb
f
177.728 697.748 mo
144.772 697.748 li
144.772 696.981 li
177.728 696.981 li
177.728 697.748 li
cp
.8 .796078 .792157 rgb
f
177.728 700.277 mo
144.772 700.277 li
144.772 699.511 li
177.728 699.511 li
177.728 700.277 li
cp
f
172.426 702.805 mo
150.074 702.805 li
150.074 702.038 li
172.426 702.038 li
172.426 702.805 li
cp
f
193.828 694.768 mo
186.254 694.768 li
186.254 687.195 li
193.828 687.195 li
193.828 694.768 li
cp
1 1 1 rgb
f
219.21 694.768 mo
197.146 694.768 li
197.146 693.194 li
219.21 693.194 li
219.21 694.768 li
cp
.396078 .415686 .45098 rgb
f
219.21 697.748 mo
186.254 697.748 li
186.254 696.981 li
219.21 696.981 li
219.21 697.748 li
cp
.8 .796078 .792157 rgb
f
219.21 700.277 mo
186.254 700.277 li
186.254 699.511 li
219.21 699.511 li
219.21 700.277 li
cp
f
213.909 702.805 mo
191.557 702.805 li
191.557 702.038 li
213.909 702.038 li
213.909 702.805 li
cp
f
138.75 672.5 mo
45 672.5 li
45 596.5 li
138.75 596.5 li
138.75 672.5 li
cp
.901961 .898039 .898039 rgb
f
117.375 641.444 mo
66.375 641.444 li
66.375 606.308 li
117.375 606.308 li
117.375 641.444 li
cp
1 1 1 rgb
f
80.647 619.438 mo
66.375 637.829 li
94.918 637.829 li
80.647 619.438 li
cp
.901961 .898039 .898039 rgb
f
99.0122 614.163 mo
80.647 637.829 li
117.375 637.829 li
99.0122 614.163 li
cp
.8 .796078 .792157 rgb
f
117.375 637.854 mo
66.375 637.854 li
66.375 641.419 li
117.375 641.419 li
117.375 637.854 li
cp
f
117.375 649.914 mo
66.375 649.914 li
66.375 646.293 li
117.375 646.293 li
117.375 649.914 li
cp
.396078 .415686 .45098 rgb
f
117.375 654.713 mo
66.375 654.713 li
66.375 653.503 li
117.375 653.503 li
117.375 654.713 li
cp
.8 .796078 .792157 rgb
f
117.375 658.702 mo
66.375 658.702 li
66.375 657.492 li
117.375 657.492 li
117.375 658.702 li
cp
f
104.964 662.692 mo
78.7886 662.692 li
78.7886 661.481 li
104.964 661.481 li
104.964 662.692 li
cp
f
138.75 596.5 mo
45 596.5 li
45 587.5 li
138.75 587.5 li
138.75 596.5 li
cp
f
235 672.5 mo
141.25 672.5 li
141.25 587.5 li
235 587.5 li
235 672.5 li
cp
1 1 1 rgb
f
235 596.5 mo
141.25 596.5 li
141.25 587.5 li
235 587.5 li
235 596.5 li
cp
.8 .796078 .792157 rgb
f
156.332 633.154 mo
147.163 633.154 li
147.163 623.985 li
156.332 623.985 li
156.332 633.154 li
cp
.396078 .415686 .45098 rgb
f
210.385 626.105 mo
161.2 626.105 li
161.2 623.985 li
210.385 623.985 li
210.385 626.105 li
cp
.8 .796078 .792157 rgb
f
210.385 628.719 mo
161.2 628.719 li
161.2 628.048 li
210.385 628.048 li
210.385 628.719 li
cp
f
210.385 630.938 mo
161.2 630.938 li
161.2 630.265 li
210.385 630.265 li
210.385 630.938 li
cp
f
206.728 633.154 mo
164.857 633.154 li
164.857 632.482 li
206.728 632.482 li
206.728 633.154 li
cp
f
156.332 649.871 mo
147.163 649.871 li
147.163 640.702 li
156.332 640.702 li
156.332 649.871 li
cp
.396078 .415686 .45098 rgb
f
210.385 642.822 mo
161.2 642.822 li
161.2 640.702 li
210.385 640.702 li
210.385 642.822 li
cp
.8 .796078 .792157 rgb
f
210.385 645.436 mo
161.2 645.436 li
161.2 644.765 li
210.385 644.765 li
210.385 645.436 li
cp
f
210.385 647.654 mo
161.2 647.654 li
161.2 646.981 li
210.385 646.981 li
210.385 647.654 li
cp
f
206.728 649.871 mo
164.857 649.871 li
164.857 649.199 li
206.728 649.199 li
206.728 649.871 li
cp
f
156.332 666.588 mo
147.163 666.588 li
147.163 657.419 li
156.332 657.419 li
156.332 666.588 li
cp
.396078 .415686 .45098 rgb
f
210.385 659.539 mo
161.2 659.539 li
161.2 657.419 li
210.385 657.419 li
210.385 659.539 li
cp
.8 .796078 .792157 rgb
f
210.385 662.152 mo
161.2 662.152 li
161.2 661.481 li
210.385 661.481 li
210.385 662.152 li
cp
f
210.385 664.371 mo
161.2 664.371 li
161.2 663.698 li
210.385 663.698 li
210.385 664.371 li
cp
f
206.728 666.588 mo
164.857 666.588 li
164.857 665.916 li
206.728 665.916 li
206.728 666.588 li
cp
f
177.25 617.162 mo
147.163 617.162 li
147.163 602.412 li
177.25 602.412 li
177.25 617.162 li
cp
.670588 .878431 .898039 rgb
f
229.087 604.883 mo
183.083 604.883 li
183.083 602.412 li
229.087 602.412 li
229.087 604.883 li
cp
.396078 .415686 .45098 rgb
f
219.545 608.01 mo
183.083 608.01 li
183.083 607.263 li
219.545 607.263 li
219.545 608.01 li
cp
.8 .796078 .792157 rgb
f
229.087 610.298 mo
183.083 610.298 li
183.083 609.551 li
229.087 609.551 li
229.087 610.298 li
cp
f
229.087 612.586 mo
183.083 612.586 li
183.083 611.839 li
229.087 611.839 li
229.087 612.586 li
cp
f
229.087 614.874 mo
183.083 614.874 li
183.083 614.127 li
229.087 614.127 li
229.087 614.874 li
cp
f
206.441 617.162 mo
183.083 617.162 li
183.083 616.415 li
206.441 616.415 li
206.441 617.162 li
cp
f
720 540 mo
520 540 li
520 720 li
720 720 li
720 540 li
cp
1 1 1 rgb
f
720 520 mo
520 520 li
520 530.001 li
720 530.001 li
720 520 li
cp
.568627 .827451 .85098 rgb
f
720 530.001 mo
520 530.001 li
520 540 li
720 540 li
720 530.001 li
cp
.901961 .898039 .898039 rgb
f
702.67 536.998 mo
537.334 536.998 li
537.334 533 li
702.67 533 li
702.67 536.998 li
cp
1 1 1 rgb
f
537.334 530.001 mo
520 530.001 li
520 525 li
537.334 525 li
537.334 530.001 li
cp
.964706 .513726 .376471 rgb
f
578.668 525 mo
537.334 525 li
537.334 530.001 li
578.668 530.001 li
578.668 525 li
cp
.901961 .898039 .898039 rgb
f
620.002 525 mo
578.668 525 li
578.668 530.001 li
620.002 530.001 li
620.002 525 li
cp
.85098 .847059 .843137 rgb
f
533.859 536.998 mo
529.863 536.998 li
529.863 533 li
533.859 533 li
533.859 536.998 li
cp
.8 .796078 .792157 rgb
f
527.472 536.998 mo
523.473 536.998 li
523.473 533 li
527.472 533 li
527.472 536.998 li
cp
f
716.529 536.998 mo
712.53 536.998 li
712.53 533 li
716.529 533 li
716.529 536.998 li
cp
f
710.142 536.998 mo
706.141 536.998 li
706.141 533 li
710.142 533 li
710.142 536.998 li
cp
f
653.57 562.486 mo
574.396 562.486 li
574.396 550.452 li
653.57 550.452 li
653.57 562.486 li
cp
1 .6 .470588 rgb
f
653.57 550.452 mo
665.604 550.452 li
665.604 562.486 li
653.57 562.486 li
653.57 550.452 li
cp
.396078 .415686 .45098 rgb
f
578.396 557.969 mo
578.396 554.969 li
649.57 554.969 li
649.57 557.969 li
578.396 557.969 li
cp
1 1 1 rgb
f
720 643.455 mo
520 643.455 li
520 585.816 li
720 585.816 li
720 643.455 li
cp
.768627 .929412 .945098 rgb
f
569.684 575.65 mo
535.813 575.65 li
535.813 572.65 li
569.684 572.65 li
569.684 575.65 li
cp
.8 .796078 .792157 rgb
f
613.574 575.65 mo
579.701 575.65 li
579.701 572.65 li
613.574 572.65 li
613.574 575.65 li
cp
f
657.462 575.65 mo
623.592 575.65 li
623.592 572.65 li
657.462 572.65 li
657.462 575.65 li
cp
f
701.357 575.65 mo
667.488 575.65 li
667.488 572.65 li
701.357 572.65 li
701.357 575.65 li
cp
f
585.584 633.32 mo
548.215 633.32 li
548.215 595.949 li
585.584 595.949 li
585.584 633.32 li
cp
.568627 .827451 .85098 rgb
f
691.77 602.252 mo
601.315 602.252 li
601.315 595.949 li
691.77 595.949 li
691.77 602.252 li
cp
.396078 .415686 .45098 rgb
f
691.77 608.477 mo
601.315 608.477 li
601.315 606.875 li
691.77 606.875 li
691.77 608.477 li
cp
1 1 1 rgb
f
691.77 613.757 mo
601.315 613.757 li
601.315 612.154 li
691.77 612.154 li
691.77 613.757 li
cp
f
669.754 619.037 mo
623.332 619.037 li
623.332 617.434 li
669.754 617.434 li
669.754 619.037 li
cp
f
585.582 690.957 mo
548.215 690.957 li
548.215 653.587 li
585.582 653.587 li
585.582 690.957 li
cp
1 .6 .470588 rgb
f
579.092 664.25 mo
554.708 664.25 li
554.708 660.133 li
579.092 660.133 li
579.092 664.25 li
cp
.929412 .427451 .278431 rgb
f
579.092 668.445 mo
554.708 668.445 li
554.708 667.205 li
579.092 667.205 li
579.092 668.445 li
cp
1 1 1 rgb
f
579.092 672.641 mo
554.708 672.641 li
554.708 671.401 li
579.092 671.401 li
579.092 672.641 li
cp
f
566.896 676.836 mo
554.708 676.836 li
554.708 675.596 li
566.896 675.596 li
566.896 676.836 li
cp
f
585.584 698.308 mo
548.215 698.308 li
548.215 696.406 li
585.584 696.406 li
585.584 698.308 li
cp
.396078 .415686 .45098 rgb
f
585.584 703.93 mo
548.215 703.93 li
548.215 702.028 li
585.584 702.028 li
585.584 703.93 li
cp
.8 .796078 .792157 rgb
f
567.48 709.549 mo
548.215 709.549 li
548.215 707.648 li
567.48 707.648 li
567.48 709.549 li
cp
f
638.687 698.308 mo
601.315 698.308 li
601.315 696.406 li
638.687 696.406 li
638.687 698.308 li
cp
.396078 .415686 .45098 rgb
f
638.687 703.93 mo
601.315 703.93 li
601.315 702.028 li
638.687 702.028 li
638.687 703.93 li
cp
.8 .796078 .792157 rgb
f
620.581 709.549 mo
601.315 709.549 li
601.315 707.648 li
620.581 707.648 li
620.581 709.549 li
cp
f
691.78 698.308 mo
654.411 698.308 li
654.411 696.406 li
691.78 696.406 li
691.78 698.308 li
cp
.396078 .415686 .45098 rgb
f
691.78 703.93 mo
654.411 703.93 li
654.411 702.028 li
691.78 702.028 li
691.78 703.93 li
cp
.8 .796078 .792157 rgb
f
673.677 709.549 mo
654.411 709.549 li
654.411 707.648 li
673.677 707.648 li
673.677 709.549 li
cp
f
691.78 690.957 mo
654.411 690.957 li
654.411 653.587 li
691.78 653.587 li
691.78 690.957 li
cp
1 .784314 .427451 rgb
f
654.58 691.123 mo
654.244 690.79 li
691.612 653.418 li
691.951 653.756 li
654.58 691.123 li
cp
1 .72549 .34902 rgb
f
691.612 691.123 mo
654.244 653.756 li
654.58 653.418 li
691.951 690.79 li
691.612 691.123 li
cp
f
654.648 690.719 mo
691.545 690.719 li
691.545 653.824 li
654.648 653.824 li
654.648 690.719 li
cp
692.019 691.195 mo
654.173 691.195 li
654.173 653.35 li
692.019 653.35 li
692.019 691.195 li
cp
f
638.687 690.957 mo
601.315 690.957 li
601.315 653.587 li
638.687 653.587 li
638.687 690.957 li
cp
.670588 .878431 .898039 rgb
f
601.484 691.123 mo
601.148 690.79 li
638.518 653.418 li
638.853 653.756 li
601.484 691.123 li
cp
.568627 .827451 .85098 rgb
f
638.518 691.123 mo
601.148 653.756 li
601.484 653.418 li
638.853 690.79 li
638.518 691.123 li
cp
f
601.554 690.719 mo
638.447 690.719 li
638.447 653.824 li
601.554 653.824 li
601.554 690.719 li
cp
638.923 691.195 mo
601.08 691.195 li
601.08 653.35 li
638.923 653.35 li
638.923 691.195 li
cp
f
556.904 604.64 mo
554.245 604.64 li
554.245 601.98 li
556.904 601.98 li
556.904 604.64 li
cp
.768627 .929412 .945098 rgb
f
579.584 604.64 mo
558.607 604.64 li
558.607 601.98 li
579.584 601.98 li
579.584 604.64 li
cp
1 1 1 rgb
f
556.904 610.785 mo
554.245 610.785 li
554.245 608.127 li
556.904 608.127 li
556.904 610.785 li
cp
.768627 .929412 .945098 rgb
f
579.584 610.785 mo
558.607 610.785 li
558.607 608.127 li
579.584 608.127 li
579.584 610.785 li
cp
1 1 1 rgb
f
960 540 mo
760 540 li
760 720 li
960 720 li
960 540 li
cp
f
960 520 mo
760 520 li
760 530.001 li
960 530.001 li
960 520 li
cp
.568627 .827451 .85098 rgb
f
960 530.001 mo
760 530.001 li
760 540 li
960 540 li
960 530.001 li
cp
.901961 .898039 .898039 rgb
f
942.67 536.998 mo
777.334 536.998 li
777.334 533 li
942.67 533 li
942.67 536.998 li
cp
1 1 1 rgb
f
777.334 530.001 mo
760 530.001 li
760 525 li
777.334 525 li
777.334 530.001 li
cp
.964706 .513726 .376471 rgb
f
818.668 525 mo
777.334 525 li
777.334 530.001 li
818.668 530.001 li
818.668 525 li
cp
.901961 .898039 .898039 rgb
f
860.002 525 mo
818.668 525 li
818.668 530.001 li
860.002 530.001 li
860.002 525 li
cp
.85098 .847059 .843137 rgb
f
773.859 536.998 mo
769.863 536.998 li
769.863 533 li
773.859 533 li
773.859 536.998 li
cp
.8 .796078 .792157 rgb
f
767.472 536.998 mo
763.473 536.998 li
763.473 533 li
767.472 533 li
767.472 536.998 li
cp
f
956.529 536.998 mo
952.53 536.998 li
952.53 533 li
956.529 533 li
956.529 536.998 li
cp
f
950.142 536.998 mo
946.141 536.998 li
946.141 533 li
950.142 533 li
950.142 536.998 li
cp
f
950.142 720 mo
769.863 720 li
769.863 677.833 li
950.142 677.833 li
950.142 720 li
cp
.768627 .929412 .945098 rgb
f
796.664 698.018 mo
785.153 698.018 li
785.153 686.506 li
796.664 686.506 li
796.664 698.018 li
cp
1 1 1 rgb
f
800.342 704.365 mo
781.475 704.365 li
781.475 702.271 li
800.342 702.271 li
800.342 704.365 li
cp
.396078 .415686 .45098 rgb
f
800.342 706.947 mo
781.475 706.947 li
781.475 706.283 li
800.342 706.283 li
800.342 706.947 li
cp
1 1 1 rgb
f
800.342 709.139 mo
781.475 709.139 li
781.475 708.475 li
800.342 708.475 li
800.342 709.139 li
cp
f
795.749 711.326 mo
786.066 711.326 li
786.066 710.664 li
795.749 710.664 li
795.749 711.326 li
cp
f
831.211 698.018 mo
819.7 698.018 li
819.7 686.506 li
831.211 686.506 li
831.211 698.018 li
cp
f
834.89 704.365 mo
816.021 704.365 li
816.021 702.271 li
834.89 702.271 li
834.89 704.365 li
cp
.396078 .415686 .45098 rgb
f
834.89 706.947 mo
816.021 706.947 li
816.021 706.283 li
834.89 706.283 li
834.89 706.947 li
cp
1 1 1 rgb
f
834.89 709.139 mo
816.021 709.139 li
816.021 708.475 li
834.89 708.475 li
834.89 709.139 li
cp
f
830.297 711.326 mo
820.613 711.326 li
820.613 710.664 li
830.297 710.664 li
830.297 711.326 li
cp
f
865.758 698.018 mo
854.247 698.018 li
854.247 686.506 li
865.758 686.506 li
865.758 698.018 li
cp
f
869.437 704.365 mo
850.568 704.365 li
850.568 702.271 li
869.437 702.271 li
869.437 704.365 li
cp
.396078 .415686 .45098 rgb
f
869.437 706.947 mo
850.568 706.947 li
850.568 706.283 li
869.437 706.283 li
869.437 706.947 li
cp
1 1 1 rgb
f
869.437 709.139 mo
850.568 709.139 li
850.568 708.475 li
869.437 708.475 li
869.437 709.139 li
cp
f
864.844 711.326 mo
855.16 711.326 li
855.16 710.664 li
864.844 710.664 li
864.844 711.326 li
cp
f
900.305 698.018 mo
888.794 698.018 li
888.794 686.506 li
900.305 686.506 li
900.305 698.018 li
cp
f
903.983 704.365 mo
885.115 704.365 li
885.115 702.271 li
903.983 702.271 li
903.983 704.365 li
cp
.396078 .415686 .45098 rgb
f
903.983 706.947 mo
885.115 706.947 li
885.115 706.283 li
903.983 706.283 li
903.983 706.947 li
cp
1 1 1 rgb
f
903.983 709.139 mo
885.115 709.139 li
885.115 708.475 li
903.983 708.475 li
903.983 709.139 li
cp
f
899.391 711.326 mo
889.707 711.326 li
889.707 710.664 li
899.391 710.664 li
899.391 711.326 li
cp
f
934.852 698.018 mo
923.341 698.018 li
923.341 686.506 li
934.852 686.506 li
934.852 698.018 li
cp
f
938.53 704.365 mo
919.663 704.365 li
919.663 702.271 li
938.53 702.271 li
938.53 704.365 li
cp
.396078 .415686 .45098 rgb
f
938.53 706.947 mo
919.663 706.947 li
919.663 706.283 li
938.53 706.283 li
938.53 706.947 li
cp
1 1 1 rgb
f
938.53 709.139 mo
919.663 709.139 li
919.663 708.475 li
938.53 708.475 li
938.53 709.139 li
cp
f
933.938 711.326 mo
924.254 711.326 li
924.254 710.664 li
933.938 710.664 li
933.938 711.326 li
cp
f
809.333 565.25 mo
760 565.25 li
760 540 li
809.333 540 li
809.333 565.25 li
cp
.768627 .929412 .945098 rgb
f
769.863 556.25 mo
769.863 549 li
799.47 549 li
799.47 556.25 li
769.863 556.25 li
cp
1 1 1 rgb
f
809.333 657.815 mo
769.863 657.815 li
769.863 630.911 li
809.333 630.911 li
809.333 657.815 li
cp
.768627 .929412 .945098 rgb
f
856.269 657.815 mo
816.8 657.815 li
816.8 630.911 li
856.269 630.911 li
856.269 657.815 li
cp
.85098 .847059 .843137 rgb
f
903.205 657.815 mo
863.735 657.815 li
863.735 630.911 li
903.205 630.911 li
903.205 657.815 li
cp
.768627 .929412 .945098 rgb
f
950.142 657.815 mo
910.672 657.815 li
910.672 630.911 li
950.142 630.911 li
950.142 657.815 li
cp
f
809.333 662.441 mo
769.863 662.441 li
769.863 661.25 li
809.333 661.25 li
809.333 662.441 li
cp
.396078 .415686 .45098 rgb
f
809.333 665.964 mo
769.863 665.964 li
769.863 664.772 li
809.333 664.772 li
809.333 665.964 li
cp
.8 .796078 .792157 rgb
f
790.212 669.484 mo
769.863 669.484 li
769.863 668.293 li
790.212 668.293 li
790.212 669.484 li
cp
f
856.27 662.441 mo
816.8 662.441 li
816.8 661.25 li
856.27 661.25 li
856.27 662.441 li
cp
.396078 .415686 .45098 rgb
f
856.27 665.964 mo
816.8 665.964 li
816.8 664.772 li
856.27 664.772 li
856.27 665.964 li
cp
.8 .796078 .792157 rgb
f
837.148 669.484 mo
816.8 669.484 li
816.8 668.293 li
837.148 668.293 li
837.148 669.484 li
cp
f
903.206 662.441 mo
863.736 662.441 li
863.736 661.25 li
903.206 661.25 li
903.206 662.441 li
cp
.396078 .415686 .45098 rgb
f
903.206 665.964 mo
863.736 665.964 li
863.736 664.772 li
903.206 664.772 li
903.206 665.964 li
cp
.8 .796078 .792157 rgb
f
884.085 669.484 mo
863.736 669.484 li
863.736 668.293 li
884.085 668.293 li
884.085 669.484 li
cp
f
950.143 662.441 mo
910.673 662.441 li
910.673 661.25 li
950.143 661.25 li
950.143 662.441 li
cp
.396078 .415686 .45098 rgb
f
950.143 665.964 mo
910.673 665.964 li
910.673 664.772 li
950.143 664.772 li
950.143 665.964 li
cp
.8 .796078 .792157 rgb
f
931.021 669.484 mo
910.673 669.484 li
910.673 668.293 li
931.021 668.293 li
931.021 669.484 li
cp
f
960 624 mo
760 624 li
760 565.25 li
960 565.25 li
960 624 li
cp
.85098 .847059 .843137 rgb
f
910.672 574.891 mo
950.142 574.891 li
950.142 614.359 li
910.672 614.359 li
910.672 574.891 li
cp
1 1 1 rgb
f
921.672 603.359 mo
921.672 585.891 li
939.142 585.891 li
939.142 603.359 li
921.672 603.359 li
cp
.901961 .898039 .898039 rgb
f
772.521 577.551 mo
769.863 577.551 li
769.863 574.891 li
772.521 574.891 li
772.521 577.551 li
cp
.396078 .415686 .45098 rgb
f
809.333 577.551 mo
774.225 577.551 li
774.225 574.891 li
809.333 574.891 li
809.333 577.551 li
cp
1 1 1 rgb
f
772.521 586.753 mo
769.863 586.753 li
769.863 584.094 li
772.521 584.094 li
772.521 586.753 li
cp
.396078 .415686 .45098 rgb
f
809.333 586.753 mo
774.225 586.753 li
774.225 584.094 li
809.333 584.094 li
809.333 586.753 li
cp
1 1 1 rgb
f
772.521 595.955 mo
769.863 595.955 li
769.863 593.296 li
772.521 593.296 li
772.521 595.955 li
cp
.396078 .415686 .45098 rgb
f
809.333 595.955 mo
774.225 595.955 li
774.225 593.296 li
809.333 593.296 li
809.333 595.955 li
cp
1 1 1 rgb
f
772.521 605.157 mo
769.863 605.157 li
769.863 602.498 li
772.521 602.498 li
772.521 605.157 li
cp
.396078 .415686 .45098 rgb
f
809.333 605.157 mo
774.225 605.157 li
774.225 602.498 li
809.333 602.498 li
809.333 605.157 li
cp
1 1 1 rgb
f
772.521 614.359 mo
769.863 614.359 li
769.863 611.701 li
772.521 611.701 li
772.521 614.359 li
cp
.396078 .415686 .45098 rgb
f
809.333 614.359 mo
774.225 614.359 li
774.225 611.701 li
809.333 611.701 li
809.333 614.359 li
cp
1 1 1 rgb
f
876.199 578.309 mo
836.534 578.309 li
836.534 574.891 li
876.199 574.891 li
876.199 578.309 li
cp
.396078 .415686 .45098 rgb
f
903.205 582.202 mo
836.534 582.202 li
836.534 580.837 li
903.205 580.837 li
903.205 582.202 li
cp
1 1 1 rgb
f
903.205 586.785 mo
836.534 586.785 li
836.534 585.422 li
903.205 585.422 li
903.205 586.785 li
cp
f
903.205 591.371 mo
836.534 591.371 li
836.534 590.006 li
903.205 590.006 li
903.205 591.371 li
cp
f
876.199 595.955 mo
836.534 595.955 li
836.534 594.592 li
876.199 594.592 li
876.199 595.955 li
cp
f
840.456 548.842 mo
816.768 548.842 li
816.768 547.926 li
840.456 547.926 li
840.456 548.842 li
cp
.85098 .847059 .843137 rgb
f
840.456 551.668 mo
816.768 551.668 li
816.768 550.754 li
840.456 550.754 li
840.456 551.668 li
cp
f
834.534 557.324 mo
822.689 557.324 li
822.689 556.408 li
834.534 556.408 li
834.534 557.324 li
cp
f
840.456 554.496 mo
816.768 554.496 li
816.768 553.582 li
840.456 553.582 li
840.456 554.496 li
cp
f
877.047 548.842 mo
853.358 548.842 li
853.358 547.926 li
877.047 547.926 li
877.047 548.842 li
cp
f
877.047 551.668 mo
853.358 551.668 li
853.358 550.754 li
877.047 550.754 li
877.047 551.668 li
cp
f
871.127 557.324 mo
859.281 557.324 li
859.281 556.408 li
871.127 556.408 li
871.127 557.324 li
cp
f
877.047 554.496 mo
853.358 554.496 li
853.358 553.582 li
877.047 553.582 li
877.047 554.496 li
cp
f
913.64 548.842 mo
889.952 548.842 li
889.952 547.926 li
913.64 547.926 li
913.64 548.842 li
cp
f
913.64 551.668 mo
889.952 551.668 li
889.952 550.754 li
913.64 550.754 li
913.64 551.668 li
cp
f
907.718 557.324 mo
895.872 557.324 li
895.872 556.408 li
907.718 556.408 li
907.718 557.324 li
cp
f
913.64 554.496 mo
889.952 554.496 li
889.952 553.582 li
913.64 553.582 li
913.64 554.496 li
cp
f
950.231 548.842 mo
926.543 548.842 li
926.543 547.926 li
950.231 547.926 li
950.231 548.842 li
cp
f
950.231 551.668 mo
926.543 551.668 li
926.543 550.754 li
950.231 550.754 li
950.231 551.668 li
cp
f
944.311 557.324 mo
932.465 557.324 li
932.465 556.408 li
944.311 556.408 li
944.311 557.324 li
cp
f
950.231 554.496 mo
926.543 554.496 li
926.543 553.582 li
950.231 553.582 li
950.231 554.496 li
cp
f
480 780 mo
280 780 li
280 960 li
480 960 li
480 780 li
cp
1 1 1 rgb
f
480 760 mo
280 760 li
280 770.001 li
480 770.001 li
480 760 li
cp
.568627 .827451 .85098 rgb
f
480 770.001 mo
280 770.001 li
280 780 li
480 780 li
480 770.001 li
cp
.901961 .898039 .898039 rgb
f
462.669 776.998 mo
297.334 776.998 li
297.334 773 li
462.669 773 li
462.669 776.998 li
cp
1 1 1 rgb
f
297.334 770.001 mo
280 770.001 li
280 765 li
297.334 765 li
297.334 770.001 li
cp
.964706 .513726 .376471 rgb
f
338.668 765 mo
297.334 765 li
297.334 770.001 li
338.668 770.001 li
338.668 765 li
cp
.901961 .898039 .898039 rgb
f
380.002 765 mo
338.668 765 li
338.668 770.001 li
380.002 770.001 li
380.002 765 li
cp
.85098 .847059 .843137 rgb
f
293.859 776.998 mo
289.863 776.998 li
289.863 773 li
293.859 773 li
293.859 776.998 li
cp
.8 .796078 .792157 rgb
f
287.472 776.998 mo
283.473 776.998 li
283.473 773 li
287.472 773 li
287.472 776.998 li
cp
f
476.529 776.998 mo
472.53 776.998 li
472.53 773 li
476.529 773 li
476.529 776.998 li
cp
f
470.142 776.998 mo
466.141 776.998 li
466.141 773 li
470.142 773 li
470.142 776.998 li
cp
f
470.141 960 mo
289.863 960 li
289.863 794 li
470.141 794 li
470.141 960 li
cp
.768627 .929412 .945098 rgb
f
342.257 849.659 mo
330.954 849.659 li
330.954 838.354 li
342.257 838.354 li
342.257 849.659 li
cp
1 1 1 rgb
f
345.868 853.729 mo
327.341 853.729 li
327.341 853.078 li
345.868 853.078 li
345.868 853.729 li
cp
f
345.868 855.881 mo
327.341 855.881 li
327.341 855.229 li
345.868 855.229 li
345.868 855.881 li
cp
f
341.36 858.03 mo
331.851 858.03 li
331.851 857.379 li
341.36 857.379 li
341.36 858.03 li
cp
f
371.188 849.659 mo
359.886 849.659 li
359.886 838.354 li
371.188 838.354 li
371.188 849.659 li
cp
f
374.8 853.729 mo
356.272 853.729 li
356.272 853.078 li
374.8 853.078 li
374.8 853.729 li
cp
f
374.8 855.881 mo
356.272 855.881 li
356.272 855.229 li
374.8 855.229 li
374.8 855.881 li
cp
f
370.292 858.03 mo
360.782 858.03 li
360.782 857.379 li
370.292 857.379 li
370.292 858.03 li
cp
f
400.12 849.659 mo
388.817 849.659 li
388.817 838.354 li
400.12 838.354 li
400.12 849.659 li
cp
f
403.731 853.729 mo
385.204 853.729 li
385.204 853.078 li
403.731 853.078 li
403.731 853.729 li
cp
f
403.731 855.881 mo
385.204 855.881 li
385.204 855.229 li
403.731 855.229 li
403.731 855.881 li
cp
f
399.224 858.03 mo
389.714 858.03 li
389.714 857.379 li
399.224 857.379 li
399.224 858.03 li
cp
f
429.052 849.659 mo
417.749 849.659 li
417.749 838.354 li
429.052 838.354 li
429.052 849.659 li
cp
f
432.663 853.729 mo
414.136 853.729 li
414.136 853.078 li
432.663 853.078 li
432.663 853.729 li
cp
f
432.663 855.881 mo
414.136 855.881 li
414.136 855.229 li
432.663 855.229 li
432.663 855.881 li
cp
f
428.155 858.03 mo
418.646 858.03 li
418.646 857.379 li
428.155 857.379 li
428.155 858.03 li
cp
f
442.502 830.833 mo
317.502 830.833 li
317.502 827.554 li
442.502 827.554 li
442.502 830.833 li
cp
f
438.417 820.75 mo
303.002 820.75 li
303.002 810.75 li
438.417 810.75 li
438.417 820.75 li
cp
.568627 .827451 .85098 rgb
f
395.587 813.75 mo
414.172 813.75 li
414.172 817.75 li
395.587 817.75 li
395.587 813.75 li
cp
1 1 1 rgb
f
417.001 813.75 mo
435.587 813.75 li
435.587 817.75 li
417.001 817.75 li
417.001 813.75 li
cp
f
438.417 810.75 mo
457.002 810.75 li
457.002 820.75 li
438.417 820.75 li
438.417 810.75 li
cp
.396078 .415686 .45098 rgb
f
318.867 816.359 mo
306.814 816.359 li
306.814 815.141 li
318.867 815.141 li
318.867 816.359 li
cp
1 1 1 rgb
f
334.732 816.359 mo
322.679 816.359 li
322.679 815.141 li
334.732 815.141 li
334.732 816.359 li
cp
f
350.605 816.359 mo
338.552 816.359 li
338.552 815.141 li
350.605 815.141 li
350.605 816.359 li
cp
f
366.478 816.359 mo
354.424 816.359 li
354.424 815.141 li
366.478 815.141 li
366.478 816.359 li
cp
f
480 794 mo
280 794 li
280 780 li
480 780 li
480 794 li
cp
.396078 .415686 .45098 rgb
f
332.903 788 mo
289.863 788 li
289.863 786 li
332.903 786 li
332.903 788 li
cp
.768627 .929412 .945098 rgb
f
364.355 788 mo
352.475 788 li
352.475 786 li
364.355 786 li
364.355 788 li
cp
f
380 788 mo
368.12 788 li
368.12 786 li
380 786 li
380 788 li
cp
f
463.141 790.5 mo
416.172 790.5 li
416.172 783.5 li
463.141 783.5 li
463.141 790.5 li
cp
1 1 1 rgb
f
463.141 783.5 mo
470.142 783.5 li
470.142 790.5 li
463.141 790.5 li
463.141 783.5 li
cp
.568627 .827451 .85098 rgb
f
349.323 800.934 mo
303.002 800.934 li
303.002 798.166 li
349.323 798.166 li
349.323 800.934 li
cp
f
395.644 803.76 mo
303.002 803.76 li
303.002 802.836 li
395.644 802.836 li
395.644 803.76 li
cp
f
395.644 806.584 mo
303.002 806.584 li
303.002 805.66 li
395.644 805.66 li
395.644 806.584 li
cp
f
470.142 904.834 mo
289.863 904.834 li
289.863 864.834 li
470.142 864.834 li
470.142 904.834 li
cp
.396078 .415686 .45098 rgb
f
303.002 887.587 mo
307.437 892.021 li
307.437 883.152 li
303.002 887.587 li
cp
1 1 1 rgb
f
457.002 887.587 mo
452.568 892.021 li
452.568 883.152 li
457.002 887.587 li
cp
f
409.62 882.996 mo
364.493 882.996 li
364.493 880.018 li
409.62 880.018 li
409.62 882.996 li
cp
.568627 .827451 .85098 rgb
f
439.95 886.036 mo
364.493 886.036 li
364.493 885.043 li
439.95 885.043 li
439.95 886.036 li
cp
1 1 1 rgb
f
439.95 889.075 mo
364.493 889.075 li
364.493 888.082 li
439.95 888.082 li
439.95 889.075 li
cp
f
439.95 892.114 mo
364.58 892.114 li
364.58 891.123 li
439.95 891.123 li
439.95 892.114 li
cp
f
426.979 895.156 mo
364.58 895.156 li
364.58 894.165 li
426.979 894.165 li
426.979 895.156 li
cp
f
359.301 874.512 mo
320.055 874.512 li
320.055 895.156 li
359.301 895.156 li
359.301 874.512 li
cp
.568627 .827451 .85098 rgb
f
331.585 941.291 mo
303.002 941.291 li
303.002 912.709 li
331.585 912.709 li
331.585 941.291 li
cp
f
331.585 952.125 mo
303.002 952.125 li
303.002 941.291 li
331.585 941.291 li
331.585 952.125 li
cp
1 1 1 rgb
f
327.835 944.387 mo
306.752 944.387 li
306.752 943.441 li
327.835 943.441 li
327.835 944.387 li
cp
.396078 .415686 .45098 rgb
f
327.835 947.184 mo
306.752 947.184 li
306.752 946.236 li
327.835 946.236 li
327.835 947.184 li
cp
.8 .796078 .792157 rgb
f
317.621 949.977 mo
306.752 949.977 li
306.752 949.031 li
317.621 949.031 li
317.621 949.977 li
cp
f
373.391 941.291 mo
344.808 941.291 li
344.808 912.709 li
373.391 912.709 li
373.391 941.291 li
cp
.568627 .827451 .85098 rgb
f
373.391 952.125 mo
344.808 952.125 li
344.808 941.291 li
373.391 941.291 li
373.391 952.125 li
cp
1 1 1 rgb
f
369.641 944.387 mo
348.558 944.387 li
348.558 943.441 li
369.641 943.441 li
369.641 944.387 li
cp
.396078 .415686 .45098 rgb
f
369.641 947.184 mo
348.558 947.184 li
348.558 946.236 li
369.641 946.236 li
369.641 947.184 li
cp
.8 .796078 .792157 rgb
f
359.427 949.977 mo
348.558 949.977 li
348.558 949.031 li
359.427 949.031 li
359.427 949.977 li
cp
f
415.196 941.291 mo
386.613 941.291 li
386.613 912.709 li
415.196 912.709 li
415.196 941.291 li
cp
.568627 .827451 .85098 rgb
f
415.196 952.125 mo
386.613 952.125 li
386.613 941.291 li
415.196 941.291 li
415.196 952.125 li
cp
1 1 1 rgb
f
411.446 944.387 mo
390.363 944.387 li
390.363 943.441 li
411.446 943.441 li
411.446 944.387 li
cp
.396078 .415686 .45098 rgb
f
411.446 947.184 mo
390.363 947.184 li
390.363 946.236 li
411.446 946.236 li
411.446 947.184 li
cp
.8 .796078 .792157 rgb
f
401.232 949.977 mo
390.363 949.977 li
390.363 949.031 li
401.232 949.031 li
401.232 949.977 li
cp
f
457.002 941.291 mo
428.419 941.291 li
428.419 912.709 li
457.002 912.709 li
457.002 941.291 li
cp
.568627 .827451 .85098 rgb
f
457.002 952.125 mo
428.419 952.125 li
428.419 941.291 li
457.002 941.291 li
457.002 952.125 li
cp
1 1 1 rgb
f
453.252 944.387 mo
432.169 944.387 li
432.169 943.441 li
453.252 943.441 li
453.252 944.387 li
cp
.396078 .415686 .45098 rgb
f
453.252 947.184 mo
432.169 947.184 li
432.169 946.236 li
453.252 946.236 li
453.252 947.184 li
cp
.8 .796078 .792157 rgb
f
443.038 949.977 mo
432.169 949.977 li
432.169 949.031 li
443.038 949.031 li
443.038 949.977 li
cp
f
240 780 mo
40 780 li
40 960 li
240 960 li
240 780 li
cp
.94902 .94902 .94902 rgb
f
240 760 mo
40 760 li
40 770.001 li
240 770.001 li
240 760 li
cp
.568627 .827451 .85098 rgb
f
240 770.001 mo
40 770.001 li
40 780 li
240 780 li
240 770.001 li
cp
.901961 .898039 .898039 rgb
f
222.669 776.998 mo
57.3345 776.998 li
57.3345 773 li
222.669 773 li
222.669 776.998 li
cp
1 1 1 rgb
f
57.3345 770.001 mo
40 770.001 li
40 765 li
57.3345 765 li
57.3345 770.001 li
cp
.964706 .513726 .376471 rgb
f
98.6685 765 mo
57.3345 765 li
57.3345 770.001 li
98.6685 770.001 li
98.6685 765 li
cp
.901961 .898039 .898039 rgb
f
140.002 765 mo
98.6685 765 li
98.6685 770.001 li
140.002 770.001 li
140.002 765 li
cp
.85098 .847059 .843137 rgb
f
53.8594 776.998 mo
49.8628 776.998 li
49.8628 773 li
53.8594 773 li
53.8594 776.998 li
cp
.8 .796078 .792157 rgb
f
47.4717 776.998 mo
43.4731 776.998 li
43.4731 773 li
47.4717 773 li
47.4717 776.998 li
cp
f
236.529 776.998 mo
232.53 776.998 li
232.53 773 li
236.529 773 li
236.529 776.998 li
cp
f
230.142 776.998 mo
226.141 776.998 li
226.141 773 li
230.142 773 li
230.142 776.998 li
cp
f
230.141 870.5 mo
49.8628 870.5 li
49.8628 860 li
230.141 860 li
230.141 870.5 li
cp
.85098 .847059 .843137 rgb
f
136.357 866.25 mo
59.002 866.25 li
59.002 864.25 li
136.357 864.25 li
136.357 866.25 li
cp
1 1 1 rgb
f
192.884 866.25 mo
171.532 866.25 li
171.532 864.25 li
192.884 864.25 li
192.884 866.25 li
cp
f
221.002 866.25 mo
199.65 866.25 li
199.65 864.25 li
221.002 864.25 li
221.002 866.25 li
cp
.396078 .415686 .45098 rgb
f
230.141 810 mo
49.8628 810 li
49.8628 780 li
230.141 780 li
230.141 810 li
cp
1 .784314 .427451 rgb
f
80.6255 796.01 mo
70.5679 796.01 li
70.5679 785.953 li
80.6255 785.953 li
80.6255 796.01 li
cp
1 1 1 rgb
f
95.688 796.01 mo
83.1279 796.01 li
83.1279 794.437 li
95.688 794.437 li
95.688 796.01 li
cp
.396078 .415686 .45098 rgb
f
95.688 798.99 mo
70.5679 798.99 li
70.5679 798.224 li
95.688 798.224 li
95.688 798.99 li
cp
1 1 1 rgb
f
95.688 801.52 mo
70.5679 801.52 li
70.5679 800.753 li
95.688 800.753 li
95.688 801.52 li
cp
f
90.3867 804.047 mo
75.8701 804.047 li
75.8701 803.28 li
90.3867 803.28 li
90.3867 804.047 li
cp
f
118.542 796.01 mo
108.484 796.01 li
108.484 785.953 li
118.542 785.953 li
118.542 796.01 li
cp
f
133.604 796.01 mo
121.044 796.01 li
121.044 794.437 li
133.604 794.437 li
133.604 796.01 li
cp
.396078 .415686 .45098 rgb
f
133.604 798.99 mo
108.484 798.99 li
108.484 798.224 li
133.604 798.224 li
133.604 798.99 li
cp
1 1 1 rgb
f
133.604 801.52 mo
108.484 801.52 li
108.484 800.753 li
133.604 800.753 li
133.604 801.52 li
cp
f
128.303 804.047 mo
113.786 804.047 li
113.786 803.28 li
128.303 803.28 li
128.303 804.047 li
cp
f
156.458 796.01 mo
146.4 796.01 li
146.4 785.953 li
156.458 785.953 li
156.458 796.01 li
cp
f
171.52 796.01 mo
158.96 796.01 li
158.96 794.437 li
171.52 794.437 li
171.52 796.01 li
cp
.396078 .415686 .45098 rgb
f
171.52 798.99 mo
146.4 798.99 li
146.4 798.224 li
171.52 798.224 li
171.52 798.99 li
cp
1 1 1 rgb
f
171.52 801.52 mo
146.4 801.52 li
146.4 800.753 li
171.52 800.753 li
171.52 801.52 li
cp
f
166.219 804.047 mo
151.702 804.047 li
151.702 803.28 li
166.219 803.28 li
166.219 804.047 li
cp
f
194.374 796.01 mo
184.316 796.01 li
184.316 785.953 li
194.374 785.953 li
194.374 796.01 li
cp
f
209.436 796.01 mo
196.876 796.01 li
196.876 794.437 li
209.436 794.437 li
209.436 796.01 li
cp
.396078 .415686 .45098 rgb
f
209.436 798.99 mo
184.316 798.99 li
184.316 798.224 li
209.436 798.224 li
209.436 798.99 li
cp
1 1 1 rgb
f
209.436 801.52 mo
184.316 801.52 li
184.316 800.753 li
209.436 800.753 li
209.436 801.52 li
cp
f
204.135 804.047 mo
189.618 804.047 li
189.618 803.28 li
204.135 803.28 li
204.135 804.047 li
cp
f
230.141 860 mo
49.8628 860 li
49.8628 810 li
230.141 810 li
230.141 860 li
cp
f
110.568 855 mo
70.5679 855 li
70.5679 815 li
110.568 815 li
110.568 855 li
cp
1 .784314 .427451 rgb
f
146.4 820.248 mo
201.572 820.248 li
201.572 815 li
146.4 815 li
146.4 820.248 li
cp
.85098 .847059 .843137 rgb
f
146.4 831.832 mo
201.572 831.832 li
201.572 826.584 li
146.4 826.584 li
146.4 831.832 li
cp
.396078 .415686 .45098 rgb
f
146.4 843.416 mo
201.572 843.416 li
201.572 838.168 li
146.4 838.168 li
146.4 843.416 li
cp
.85098 .847059 .843137 rgb
f
146.4 855 mo
201.572 855 li
201.572 849.752 li
146.4 849.752 li
146.4 855 li
cp
f
209.436 815 mo
204.188 815 li
204.188 820.248 li
209.436 820.248 li
209.436 815 li
cp
f
209.436 826.584 mo
204.188 826.584 li
204.188 831.832 li
209.436 831.832 li
209.436 826.584 li
cp
.396078 .415686 .45098 rgb
f
209.436 838.168 mo
204.188 838.168 li
204.188 843.416 li
209.436 843.416 li
209.436 838.168 li
cp
.85098 .847059 .843137 rgb
f
209.436 849.752 mo
204.188 849.752 li
204.188 855 li
209.436 855 li
209.436 849.752 li
cp
f
75.2109 889.125 mo
62.9277 889.125 li
62.9277 876.84 li
75.2109 876.84 li
75.2109 889.125 li
cp
.396078 .415686 .45098 rgb
f
79.1357 895.898 mo
59.002 895.898 li
59.002 893.664 li
79.1357 893.664 li
79.1357 895.898 li
cp
f
79.1357 898.654 mo
59.002 898.654 li
59.002 897.945 li
79.1357 897.945 li
79.1357 898.654 li
cp
f
79.1357 900.992 mo
59.002 900.992 li
59.002 900.283 li
79.1357 900.283 li
79.1357 900.992 li
cp
f
74.2344 903.326 mo
63.9019 903.326 li
63.9019 902.621 li
74.2344 902.621 li
74.2344 903.326 li
cp
f
122.5 889.125 mo
110.216 889.125 li
110.216 876.84 li
122.5 876.84 li
122.5 889.125 li
cp
f
126.424 895.898 mo
106.29 895.898 li
106.29 893.664 li
126.424 893.664 li
126.424 895.898 li
cp
f
126.424 898.654 mo
106.29 898.654 li
106.29 897.945 li
126.424 897.945 li
126.424 898.654 li
cp
f
126.424 900.992 mo
106.29 900.992 li
106.29 900.283 li
126.424 900.283 li
126.424 900.992 li
cp
f
121.523 903.326 mo
111.19 903.326 li
111.19 902.621 li
121.523 902.621 li
121.523 903.326 li
cp
f
169.789 889.125 mo
157.505 889.125 li
157.505 876.84 li
169.789 876.84 li
169.789 889.125 li
cp
f
173.713 895.898 mo
153.579 895.898 li
153.579 893.664 li
173.713 893.664 li
173.713 895.898 li
cp
f
173.713 898.654 mo
153.579 898.654 li
153.579 897.945 li
173.713 897.945 li
173.713 898.654 li
cp
f
173.713 900.992 mo
153.579 900.992 li
153.579 900.283 li
173.713 900.283 li
173.713 900.992 li
cp
f
168.812 903.326 mo
158.479 903.326 li
158.479 902.621 li
168.812 902.621 li
168.812 903.326 li
cp
f
217.077 889.125 mo
204.794 889.125 li
204.794 876.84 li
217.077 876.84 li
217.077 889.125 li
cp
f
221.002 895.898 mo
200.868 895.898 li
200.868 893.664 li
221.002 893.664 li
221.002 895.898 li
cp
f
221.002 898.654 mo
200.868 898.654 li
200.868 897.945 li
221.002 897.945 li
221.002 898.654 li
cp
f
221.002 900.992 mo
200.868 900.992 li
200.868 900.283 li
221.002 900.283 li
221.002 900.992 li
cp
f
216.101 903.326 mo
205.768 903.326 li
205.768 902.621 li
216.101 902.621 li
216.101 903.326 li
cp
f
230.141 960 mo
49.8628 960 li
49.8628 909.667 li
230.141 909.667 li
230.141 960 li
cp
1 1 1 rgb
f
162.986 946.563 mo
117.018 946.563 li
117.018 917.834 li
162.986 917.834 li
162.986 946.563 li
cp
.8 .796078 .792157 rgb
f
162.986 946.563 mo
117.018 946.563 li
117.018 951.834 li
162.986 951.834 li
162.986 946.563 li
cp
.396078 .415686 .45098 rgb
f
136.886 928.602 mo
143.119 932.199 li
136.886 935.797 li
136.886 928.602 li
cp
1 1 1 rgb
f
82.7246 920.803 mo
59.002 920.803 li
59.002 917.834 li
82.7246 917.834 li
82.7246 920.803 li
cp
.85098 .847059 .843137 rgb
f
106.448 924.717 mo
59.002 924.717 li
59.002 923.439 li
106.448 923.439 li
106.448 924.717 li
cp
f
106.448 928.632 mo
59.002 928.632 li
59.002 927.355 li
106.448 927.355 li
106.448 928.632 li
cp
f
106.448 932.548 mo
59.002 932.548 li
59.002 931.27 li
106.448 931.27 li
106.448 932.548 li
cp
f
106.448 936.463 mo
59.002 936.463 li
59.002 935.185 li
106.448 935.185 li
106.448 936.463 li
cp
f
94.5859 940.379 mo
70.8628 940.379 li
70.8628 939.1 li
94.5859 939.1 li
94.5859 940.379 li
cp
f
94.6714 951.834 mo
59.002 951.834 li
59.002 946.563 li
94.6714 946.563 li
94.6714 951.834 li
cp
.396078 .415686 .45098 rgb
f
106.448 946.563 mo
94.6714 946.563 li
94.6714 951.834 li
106.448 951.834 li
106.448 946.563 li
cp
1 .784314 .427451 rgb
f
221.002 940.088 mo
173.556 940.088 li
173.556 938.811 li
221.002 938.811 li
221.002 940.088 li
cp
.85098 .847059 .843137 rgb
f
221.002 944.003 mo
173.556 944.003 li
173.556 942.727 li
221.002 942.727 li
221.002 944.003 li
cp
f
221.002 947.919 mo
173.556 947.919 li
173.556 946.641 li
221.002 946.641 li
221.002 947.919 li
cp
f
203.7 951.834 mo
173.556 951.834 li
173.556 950.556 li
203.7 950.556 li
203.7 951.834 li
cp
f
221.002 919.755 mo
197.004 919.755 li
197.004 917.834 li
221.002 917.834 li
221.002 919.755 li
cp
f
221.002 925.026 mo
197.004 925.026 li
197.004 923.75 li
221.002 923.75 li
221.002 925.026 li
cp
f
211.543 928.942 mo
197.004 928.942 li
197.004 927.664 li
211.543 927.664 li
211.543 928.942 li
cp
f
192.286 935.023 mo
173.556 935.023 li
173.556 917.834 li
192.286 917.834 li
192.286 935.023 li
cp
f
720 780 mo
520 780 li
520 960 li
720 960 li
720 780 li
cp
.94902 .94902 .94902 rgb
f
720 760 mo
520 760 li
520 770.001 li
720 770.001 li
720 760 li
cp
.568627 .827451 .85098 rgb
f
720 770.001 mo
520 770.001 li
520 780 li
720 780 li
720 770.001 li
cp
.901961 .898039 .898039 rgb
f
702.67 776.998 mo
537.334 776.998 li
537.334 773 li
702.67 773 li
702.67 776.998 li
cp
1 1 1 rgb
f
537.334 770.001 mo
520 770.001 li
520 765 li
537.334 765 li
537.334 770.001 li
cp
.964706 .513726 .376471 rgb
f
578.668 765 mo
537.334 765 li
537.334 770.001 li
578.668 770.001 li
578.668 765 li
cp
.901961 .898039 .898039 rgb
f
620.002 765 mo
578.668 765 li
578.668 770.001 li
620.002 770.001 li
620.002 765 li
cp
.85098 .847059 .843137 rgb
f
533.859 776.998 mo
529.863 776.998 li
529.863 773 li
533.859 773 li
533.859 776.998 li
cp
.8 .796078 .792157 rgb
f
527.472 776.998 mo
523.473 776.998 li
523.473 773 li
527.472 773 li
527.472 776.998 li
cp
f
716.529 776.998 mo
712.53 776.998 li
712.53 773 li
716.529 773 li
716.529 776.998 li
cp
f
710.142 776.998 mo
706.141 776.998 li
706.141 773 li
710.142 773 li
710.142 776.998 li
cp
f
710.141 960 mo
529.863 960 li
529.863 780 li
710.141 780 li
710.141 960 li
cp
1 1 1 rgb
f
710.142 838.354 mo
529.863 838.354 li
529.863 797.5 li
710.142 797.5 li
710.142 838.354 li
cp
.396078 .415686 .45098 rgb
f
624.576 809.752 mo
611.334 809.752 li
611.334 806.914 li
624.576 806.914 li
624.576 809.752 li
cp
1 .784314 .427451 rgb
f
637.818 813.59 mo
611.334 813.59 li
611.334 812.336 li
637.818 812.336 li
637.818 813.59 li
cp
1 1 1 rgb
f
637.818 817.426 mo
611.334 817.426 li
611.334 816.174 li
637.818 816.174 li
637.818 817.426 li
cp
f
637.818 821.264 mo
611.334 821.264 li
611.334 820.012 li
637.818 820.012 li
637.818 821.264 li
cp
f
637.818 825.102 mo
611.334 825.102 li
611.334 823.85 li
637.818 823.85 li
637.818 825.102 li
cp
f
624.576 828.939 mo
611.334 828.939 li
611.334 827.688 li
624.576 827.688 li
624.576 828.939 li
cp
f
657.002 809.752 mo
643.76 809.752 li
643.76 806.914 li
657.002 806.914 li
657.002 809.752 li
cp
1 .784314 .427451 rgb
f
670.244 813.59 mo
643.76 813.59 li
643.76 812.336 li
670.244 812.336 li
670.244 813.59 li
cp
1 1 1 rgb
f
670.244 817.426 mo
643.76 817.426 li
643.76 816.174 li
670.244 816.174 li
670.244 817.426 li
cp
f
670.244 821.264 mo
643.76 821.264 li
643.76 820.012 li
670.244 820.012 li
670.244 821.264 li
cp
f
670.244 825.102 mo
643.76 825.102 li
643.76 823.85 li
670.244 823.85 li
670.244 825.102 li
cp
f
657.002 828.939 mo
643.76 828.939 li
643.76 827.688 li
657.002 827.688 li
657.002 828.939 li
cp
f
689.427 809.752 mo
676.186 809.752 li
676.186 806.914 li
689.427 806.914 li
689.427 809.752 li
cp
1 .784314 .427451 rgb
f
702.67 813.59 mo
676.186 813.59 li
676.186 812.336 li
702.67 812.336 li
702.67 813.59 li
cp
1 1 1 rgb
f
702.67 817.426 mo
676.186 817.426 li
676.186 816.174 li
702.67 816.174 li
702.67 817.426 li
cp
f
702.67 821.264 mo
676.186 821.264 li
676.186 820.012 li
702.67 820.012 li
702.67 821.264 li
cp
f
702.67 825.102 mo
676.186 825.102 li
676.186 823.85 li
702.67 823.85 li
702.67 825.102 li
cp
f
689.427 828.939 mo
676.186 828.939 li
676.186 827.688 li
689.427 827.688 li
689.427 828.939 li
cp
f
710.142 797.5 mo
529.863 797.5 li
529.863 780 li
710.142 780 li
710.142 797.5 li
cp
.278431 .309804 .34902 rgb
f
580.75 793.881 mo
537.334 793.881 li
537.334 792.381 li
580.75 792.381 li
580.75 793.881 li
cp
1 1 1 rgb
f
580.75 789.537 mo
537.334 789.537 li
537.334 783.619 li
580.75 783.619 li
580.75 789.537 li
cp
1 .784314 .427451 rgb
f
650.611 793.881 mo
633.611 793.881 li
633.611 792.381 li
650.611 792.381 li
650.611 793.881 li
cp
1 1 1 rgb
f
676.635 793.881 mo
659.635 793.881 li
659.635 792.381 li
676.635 792.381 li
676.635 793.881 li
cp
f
702.67 793.881 mo
685.67 793.881 li
685.67 792.381 li
702.67 792.381 li
702.67 793.881 li
cp
f
580.75 881.303 mo
529.863 881.303 li
529.863 844.272 li
580.75 844.272 li
580.75 881.303 li
cp
.901961 .898039 .898039 rgb
f
565.621 854.473 mo
537.68 854.473 li
537.68 852.994 li
565.621 852.994 li
565.621 854.473 li
cp
.396078 .415686 .45098 rgb
f
572.934 859 mo
537.68 859 li
537.68 857.521 li
572.934 857.521 li
572.934 859 li
cp
f
572.934 863.526 mo
537.68 863.526 li
537.68 862.049 li
572.934 862.049 li
572.934 863.526 li
cp
f
572.934 868.054 mo
537.68 868.054 li
537.68 866.575 li
572.934 866.575 li
572.934 868.054 li
cp
f
555.579 872.581 mo
537.68 872.581 li
537.68 871.103 li
555.579 871.103 li
555.579 872.581 li
cp
f
580.75 924.251 mo
529.863 924.251 li
529.863 887.221 li
580.75 887.221 li
580.75 924.251 li
cp
.901961 .898039 .898039 rgb
f
565.621 897.421 mo
537.68 897.421 li
537.68 895.942 li
565.621 895.942 li
565.621 897.421 li
cp
.396078 .415686 .45098 rgb
f
572.934 901.948 mo
537.68 901.948 li
537.68 900.47 li
572.934 900.47 li
572.934 901.948 li
cp
f
572.934 906.475 mo
537.68 906.475 li
537.68 904.997 li
572.934 904.997 li
572.934 906.475 li
cp
f
572.934 911.002 mo
537.68 911.002 li
537.68 909.523 li
572.934 909.523 li
572.934 911.002 li
cp
f
555.579 915.529 mo
537.68 915.529 li
537.68 914.051 li
555.579 914.051 li
555.579 915.529 li
cp
f
580.75 887.221 mo
529.863 887.221 li
529.863 881.303 li
580.75 881.303 li
580.75 887.221 li
cp
1 .784314 .427451 rgb
f
580.75 844.272 mo
529.863 844.272 li
529.863 838.354 li
580.75 838.354 li
580.75 844.272 li
cp
f
580.75 960 mo
529.863 960 li
529.863 924.25 li
580.75 924.25 li
580.75 960 li
cp
f
572.934 933.811 mo
537.68 933.811 li
537.68 932.332 li
572.934 932.332 li
572.934 933.811 li
cp
1 1 1 rgb
f
572.934 938.338 mo
537.68 938.338 li
537.68 936.859 li
572.934 936.859 li
572.934 938.338 li
cp
f
572.934 942.863 mo
537.68 942.863 li
537.68 941.387 li
572.934 941.387 li
572.934 942.863 li
cp
f
572.934 947.391 mo
537.68 947.391 li
537.68 945.912 li
572.934 945.912 li
572.934 947.391 li
cp
f
555.579 951.918 mo
537.68 951.918 li
537.68 950.439 li
555.579 950.439 li
555.579 951.918 li
cp
f
612.861 865.993 mo
589.91 865.993 li
589.91 847.515 li
612.861 847.515 li
612.861 865.993 li
cp
.901961 .898039 .898039 rgb
f
612.861 869.171 mo
589.91 869.171 li
589.91 868.353 li
612.861 868.353 li
612.861 869.171 li
cp
.396078 .415686 .45098 rgb
f
612.861 871.59 mo
589.91 871.59 li
589.91 870.771 li
612.861 870.771 li
612.861 871.59 li
cp
.8 .796078 .792157 rgb
f
601.742 874.008 mo
589.91 874.008 li
589.91 873.189 li
601.742 873.189 li
601.742 874.008 li
cp
f
642.234 865.993 mo
619.283 865.993 li
619.283 847.515 li
642.234 847.515 li
642.234 865.993 li
cp
1 .784314 .427451 rgb
f
642.234 869.171 mo
619.283 869.171 li
619.283 868.353 li
642.234 868.353 li
642.234 869.171 li
cp
.396078 .415686 .45098 rgb
f
642.234 871.59 mo
619.283 871.59 li
619.283 870.771 li
642.234 870.771 li
642.234 871.59 li
cp
.8 .796078 .792157 rgb
f
631.115 874.008 mo
619.283 874.008 li
619.283 873.189 li
631.115 873.189 li
631.115 874.008 li
cp
f
671.607 865.993 mo
648.656 865.993 li
648.656 847.515 li
671.607 847.515 li
671.607 865.993 li
cp
.901961 .898039 .898039 rgb
f
671.607 869.171 mo
648.656 869.171 li
648.656 868.353 li
671.607 868.353 li
671.607 869.171 li
cp
.396078 .415686 .45098 rgb
f
671.607 871.59 mo
648.656 871.59 li
648.656 870.771 li
671.607 870.771 li
671.607 871.59 li
cp
.8 .796078 .792157 rgb
f
660.488 874.008 mo
648.656 874.008 li
648.656 873.189 li
660.488 873.189 li
660.488 874.008 li
cp
f
700.98 865.993 mo
678.029 865.993 li
678.029 847.515 li
700.98 847.515 li
700.98 865.993 li
cp
.901961 .898039 .898039 rgb
f
700.98 869.171 mo
678.029 869.171 li
678.029 868.353 li
700.98 868.353 li
700.98 869.171 li
cp
.396078 .415686 .45098 rgb
f
700.98 871.59 mo
678.029 871.59 li
678.029 870.771 li
700.98 870.771 li
700.98 871.59 li
cp
.8 .796078 .792157 rgb
f
689.863 874.008 mo
678.029 874.008 li
678.029 873.189 li
689.863 873.189 li
689.863 874.008 li
cp
f
612.861 898.494 mo
589.91 898.494 li
589.91 880.016 li
612.861 880.016 li
612.861 898.494 li
cp
.901961 .898039 .898039 rgb
f
612.861 901.672 mo
589.91 901.672 li
589.91 900.854 li
612.861 900.854 li
612.861 901.672 li
cp
.396078 .415686 .45098 rgb
f
612.861 904.091 mo
589.91 904.091 li
589.91 903.272 li
612.861 903.272 li
612.861 904.091 li
cp
.8 .796078 .792157 rgb
f
601.742 906.509 mo
589.91 906.509 li
589.91 905.69 li
601.742 905.69 li
601.742 906.509 li
cp
f
642.234 898.494 mo
619.283 898.494 li
619.283 880.016 li
642.234 880.016 li
642.234 898.494 li
cp
.901961 .898039 .898039 rgb
f
642.234 901.672 mo
619.283 901.672 li
619.283 900.854 li
642.234 900.854 li
642.234 901.672 li
cp
.396078 .415686 .45098 rgb
f
642.234 904.091 mo
619.283 904.091 li
619.283 903.272 li
642.234 903.272 li
642.234 904.091 li
cp
.8 .796078 .792157 rgb
f
631.115 906.509 mo
619.283 906.509 li
619.283 905.69 li
631.115 905.69 li
631.115 906.509 li
cp
f
671.607 898.494 mo
648.656 898.494 li
648.656 880.016 li
671.607 880.016 li
671.607 898.494 li
cp
.901961 .898039 .898039 rgb
f
671.607 901.672 mo
648.656 901.672 li
648.656 900.854 li
671.607 900.854 li
671.607 901.672 li
cp
.396078 .415686 .45098 rgb
f
671.607 904.091 mo
648.656 904.091 li
648.656 903.272 li
671.607 903.272 li
671.607 904.091 li
cp
.8 .796078 .792157 rgb
f
660.488 906.509 mo
648.656 906.509 li
648.656 905.69 li
660.488 905.69 li
660.488 906.509 li
cp
f
700.98 898.494 mo
678.029 898.494 li
678.029 880.016 li
700.98 880.016 li
700.98 898.494 li
cp
.901961 .898039 .898039 rgb
f
700.98 901.672 mo
678.029 901.672 li
678.029 900.854 li
700.98 900.854 li
700.98 901.672 li
cp
.396078 .415686 .45098 rgb
f
700.98 904.091 mo
678.029 904.091 li
678.029 903.272 li
700.98 903.272 li
700.98 904.091 li
cp
.8 .796078 .792157 rgb
f
689.863 906.509 mo
678.029 906.509 li
678.029 905.69 li
689.863 905.69 li
689.863 906.509 li
cp
f
612.861 930.995 mo
589.91 930.995 li
589.91 912.517 li
612.861 912.517 li
612.861 930.995 li
cp
.901961 .898039 .898039 rgb
f
612.861 934.173 mo
589.91 934.173 li
589.91 933.354 li
612.861 933.354 li
612.861 934.173 li
cp
.396078 .415686 .45098 rgb
f
612.861 936.592 mo
589.91 936.592 li
589.91 935.773 li
612.861 935.773 li
612.861 936.592 li
cp
.8 .796078 .792157 rgb
f
601.742 939.01 mo
589.91 939.01 li
589.91 938.191 li
601.742 938.191 li
601.742 939.01 li
cp
f
642.234 930.995 mo
619.283 930.995 li
619.283 912.517 li
642.234 912.517 li
642.234 930.995 li
cp
.901961 .898039 .898039 rgb
f
642.234 934.173 mo
619.283 934.173 li
619.283 933.354 li
642.234 933.354 li
642.234 934.173 li
cp
.396078 .415686 .45098 rgb
f
642.234 936.592 mo
619.283 936.592 li
619.283 935.773 li
642.234 935.773 li
642.234 936.592 li
cp
.8 .796078 .792157 rgb
f
631.115 939.01 mo
619.283 939.01 li
619.283 938.191 li
631.115 938.191 li
631.115 939.01 li
cp
f
960 780 mo
760 780 li
760 960 li
960 960 li
960 780 li
cp
.278431 .309804 .34902 rgb
f
960 760 mo
760 760 li
760 770.001 li
960 770.001 li
960 760 li
cp
.568627 .827451 .85098 rgb
f
960 770.001 mo
760 770.001 li
760 780 li
960 780 li
960 770.001 li
cp
.901961 .898039 .898039 rgb
f
942.67 776.998 mo
777.334 776.998 li
777.334 773 li
942.67 773 li
942.67 776.998 li
cp
1 1 1 rgb
f
777.334 770.001 mo
760 770.001 li
760 765 li
777.334 765 li
777.334 770.001 li
cp
.964706 .513726 .376471 rgb
f
818.668 765 mo
777.334 765 li
777.334 770.001 li
818.668 770.001 li
818.668 765 li
cp
.901961 .898039 .898039 rgb
f
860.002 765 mo
818.668 765 li
818.668 770.001 li
860.002 770.001 li
860.002 765 li
cp
.85098 .847059 .843137 rgb
f
773.859 776.998 mo
769.863 776.998 li
769.863 773 li
773.859 773 li
773.859 776.998 li
cp
.8 .796078 .792157 rgb
f
767.472 776.998 mo
763.473 776.998 li
763.473 773 li
767.472 773 li
767.472 776.998 li
cp
f
956.529 776.998 mo
952.53 776.998 li
952.53 773 li
956.529 773 li
956.529 776.998 li
cp
f
950.142 776.998 mo
946.141 776.998 li
946.141 773 li
950.142 773 li
950.142 776.998 li
cp
f
960 925.645 mo
760 925.645 li
760 814.355 li
960 814.355 li
960 925.645 li
cp
.396078 .415686 .45098 rgb
f
960 790.333 mo
760 790.333 li
760 780 li
960 780 li
960 790.333 li
cp
f
883.139 783.666 mo
906.672 783.666 li
906.672 786.666 li
883.139 786.666 li
883.139 783.666 li
cp
1 1 1 rgb
f
910.255 783.666 mo
933.788 783.666 li
933.788 786.666 li
910.255 786.666 li
910.255 783.666 li
cp
f
937.371 783.666 mo
950.142 783.666 li
950.142 786.666 li
937.371 786.666 li
937.371 783.666 li
cp
.278431 .309804 .34902 rgb
f
775.863 788.166 mo
769.863 788.166 li
769.863 782.166 li
775.863 782.166 li
775.863 788.166 li
cp
f
787.029 788.166 mo
781.029 788.166 li
781.029 782.166 li
787.029 782.166 li
787.029 788.166 li
cp
f
798.195 788.166 mo
792.195 788.166 li
792.195 782.166 li
798.195 782.166 li
798.195 788.166 li
cp
f
809.361 788.166 mo
803.361 788.166 li
803.361 782.166 li
809.361 782.166 li
809.361 788.166 li
cp
f
785.485 807.195 mo
769.863 807.195 li
769.863 805.695 li
785.485 805.695 li
785.485 807.195 li
cp
.8 .796078 .792157 rgb
f
809.399 807.195 mo
793.777 807.195 li
793.777 805.695 li
809.399 805.695 li
809.399 807.195 li
cp
f
833.325 807.195 mo
817.703 807.195 li
817.703 805.695 li
833.325 805.695 li
833.325 807.195 li
cp
f
857.25 807.195 mo
841.628 807.195 li
841.628 805.695 li
857.25 805.695 li
857.25 807.195 li
cp
f
943.441 805.695 mo
883.139 805.695 li
883.139 798.994 li
943.441 798.994 li
943.441 805.695 li
cp
1 1 1 rgb
f
943.441 798.994 mo
950.142 798.994 li
950.142 805.695 li
943.441 805.695 li
943.441 798.994 li
cp
1 .6 .470588 rgb
f
817.703 917.5 mo
769.863 917.5 li
769.863 822.5 li
817.703 822.5 li
817.703 917.5 li
cp
.278431 .309804 .34902 rgb
f
817.703 843.75 mo
769.863 843.75 li
769.863 835 li
817.703 835 li
817.703 843.75 li
cp
1 .6 .470588 rgb
f
812.055 831.375 mo
778.959 831.375 li
778.959 829.875 li
812.055 829.875 li
812.055 831.375 li
cp
.396078 .415686 .45098 rgb
f
777.012 831.375 mo
775.512 831.375 li
775.512 829.875 li
777.012 829.875 li
777.012 831.375 li
cp
f
812.055 840.125 mo
778.959 840.125 li
778.959 838.625 li
812.055 838.625 li
812.055 840.125 li
cp
1 1 1 rgb
f
777.012 840.125 mo
775.512 840.125 li
775.512 838.625 li
777.012 838.625 li
777.012 840.125 li
cp
f
812.055 848.875 mo
778.959 848.875 li
778.959 847.375 li
812.055 847.375 li
812.055 848.875 li
cp
.396078 .415686 .45098 rgb
f
777.012 848.875 mo
775.512 848.875 li
775.512 847.375 li
777.012 847.375 li
777.012 848.875 li
cp
f
812.055 857.625 mo
778.959 857.625 li
778.959 856.125 li
812.055 856.125 li
812.055 857.625 li
cp
f
777.012 857.625 mo
775.512 857.625 li
775.512 856.125 li
777.012 856.125 li
777.012 857.625 li
cp
f
812.055 866.375 mo
778.959 866.375 li
778.959 864.875 li
812.055 864.875 li
812.055 866.375 li
cp
f
777.012 866.375 mo
775.512 866.375 li
775.512 864.875 li
777.012 864.875 li
777.012 866.375 li
cp
f
812.055 875.125 mo
778.959 875.125 li
778.959 873.625 li
812.055 873.625 li
812.055 875.125 li
cp
f
777.012 875.125 mo
775.512 875.125 li
775.512 873.625 li
777.012 873.625 li
777.012 875.125 li
cp
f
812.055 883.875 mo
778.959 883.875 li
778.959 882.375 li
812.055 882.375 li
812.055 883.875 li
cp
f
777.012 883.875 mo
775.512 883.875 li
775.512 882.375 li
777.012 882.375 li
777.012 883.875 li
cp
f
812.055 892.625 mo
778.959 892.625 li
778.959 891.125 li
812.055 891.125 li
812.055 892.625 li
cp
f
777.012 892.625 mo
775.512 892.625 li
775.512 891.125 li
777.012 891.125 li
777.012 892.625 li
cp
f
812.055 901.375 mo
778.959 901.375 li
778.959 899.875 li
812.055 899.875 li
812.055 901.375 li
cp
f
777.012 901.375 mo
775.512 901.375 li
775.512 899.875 li
777.012 899.875 li
777.012 901.375 li
cp
f
812.055 910.125 mo
778.959 910.125 li
778.959 908.625 li
812.055 908.625 li
812.055 910.125 li
cp
f
777.012 910.125 mo
775.512 910.125 li
775.512 908.625 li
777.012 908.625 li
777.012 910.125 li
cp
f
831.087 850.203 mo
836.036 855.152 li
836.036 845.254 li
831.087 850.203 li
cp
1 1 1 rgb
f
950.142 850.203 mo
945.192 855.152 li
945.192 845.254 li
950.142 850.203 li
cp
f
934.939 877.906 mo
846.289 877.906 li
846.289 822.5 li
934.939 822.5 li
934.939 877.906 li
cp
1 .6 .470588 rgb
f
884.604 843.264 mo
896.623 850.203 li
884.604 857.143 li
884.604 843.264 li
cp
1 1 1 rgb
f
873.05 905.064 mo
846.289 905.064 li
846.289 888.338 li
873.05 888.338 li
873.05 905.064 li
cp
.278431 .309804 .34902 rgb
f
873.05 910.825 mo
846.289 910.825 li
846.289 909.697 li
873.05 909.697 li
873.05 910.825 li
cp
.8 .796078 .792157 rgb
f
873.05 914.163 mo
846.289 914.163 li
846.289 913.034 li
873.05 913.034 li
873.05 914.163 li
cp
f
860.085 917.5 mo
846.289 917.5 li
846.289 916.371 li
860.085 916.371 li
860.085 917.5 li
cp
f
903.995 905.064 mo
877.233 905.064 li
877.233 888.338 li
903.995 888.338 li
903.995 905.064 li
cp
.278431 .309804 .34902 rgb
f
903.995 910.825 mo
877.233 910.825 li
877.233 909.697 li
903.995 909.697 li
903.995 910.825 li
cp
.8 .796078 .792157 rgb
f
903.995 914.163 mo
877.233 914.163 li
877.233 913.034 li
903.995 913.034 li
903.995 914.163 li
cp
f
891.03 917.5 mo
877.233 917.5 li
877.233 916.371 li
891.03 916.371 li
891.03 917.5 li
cp
f
934.939 905.064 mo
908.179 905.064 li
908.179 888.338 li
934.939 888.338 li
934.939 905.064 li
cp
.278431 .309804 .34902 rgb
f
934.939 910.825 mo
908.179 910.825 li
908.179 909.697 li
934.939 909.697 li
934.939 910.825 li
cp
.8 .796078 .792157 rgb
f
934.939 914.163 mo
908.179 914.163 li
908.179 913.034 li
934.939 913.034 li
934.939 914.163 li
cp
f
921.975 917.5 mo
908.179 917.5 li
908.179 916.371 li
921.975 916.371 li
921.975 917.5 li
cp
f
817.116 933.304 mo
769.863 933.304 li
769.863 930.833 li
817.116 930.833 li
817.116 933.304 li
cp
.396078 .415686 .45098 rgb
f
807.314 936.431 mo
769.863 936.431 li
769.863 935.684 li
807.314 935.684 li
807.314 936.431 li
cp
f
817.116 938.719 mo
769.863 938.719 li
769.863 937.972 li
817.116 937.972 li
817.116 938.719 li
cp
f
817.116 941.007 mo
769.863 941.007 li
769.863 940.26 li
817.116 940.26 li
817.116 941.007 li
cp
f
817.116 943.295 mo
769.863 943.295 li
769.863 942.548 li
817.116 942.548 li
817.116 943.295 li
cp
f
793.855 945.583 mo
769.863 945.583 li
769.863 944.836 li
793.855 944.836 li
793.855 945.583 li
cp
f
883.629 933.304 mo
836.376 933.304 li
836.376 930.833 li
883.629 930.833 li
883.629 933.304 li
cp
f
873.827 936.431 mo
836.376 936.431 li
836.376 935.684 li
873.827 935.684 li
873.827 936.431 li
cp
f
883.629 938.719 mo
836.376 938.719 li
836.376 937.972 li
883.629 937.972 li
883.629 938.719 li
cp
f
883.629 941.007 mo
836.376 941.007 li
836.376 940.26 li
883.629 940.26 li
883.629 941.007 li
cp
f
883.629 943.295 mo
836.376 943.295 li
836.376 942.548 li
883.629 942.548 li
883.629 943.295 li
cp
f
860.368 945.583 mo
836.376 945.583 li
836.376 944.836 li
860.368 944.836 li
860.368 945.583 li
cp
f
950.142 933.304 mo
902.889 933.304 li
902.889 930.833 li
950.142 930.833 li
950.142 933.304 li
cp
f
940.34 936.431 mo
902.889 936.431 li
902.889 935.684 li
940.34 935.684 li
940.34 936.431 li
cp
f
950.142 938.719 mo
902.889 938.719 li
902.889 937.972 li
950.142 937.972 li
950.142 938.719 li
cp
f
950.142 941.007 mo
902.889 941.007 li
902.889 940.26 li
950.142 940.26 li
950.142 941.007 li
cp
f
950.142 943.295 mo
902.889 943.295 li
902.889 942.548 li
950.142 942.548 li
950.142 943.295 li
cp
f
926.881 945.583 mo
902.889 945.583 li
902.889 944.836 li
926.881 944.836 li
926.881 945.583 li
cp
f
878.377 953.291 mo
862.755 953.291 li
862.755 952.291 li
878.377 952.291 li
878.377 953.291 li
cp
f
902.291 953.291 mo
886.669 953.291 li
886.669 952.291 li
902.291 952.291 li
902.291 953.291 li
cp
f
926.217 953.291 mo
910.595 953.291 li
910.595 952.291 li
926.217 952.291 li
926.217 953.291 li
cp
f
950.142 953.291 mo
934.52 953.291 li
934.52 952.291 li
950.142 952.291 li
950.142 953.291 li
cp
f
480 60 mo
280 60 li
280 240 li
480 240 li
480 60 li
cp
1 1 1 rgb
f
480 40 mo
280 40 li
280 50.001 li
480 50.001 li
480 40 li
cp
.568627 .827451 .85098 rgb
f
480 50.001 mo
280 50.001 li
280 60 li
480 60 li
480 50.001 li
cp
.901961 .898039 .898039 rgb
f
462.669 56.9985 mo
297.334 56.9985 li
297.334 53.0005 li
462.669 53.0005 li
462.669 56.9985 li
cp
1 1 1 rgb
f
297.334 50.001 mo
280 50.001 li
280 44.9995 li
297.334 44.9995 li
297.334 50.001 li
cp
.964706 .513726 .376471 rgb
f
338.668 44.9995 mo
297.334 44.9995 li
297.334 50.001 li
338.668 50.001 li
338.668 44.9995 li
cp
.901961 .898039 .898039 rgb
f
380.002 44.9995 mo
338.668 44.9995 li
338.668 50.001 li
380.002 50.001 li
380.002 44.9995 li
cp
.85098 .847059 .843137 rgb
f
293.859 56.9985 mo
289.863 56.9985 li
289.863 53.0005 li
293.859 53.0005 li
293.859 56.9985 li
cp
.8 .796078 .792157 rgb
f
287.472 56.9985 mo
283.473 56.9985 li
283.473 53.0005 li
287.472 53.0005 li
287.472 56.9985 li
cp
f
476.529 56.9985 mo
472.53 56.9985 li
472.53 53.0005 li
476.529 53.0005 li
476.529 56.9985 li
cp
f
470.142 56.9985 mo
466.141 56.9985 li
466.141 53.0005 li
470.142 53.0005 li
470.142 56.9985 li
cp
f
480 105.815 mo
280 105.815 li
280 60 li
480 60 li
480 105.815 li
cp
1 .839216 .501961 rgb
f
480 240 mo
280 240 li
280 216.405 li
480 216.405 li
480 240 li
cp
.901961 .898039 .898039 rgb
f
335.418 224.161 mo
304.085 224.161 li
304.085 220.685 li
335.418 220.685 li
335.418 224.161 li
cp
.8 .796078 .792157 rgb
f
335.418 228.448 mo
304.085 228.448 li
304.085 227.345 li
335.418 227.345 li
335.418 228.448 li
cp
1 1 1 rgb
f
335.418 232.084 mo
304.085 232.084 li
304.085 230.981 li
335.418 230.981 li
335.418 232.084 li
cp
f
327.792 235.721 mo
311.711 235.721 li
311.711 234.617 li
327.792 234.617 li
327.792 235.721 li
cp
f
393 224.161 mo
361.667 224.161 li
361.667 220.685 li
393 220.685 li
393 224.161 li
cp
.8 .796078 .792157 rgb
f
393 228.448 mo
361.667 228.448 li
361.667 227.345 li
393 227.345 li
393 228.448 li
cp
1 1 1 rgb
f
393 232.084 mo
361.667 232.084 li
361.667 230.981 li
393 230.981 li
393 232.084 li
cp
f
385.375 235.721 mo
369.293 235.721 li
369.293 234.617 li
385.375 234.617 li
385.375 235.721 li
cp
f
450.583 224.161 mo
419.249 224.161 li
419.249 220.685 li
450.583 220.685 li
450.583 224.161 li
cp
.8 .796078 .792157 rgb
f
450.583 228.448 mo
419.249 228.448 li
419.249 227.345 li
450.583 227.345 li
450.583 228.448 li
cp
1 1 1 rgb
f
450.583 232.084 mo
419.249 232.084 li
419.249 230.981 li
450.583 230.981 li
450.583 232.084 li
cp
f
442.957 235.721 mo
426.875 235.721 li
426.875 234.617 li
442.957 234.617 li
442.957 235.721 li
cp
f
335.418 98.5742 mo
304.084 98.5742 li
304.084 67.2412 li
335.418 67.2412 li
335.418 98.5742 li
cp
1 .784314 .427451 rgb
f
335.418 156.253 mo
304.084 156.253 li
304.084 124.92 li
335.418 124.92 li
335.418 156.253 li
cp
.768627 .929412 .945098 rgb
f
312.084 148.253 mo
312.084 132.92 li
327.418 132.92 li
327.418 148.253 li
312.084 148.253 li
cp
.670588 .878431 .898039 rgb
f
335.418 129.375 mo
304.084 129.375 li
304.084 124.92 li
335.418 124.92 li
335.418 129.375 li
cp
f
393.001 156.253 mo
361.667 156.253 li
361.667 124.92 li
393.001 124.92 li
393.001 156.253 li
cp
1 .6 .470588 rgb
f
369.667 148.253 mo
369.667 132.92 li
385.001 132.92 li
385.001 148.253 li
369.667 148.253 li
cp
.964706 .513726 .376471 rgb
f
393.001 129.375 mo
361.667 129.375 li
361.667 124.92 li
393.001 124.92 li
393.001 129.375 li
cp
f
450.584 156.253 mo
419.25 156.253 li
419.25 124.92 li
450.584 124.92 li
450.584 156.253 li
cp
1 .839216 .501961 rgb
f
427.25 148.253 mo
427.25 132.92 li
442.584 132.92 li
442.584 148.253 li
427.25 148.253 li
cp
1 .784314 .427451 rgb
f
450.584 129.375 mo
419.25 129.375 li
419.25 124.92 li
450.584 124.92 li
450.584 129.375 li
cp
f
335.418 199.787 mo
304.084 199.787 li
304.084 168.454 li
335.418 168.454 li
335.418 199.787 li
cp
1 .839216 .501961 rgb
f
312.084 191.787 mo
312.084 176.454 li
327.418 176.454 li
327.418 191.787 li
312.084 191.787 li
cp
1 .784314 .427451 rgb
f
335.418 172.909 mo
304.084 172.909 li
304.084 168.454 li
335.418 168.454 li
335.418 172.909 li
cp
f
393.001 199.787 mo
361.667 199.787 li
361.667 168.454 li
393.001 168.454 li
393.001 199.787 li
cp
.768627 .929412 .945098 rgb
f
369.667 191.787 mo
369.667 176.454 li
385.001 176.454 li
385.001 191.787 li
369.667 191.787 li
cp
.670588 .878431 .898039 rgb
f
393.001 172.909 mo
361.667 172.909 li
361.667 168.454 li
393.001 168.454 li
393.001 172.909 li
cp
f
450.584 199.787 mo
419.25 199.787 li
419.25 168.454 li
450.584 168.454 li
450.584 199.787 li
cp
1 .6 .470588 rgb
f
427.25 191.787 mo
427.25 176.454 li
442.584 176.454 li
442.584 191.787 li
427.25 191.787 li
cp
.964706 .513726 .376471 rgb
f
450.584 172.909 mo
419.25 172.909 li
419.25 168.454 li
450.584 168.454 li
450.584 172.909 li
cp
f
407.709 72.3257 mo
364.834 72.3257 li
364.834 67.2412 li
407.709 67.2412 li
407.709 72.3257 li
cp
1 .72549 .34902 rgb
f
450.584 78.1167 mo
364.834 78.1167 li
364.834 76.0864 li
450.584 76.0864 li
450.584 78.1167 li
cp
1 1 1 rgb
f
450.584 84.9355 mo
364.834 84.9355 li
364.834 82.9063 li
450.584 82.9063 li
450.584 84.9355 li
cp
f
450.584 91.7549 mo
364.834 91.7549 li
364.834 89.7251 li
450.584 89.7251 li
450.584 91.7549 li
cp
f
407.709 98.5742 mo
364.834 98.5742 li
364.834 96.5439 li
407.709 96.5439 li
407.709 98.5742 li
cp
f
875.667 304.5 mo
899.2 304.5 li
899.2 307.5 li
875.667 307.5 li
875.667 304.5 li
cp
f
902.783 304.5 mo
926.316 304.5 li
926.316 307.5 li
902.783 307.5 li
902.783 304.5 li
cp
f
929.899 304.5 mo
942.67 304.5 li
942.67 307.5 li
929.899 307.5 li
929.899 304.5 li
cp
.568627 .827451 .85098 rgb
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 10.0
%%AI8_CreatorVersion: 16.0.0
%%For: (Max) ()
%%Title: (vector_196-01.eps)
%%CreationDate: 6/3/2014 2:27 PM
%%Canvassize: 16383
%AI9_DataStream
%Gb"-6D3#a[E@(HeJGqoc0d,kdg6HTARCX1BF>phF?J(PdfkXq3MZM(rAZf[e!Jb/lh-YZlS.h#beYM7D^$OIgn<kHsM6<qhb`%LI
%'.<h@:[[+goChc7Dgup0mf37Mc$&]BZu+P,s4VqsK0T0qs7YRkYJ:&qNd:0_eMgjLIf&*en)(g)rUnbQn%O&@rp-354T,';gRGs*
%q()?ebFAOpobUuJqq%>704)BhB5;S_kO#UR2da4HHM@E^QQL,=gPs)@)&rV#f@J)>J=e:ZTDeSP-Mlii%j1-rm+f8A0E1>;HqE*3
%5!So@?bHBgS$,&hJ,/'J]=7h3a#N_ZcZbrVQ`n/MWF+<"IX74Eo-=.oc&:3Rq!sn-53SFoa&2QjLEGF3'`\!kB4!sq2-]HkTu>:>
%++6dl$0(Q?K`@(M55kjQkF6KjFe,0)qus6cFhk`Ie7QJ@hB75g!D%[XS)bN9s6cp@?bZR'Y<UE7q#+R7rpm*C?@I.Dc>;6YgMVJ7
%J'ME\@-]$YQtF&-adDtMfQNdmq>j+D^]'QYYQ+9n2ui:<bKjP1pFa1,s5B;_r]f_kFW:=<?[VIalh>o#p<<iSb=pSgs8:ujcX201
%`uc[RqVifJr:KLVgQ2-qQg]FsqL]7*G@,`MmeNj<@JoPs^A7=Q?N0dY#%R4^r9UK9Du][is5:$Y,kZ2ahk]#/hP@^l]>9r2#<TZF
%;pWHTE<`e21O!rpcY[e'm/<D\]m9KRHV/W`ILlC`5C<Fmo4-SLHo(C2TAas`rh&_qhl8j7LC^TG`kA;Jfu%0gB#&TeQbUJ8+5_PH
%nErsA_:SI.De&gL9oC[]rQ9V:I,XP\']4<"cU,H\J+_)*]QoDKs6p8CV;I9YIf@;Fp<,[Is6cA[rqu.J^AHk"IWY>[]75'Ro06Qr
%qXEpdp$1^!5Pp69ARBn6o-;Q+S%jFPns,c`^9;$a?bZ@$a8a-cm5a(=^<pl$/\g#Ss+l0>9m`A@VF?LY8G`,T?XA6Pm]4fnQfR8_
%cYrgVjnl6qc,kJ7`QP_Dhr!o>leI![k$RI60C>#FB0TqalEiHk^9X*D7Qfhd-%=#<VdFkQ9>18m:Sr>C^]")rF`r1]G4Q>qRoB=W
%f3eNp].`#grT-*!=gEMUQ?W)^p%u3_H`PnKs390qFS",QhL0CV#T_j<3]d*8#IXAOF-1V7V_2Alr:bR/LR2@qn`EpA?[hZDDdIkW
%r1Ec_]$PA/qlN?8/&([P?1IclFg7!3r-Q"M%&1eghjF!3%Fb0_*qRR)IJMjP5FHinL\EIZ^NocrbXHXB5JDDYX6n.b^NoG0p!I.8
%^AJ<RgW_DOl/btXj2e.IOiMb%B=:'q(P&.UjL6cOoB-&>q1q7^s75b?[eBXkk"#/QHt.*eT7:]j5(9q?0&PH6rkfiUr==BcB#UA8
%@dDd'0.HA#(&sH?b\>*nUMjuXr&"#HafL,@o-^0d^V?:jMl0=c+4^99>2M_X]6L+0JQ#ser9SVl_u83%lh,bbX6\L609.ZCfDZ`#
%im6J0nbLFfDnc4$^,WjZM/%.Ps8BhWjNTm15+2H6>kk;lC%g6Ie+jmTRJ_Qs48[h1htQr_4tl9oLl\+s.6j(,s'IsHs!OCEIi&*f
%5LoebVt#9:qhIDocTD09dICRdhiBlAc2`,CUYM.3nk^CN;b_H4V:O@8YG9Bh=!-f#=J+<uP+A\_f(R\LCj59\4g`9'oYVd;RltT@
%pV$$:^YA5O(]37le@2%9nS<&kn"\3Xf,sjIr]%?Km$3g_`]j6dj)3Y5L[d?qk%:fq9Y9c(cT]C^S+lLXmlU'j\*s/@rJ",!a3KKj
%YOB*oe+hVJa.?nL45VALGP8T1kJ9>8m.70:SagE@i^N30]^eR>:QP2b+71)TY7j.Oi5Ln.*po^e&,*QCc^fK]I0Mq0em?ujIF7C[
%nbM,S?539Elm2Jt"s0B&o4T597"=XlF(_+Z++(m9SY+_%eoU',LVf+3_B8d8+kamWk5OWE.INZqiV/3"8%Z0aqtp9&qftEoqu)!$
%md#;+OdtjK];N82]BtBcqn'JPGrP0fh1!uDl<U[BT'j&_2!s\_6TnPL:@$\QS_Rhb%aQrUD*6J_G[\(,DZaI/@7+P6+]<0MA/d4,
%J*N*g+s-To%A[\?WnXb`Tje,*fJ#sHgNDE.U%7O^dR]Ro]Ci^AT83)bYs+3jI@frULkuqS%iao\`dHWAHa;LVYh:_bYdmVJQK5L)
%-gU5JRmEh;2Og_kX&P[lruZ'[9q-3kPm)4J1]MY@iP5&HhT)b3c40)oSUWiK-QB_?qP76N2!^oSI5S.Qm]Gqa=<B`[Yg1h#eTuGK
%?67\PGLl'jf)(O&:Gt\*NJM$gUW)PD2M:R=r;<Gfq!hX^]'sokGg5icB(MJ-G"0_ac/"bjd,cRAQ:lSiBuI@6EACuAfc.f\`os#f
%ehFh=O701?D56tL^Z=Tr*8NN]D.I,phfDbd)R`LKCd]Wid4];m:QFLN@sBf;q81YEh*1gO6NXIcgE!-2J'srZs%m&c;:dqdo4.Ck
%C%>c[q..hD[+iVJ`KO#I-QDVP=Oo0[lqK^u'XcEJ&%(32UQ)3B)fq)6mN0EDc1"5M#ENY.g!n$>EYZDOZ?Q3a^7O-5l[.!Y@\5$N
%/6Z7ogA1S#m'XkP@r$q)1Rk?HX>SNh8ScT3C@bh=ppc(ODu]Eu#4j4/RaZ<Kr:=a8^C5T1D)p;:RSdS+`fpsB+1KugnchIZf=>Ji
%f+r`iH"\k"aYTh$7Qq\b^\^$%\0\JhFrY=:\F'rYTjkhUH>[jpbH]sY,T<S]s":Erh//V"_402jc!fEf1e'^%@8Ct-UY)m,pSJV3
%Al"smGObR&Mt_m7D"/F_:U$6I`?/mMk0RV^gLf$Sfl[0fXhLRHqDW?M^ARQpk;U.rOVuq.>sBW!HP@=VO08Kq[9jC1`s!+aj<L#*
%7.[k8XR42q2$<QIWKL#+?[k,NVtG7-OVB>?-@8=aiQd_*:@"n+DVAbW4jZZe[#K647>81s7N:R1;I4"$,c,U]V*cuJC?"FHUmrJm
%$X[M@)7?g>m)(l2<G;%@K-t;X*Z3)b;m+SnD<Wjlm"Dr?\2l_kqk9XC5@<U.[eP8@=oID(Wum>+k]s;MZE(UldW`'l?i8J0pcu/Z
%j3U8h\M+qW4pL7:4jg5XFF<0!9KG$akgjS4fZ:2Jl.FdZC%bqhZlC#`bTFAR0A<1hrJ?P/23$;6jHFZVYhU0X35o0nmY_^D,^ZM+
%6-?rZ6,IZ\"UW@L/4d#k`M/#sl%-9!f#]:CE3eG1`>)Q"NOIV;]4B9_S$_JKBXQXEIX+6V%\G+NH.Me1@;#ss@NNS<,l;:_I<N*r
%$sla)3pO9=I<TVYkNKTTl&k-lR(X#k?G*oDUWpgV>P\t-lHts9HP<RI$TP3Re"^"'ZC7o7SlOZomk4A-khU\B3^,G^MYF@JZ'cJ"
%0<:_+T)M\rpXS/b*Tqh\(JoNt]cXreh>6Enqs&1GYk&jHbVJLbA"K6<lD3l5d8T>.:\7UTnEJu)MLN_):Y21)592n`IYs`n\,%S#
%.qW;8a69_):RHrMC3!?a?B.[>4^NFcX^4*cD>/Lkp=]o"<;#"T2'p$/TDu$+r003gNg@%0jt7RhcM4Z!Gcoe<`493i=G'Aq35[.+
%JlL1\p1DLClZ.r`_=5q^)c$f8mFIhP*'m@+'2iUAL81>VHk[M9h)anR+Xi#9qCl7fTdT/7L7OXRo117lT!$>2rQo48^g>Z,-2^s_
%b)=/,q;DiJD5ApQF2up,B2%Gla'-\;r>*crO1!bkRqR_nLMmoG3Cd<;XZk*=27qGr2*rKe6':!kOb&W2%#s$s37=paRKlBHLIb`R
%&)LMT,#H]N<)O8YW>i`$0,QCR6cd2l^GB\(9DQ<*^@/,kqs'6l<u6'n[kkgFfF+>m[sLT#b^O6#m.;cfs$,K5r%>,-aZb8GSpNGh
%qW723bd:/,1[W5q_D>gOr>X&+Dg/3gS=OD9Aj50S0/MpXL=Yg(<#gqoEu09'hTgAUk'?orrU4MYX2kRV3pqKJ.K8>ngtNPCc4g*g
%\\,p5O,2oRMHE%Q&CfSO+CO:$knLgALk$(2`@rNo3K?YmVZI.=e&\s(P&17V.^eZs4o=ZPUYE>U\Yi4n*PQ%$hfg./T:AFKo6H#a
%\'9eBZ_Q/(8Ts>GA?fqT@4%D6[!@AY<B8K*(oce)*7#C]b'dDC(nG?LZX%.Sia[1ZeiKub5'lPlDqWk);q2*>DI%(UUNQII%>,HT
%.%Y7BfW;L>e)6J+H%;Z,"7Lr'S!@"N5M#\*f=.1&XtXfJN<?!>bnKAPejP5jr!,ZFDb%*ek7Uqr]he>@[/OVfJ,7d3mt`!V*3nOL
%(s<"78g6ag7DY<8r1X28&V@Pt+de$"K$hX2PQET9?jNnDr=b`o`&rN]?@V,CaUick[WLCCk(&RkB#^:TK8Mlqm#f'O[eSm(B0EF\
%5+M(3W4/hY#3N_PRhrO$!1Nti63k$;:0<<ifLuH4g:HrbX4NoE@NWqOa#+6A(>3uFcQf'onRS/':Gf?uBkY3LpCaG_-.`>c9!Rc2
%\'7ig`RA\h"W2'FP#$2/?Q<a1B/Y_)"3cdg;X$\^'ZlHAIp-]<q_lmKHaZ[GMPI"Fr9,t,/i_$L:&Co'm<<CAqi:CGajE;%kFh4O
%%,$*MnD^nc/q1i+fXD9ArR^LSc?r97jZE<)s/41h9mbMCm21okYE\')-$)eVibRH*r59,<b(BP?-i2`[*W5:h^%q0o^SoujoB#QA
%qt.mX\FbN(#e7M0_J'L0-+p&dij'6[dKt%6KY,1cDLM<#cM6=i(]JFGs5%%>n'`]bERH8mdY^,I[CanDo8d#s&'mEmY+P132?.[E
%2,!g_COCLl6J?.D*+S(e@Ve^Xj5rCGmUF[nT,.9aOqt>X1MrXEg?iMl!PA$f^!5jj;p3-Z@^fcfO-SX3HcY>Ym18#PcCHO"%hC>;
%2r@peF41-BD(iILY\>TGh@-M&AoKmrDJ">4\b+d7aoCCSabdt9Y$U]i&MJaT0:qcRnsdB9'Ank-n&NB@A)atXM2T"&gQp<>3Q2M5
%(<g_j]42@9jdptBL49n]r&[s0Z'8R[gF<ak&,s>Yq3T_&h"gD5mAM"?W(Fb[$c6V[g%0%Q-Du-)"0(Kbn+=r`r@@mG7ULa%i9u,s
%n,M3mra.#N=$,0]?f(_Zs4hKUrukVF!XHZ?il!c_6Mf+&DZ8W>?8qQokAu#SH9DGs#s\=9]D!CR]Qo2<rg3)'IIgC/qrU]ChnAmg
%":b?65#^:uBD4&drNj1"dM%$%$eD!N(UWtPnCN!Ws7D;rnj8E91O\"qc+Pf@$Rshf3J:N7YX,@b]\LNJpgmH]s6j:"=_Y@79rFIe
%Dl6;\Ij^>HX)QPT?^jqP&D35k&7FKp^aGs$Q^_&m=3#.r]g8)W#G&fqV]WB*c"R6+6S2)AaitL0H!msAh:b-^2^@/4MZmh2ITt64
%kF$Me^"DHCD9m(6)<H%BA,,.ZC9Kd!3YD3G6,S,?+=B70Jl2'OP^T-mD3ULHP]V'KgJ-$eQXH%A,q/S6\sBqQ?E5*tqJAi44kO\B
%h=Y*U$g_0CCbL)/ZaKaT[ZVc'HiqV7[Z6j1DfYsA*8_)#ht!luY'@C]\F)ot9:_5&p52H,^(3e/$Qi(^c>6Cm*XMV.ZAr_.9@@p"
%;n14-hccp(e/->`K6BH!*4H1TU+]5Zij\W=X1-c_]bB_C"EKL5UPCoA93\Yo1^L1`9>Op%\(t;HBXulZ152%&EGLFNK;IG%fr\uB
%DH!faKRpChZr>D9p$f"!07"%_fjT6uQXga()(r`c'$;&Oqh98c4L\L=T_TVZ,,O$'\Q<+fqFm&go@f\rgMT29`@6.`j"9hKa-55!
%iQFL(1o"Kg.r8?I=#V'@2Mc6ThCDri/N/6EaTpJHmAMI'O3IsB2t_,-_bN@`r>rYYfo3o+%_Q`X@.066Xc#M.Wl.&eSHh'$jjY86
%Gpq@tc'l//bn"VQbZ=>8dl4oS88R]md`P82E89RbZO%YU/(deoX`/+KD$'ruNA/RH)uTT3HT\+3XL=5DaQf9sZejF,fc_1LnTdJM
%)Iq)?>i#?Z+lt76kr*nO@Cb+mReAM1lmTXd1kF<rq:)S"Y>*a<"n:lt-JjDN)Z7>&i7I]AcSnSI'iS6^2&jQlkHo,tG'A,=[d`>A
%loBfkOM?T(bgsa\9=Pm>Ql-[K"k1\AZHUPrBpU=%cgR&q<2,bE6NhuMV_s$"%^`Pgb$9/up/Ibldn>>Ch?CW;4"\d2O\Z!a1G6/$
%7S_K[Ff2)h>J\K&VJ>KNX7[LEe_[U6+9T(^Fl3dCWXr[\<2,dDNNIGiSRrrW!Yd0<%im;``RQ*=[g4GG*!?F.AF"m(;l'J/'&WHV
%:/%&GR$8A)[NPrs1`N=(luqF-YG)Q;NcaJ)HRO"+hQ5%>J]SqDgH)U/FUJ4m\3F<Jom53q[/k.pb#DK`MRDCpfh/YVT:7Ike6^be
%j>3baL8)SiTUC>r..7EhK&GF#l]ijPpb5F#1(Ge/;h4^KT!tkXbGM+.`?UG,cr2h'0u!$h7JpZi<q4uUZsF*AA90KccF^bE/.OQZ
%YR$]VZZi>nqZX0<f$-dS6#,Sg'q-cqhg'>M2X"]#lSP,*!2&5sp:]2tLNLb9<PbhmAsa!1-#D5&@%upul!1B[p90mtG4rYl<3Yn(
%G"h#8AZ0h:79caf;:*X$MITbW;3Ya;$lAuq]raX(gZ:3%gD7SBC<kGrmXrOq$*7C?+QhB;;ktnDNRDP,&`,`aXP3n*/aD)"eeYup
%W/oceTdWX>@7A-I:h.\=R)?rIPSs^-P&U+!SgF^UAu_7Pp=>8ID:92]XYsbu'qTlA?\D"t2r42G0C1E:ZhF=Um)<_,Qk\@k%[+6O
%Y\7,E@H1e=ROPaV@=GUX5s.Pj*Z."sCKu(3nW=!sB)a:.oYn*J1<ni`\7fbiRae4aKX=a]rY\YR^>`LKhtFuhFlpTuJ6rL0o`YN]
%r]hTQ$3Eu-,^o(I9^*"f7Di3M*GZ')aSsFeG(:O('"eQ15jN;-AhTLS0/mV*eBCB=KCPhko;>^=3/Ol*9\g,3(<rV5PpdAN;u@g!
%JPs-tPB$ep1lRV-3r8L)7f:P4Be@$&T<[hG0VD*90Gu\7HH8:m[I_&=[$]$Ki,JoMG_@F$M^G;1NQ/SjmmB7J9Nq$<g.d8ARUM!*
%YH<k'MES(9?<ThKgj-OG)eR90.luO_>D&>SJfVm!:cM0d^2EXBdEXT-d;Eh[D'84OmHEf%J6J6*cqC3MXn9Z?gTm(^.V1sX5ql$b
%h:TKFFL&7Z-9+]06g8Q!_GnCZLB&_P'9%d9]#.De>Z9h"g_!(spGNQ\EO$?G#T?ENHXjDGM!_Fu]>g6&,cMf2XC>\pL1l?;irk-3
%B_T2MX?;0(caV`cHSWXcVQ,Vq\>*#D'fspQB=01!ra3%=[1=pWr^;m;C$*H$Tp1Kr;MJrkR'AfcYK3AeYiG!7]BKtLeM%Y1OLV6,
%Ed:]lc!CdEVcMN2"OP,"'df<\BSR>#DgFNIF%K;]$\c:+l@qhcmps3][,K'WKGcen;KF`1g8nIFTq8?RhrWMK,MEiFbsk,-F>]QF
%>Qr_fAk5lP@oQ)gFu763455pS"&p3b2qCEf1!gS9q.oTp0k'IR_/$MeQ6??Ec__&MG;TN1g*#>#9[Nb3&ku22jK3S='?d3:@L./+
%U3o%)`GqV9-%H`umG(IC^?=m\P^1$n*72,3?Da7u\f,le0@NV?h3:"X3@iL&h]8c2Hd$(BaoBCBIV;H>noBh4K'&aA%"a$f.O-(_
%T<7euU<Drj$('1>R=^q`#]LhhE@;[iD44A!]#-dfCPk=4iBZ*.Vo<]_Cio#Z"^]X9DPWhp',@Z&oOuq5Ct!SMcu*0lKA=_.BYYe4
%2F0uLZ&g0<5rZM'S\2g&`0(fZZQduP6TZPL8mq"RPj:8u97T@%IV3[+H=/2>90oKNa;jcZ9j5DbUV?j2bQSLHdA\eoqGt5VonME`
%n2nLFkS2[d'\$E3iM"1fOs+Z(5hXdiAkpilCOgb5$lNJ#+sqqoreK]Y:AP$E>pCni(PS,Q'?Fc&,7G"BXNP&/AQ'Y+jZpdN^lT34
%1gf2lbY=GAA$:%p1bb^C]a)Ak,K^.#<^l`7NMYrolgag*A(iu'RNM9,3Xh/50pmn2Q//>I`krHTYKI%3@FHM+O6g^_6oHN29Nt`f
%?f%/c0e=VqkRsm8g=+Wulk(k/_MXakB$RL@Z"_K!9s)7:=k"tq]iVjQ1kS)b@0LQ?BL^1(`YZW3Y)AX4,@#gdO0Orfb6Sh71EdS!
%N`;M9`EpC)=K!`:$]T>FG%d/&ApBOG;.,s3RnMU\Hq1\NHe>VJ)CFQr125QYB.'+rWOids!+""6S?6C,*\ffdH.A_\CBCW\=<>:a
%#/N%2.dT.u>i_(p)t$Z@#qgm8ofFbO/0Ao7Y*tW!0>.fadGWt``8kTVAjhR.pZ3I4(HW+Y94=mK/X#RDI5e9&"mM"OfG&LZ.lOo1
%:EOAu%I_1kcaGqkY*=fuh3X;!rWac@g)4/<%7[isHc;_KWD0$pq6Jf5JlL"qb]:5n\U"McC1,CFD&u3gitO_2GfTYH4b381M&?he
%oO<Fb&g4A'g#DNFc>YHj9lmC.D'*N8Ttlq(9bUic+\mAa3ul4uTo9g$(.Kp%fk,R!*pVqRTLUTD(_:_<V#gs^\X&-tBA#+39c1US
%0q:lQKnb-nVoQ"b!_H/;-"OtFVj3;t88me:,fPSS;o0u<8&ZmL"FcLLc2D`]qCPeoU%NDqbWam%_R]#)$7mZ#^bOI>VNYk+.tUJ>
%lWd+'k\)fo:jt)LbpB\>\&'^r#^ieVTp]b3UK5EP0Q*&cY6q/iNu2Ye3AIL`2?is%6SsdW=`4pV_ms0:B!.bJ&H-K*&)'>YKaN[r
%[<N7MKTtE'8s7f@>1,`j\A>H4\`b4R]FZV`\0bZ-Ph<d3gTBo7Q`ROu1-jY)(Bi;FV?n#"]^5a[H:?RFYHZY5#)P#OU5Gpan0#)-
%b:N$Q\\*fMRrfpoqp*(t9cSlm>F1$;MYJ=Vi+cE8-8@l&4>8#T`J@pQ20Z4n-K2U>E@H%:Bo@hJ,i!:t=3eUOHniL6i!DMnepV;c
%iMOW]Kn?lA5lq2'#KP7dXoRqq[Zqju%(3Y\jp2*IPTs)IKmG)"4h:425*)"IYa_",nT7-VCHWlUPjmrllK;?sOHVsAOEhF#0]S(>
%=6>1N656l60PdG(%Ln4Q!6&YjOC8<9-mr[rQP$-*5hFinj(_*Vc4"kg1EqO0RWlW(9`BImka[:aKi\kQS/hWNdi6fc3"(A_:`Ial
%-:l419NN&plo##WB9QJ\@F&#OGVFCsU$85UIpb8"l#P?QLPK<^$0.Hqo0dt:_gC(D"O&DUDdBRl'F&:28qd,$:$:b9)[-MhR\4)[
%?0ugR3KQjc/'/I@)Da\4CS?8UG7)c4?B(9'/gK/(#NTQdSe6WnU9ePm5"ih00Q#cZcHYC^H.-jTS!6%lMd<afm.8ofjP$"9$45U@
%i8f)-c6-Mt"p.KCeP*,XdAntI7e)=qN#BVPN\FfRJlD0nPg(lq$X$B=q9YhF\`$C%-u:LpZcJd5^9`BHb99+Xa"UH:FbNXbdsBPd
%Xd()]#hOS@epIrh)tu>fQ,u2e5*o1u)Bb-M^%*jH1ek2,KqMR-HSDYR(h"Yf!61um$=R(WE#&3P)?(L1g+9OeeI9ieWidB3#pGr[
%1BGCj'K"l`[PH:YMU'bR8jDl'YT?J'1QGO(GUg!qh@@</!Gg^B_^rSt14[Eh6(u98g]BrKO'%f1DYAZu=O1:+YmdOlSM],"C,Tgo
%`L=q%qrJC7DH%"G+WWp4_I/Oc8Lb^qJNX`E5FQ"A,)+3?"D8fJ3B/WZOR*BI1<jr(?h2FTM1Jaj!s(#A<OC_JE&^S>.K^I>44nuj
%Z#@V5T2p&N-s%`*9J+luguZ^6ZDL:_3J%jQ2bZuba0_4NMJlB*WSUn38;!;_AeQs1b`ac@!?K3>KW?m'$-@0eKKsd/FQkL4WuDbM
%d5<0nr&BH5Q>ZLU:M=\7n":iV+l,Yc^"GQU$1iWtI>uI^U-U\c&BMX0RnO!`WoS0Vh$9\Y3b'=d\.)VM=XgDqW%$3V=geTqH!"F8
%oJIBcNW:MLEg.ia%AqB6EW]&X!Yfqi:YEao49QK*(a_/D\#h0M=:d0%DV3WpF2?]Fmb!ji:U8skb`gaVRO-#_mG<j2f'];N[G,)`
%5am(g!VD_VQ\2kpNbgrU3+tf0"7[G67`YsX5h.>?N#=lk?!u"I.p)$;hWbFq.gg*]<qZ`qEX623N!tm8EZEZ2?HBk.V*gi6J\Qpb
%pkjqqC(:QG*.(4Efq;c(%V#o=)/)R$f)9:#'r,Ue,W#P>EIJUCHI*QilN(8S84Ju_!NJQ-PHh,f`PEG.)XsOr2u%SUL5HD,3+tW'
%0krh[rV-kXE4q3l-,G,[oL7J]%U([(%PX4/hu+9*)(im+=V5-/)^`"ZTH^[(O#J^8epM-IH]2gGo8oM.3hFg-c6L:8+l5.gc#`U.
%L</%j^5J\/>j",+""Bc8ku"57:`ui=(fh2eJ4":oY_OeK"2UP-_1jm5;H*LXkamf:#f6V6'2];AE2dP7<Q!"T!4Ot!@\f%=1YW!s
%*irQ%dprZ"O:F<G-=Age'G)MbWV^a'Yfn[iRJP1rcLe*+*Z(lQgRO)1T\6c"!3*o=1(glD&C^F>iG13k4#SC"?s[8^5K%fJ(_pY?
%mCM)MYS4Yt/lp$rfUB^eZ2b^U-47<1Z5M(k-HJ7jDH$08JpD+NFWHTe7P93Z!#P]+217nu#cBiI$[7sZ'*1)3W/r#AGbnE>-GE[W
%3*b7(p]If,9,SC@$o5AW"Ug-($gn7D>KqgC/%EQfZ4ViXC>"m9VMSi=3M:(9f7_Pc<&LLSc--HUdg#n)f?/YIcR3I4p\]?/5X^&5
%^+g[a3Mu1?#@$,-2Yk>Z<`:_1-=2+/*]"@/'"B9eneB\ak$-5_)aNI,_#c\)*`\m@X,#87#cG`FjEFfLlm4,82*I)<-$Z9)-h)P/
%a$m`'FC\`En,pig9Ob(.L!IP5EJS/7cBjP'+kPBuB4qMg9-HQ(V_=AgK[W5HFJ!5tHcX9o$8#>^6[a+1PhLk;O"Q$FfZf2i@@jd-
%64P/>$(H#s29^S"ieFW><\SuZ,VO1>JsDn4VHB2hB+(ae"dlW3)5*XAM6`7+<kGF52*s#)9b\-OF*9$$7XUE5[XsH`CWFn`c4mAN
%g6a9g8$VB1H]gBk"LW6Q-7Ouc.@*I0jJf\n7D'<s9,s(\]o&1(r3rct_o&Ds&SN>h.Q][(\T;ki\(bGjQ;*f07ukd:3t@C6%%i;d
%'E+iDiSPIH/MNZbg_njYF!5d5S;[G>rnM96a6S`o]Pt>>UgE!&$jOR*7",aA_j=$=XQT"r.Rj[W%o`*<EBdR7+^!#6ofFjt#fX&Q
%H$W1"p*teeje<V))q\@``X7-pjfGnl5)4"!BP>)t@SOuKXs2X$pUkaZ[]]+1<SXrfU6ATn*tpDA_m9G:!!1OXOjU(7S-"Y&Yi4r%
%O!Q'@YS&)\%+?3,/_Gnk$3Bo5F+Uh<$k(i)LSV-n>Y-V1']>FhLU'$8Z**RX@f/K8-o/AJ8/(ERe'X,IV<e4)#jC,1!"5A"BG(G.
%iF]i^@"_o*aj5k>*$UfI-ru"=U*jPO1+h8__JT!&_kQWW!>*49\LWu\29"^.>WF"2^mrf6/oK%RCP/'@0N]!!P6XF-9g+2n3ph*E
%YW6J9pi<4H!uN$5Pd3KA&J4-HcK&D<]Kp9Q>`I3O;`*>!EY=7g2p+X@_hI3;!nca.YGodX6_I0n#D[Ss0OeXXCQY)JL'V,USu;E`
%bMC,.G'53RB>Cc]aQ?bn8m$5"aJEnaj?[PWO4'!f-6O]1b5BUsL2^O`E4@<l\(\6QZT96#.$Ut*44Pnc@#`H#YBi(\be[cW1=cq?
%k0+S=0,J`G7')'d:k(^2G&V4hNoct`VCp!\d+oq%R%%;AT`tC"3s#05_igDM>k5I1L=#s1R8K(*AH4!aaj"6,\[^4AJC/ZM<][=+
%g6'Gn1Bp#S,dbP,FIg4njt^<h#<2jVE-aEm]Wa`\A2MciVR6CaGGP2"N+3J@&3K(^>n0cb,f&(fj+3^@U0U00<jfih`rWF?<\pH`
%+JlX'@/P/`5+.Oc!+n/uT?E=5>p-4LKPVm_%9<t5#E3E5LNL$/-bM\#:_j<H%_[_7"ZEI/fl9T&q12p<J]b8"LO4&h2$?hZ6#lsk
%JKBJPX<C%u@ig^eSsBXU"PWS!Nd?Ur5!YUL<.Oe6S4N2a!$d>N:[_JUS*R>7E$onD<o(Ik[M2S0Ua;Gngme4_@%5nkM]qJ@5q@Jk
%qjI\=1T`)Co/t>Y-bXMh:nG9C!;K:o@A,h-k^mA!qgmlk_:kQ#7r#IC=`o\`dHMMU0smo^LYJ8haOiY1$2)N($W+FU-PK^C-tj@.
%`0FGgNe)@^qJL)[5*QT_%g3;k6a1%D)mH"o4X"@7C@f5)cGOli<s)_;-Kn@69Mkk``r&*_'bJ.fVjcg"V#'WVXtk3iVA2pmU3$P0
%-h&2i"lh(b!S6B^<t5m@_^D2FS%R7)GKsNWJhFk8r$nuaoSRjJNkcXe!1\U*-=^J)%,Vm!&41]0OE-%1!Q1';3!cul:j(b4dobee
%<KDd5<s1d3BZ-p8+!\]#VT>oqh=id%A4AAI4?4suI"SSggs3,+g3:Vc5g%Ol/oAiX!?[_d8&XgoV.Msg$,FO%])K`/J,7>!n)(eV
%e]j0Cn*aSrqW>t.]_fLHJ=kG\3Gb&E"Ap#Xb::47YqQLrbLYtL9IV+fAoeq,_m9_S`#p$3*"YK`:pTsULn^_Vo9(3Xf8^OjnH;Ci
%0t>Q115?4_EdA"RmU&N?jOf0?3KBRKqT*[DEk=FA[]A]Z+e$O77*u]3'KBDmfA"edG_Nt/'aXp]P*a(P*!:mr\B/%jNWXmo&n/\M
%[G8-j6;3m[,qSfT;$N1_SH9,jeT1C`]JVP6E;qb0O:NW=aM.g2&,idb@]i!f,14.r%eN%NY'FA0:4\k)jZ5b$QZmW3%O#5]*.m6W
%9:-4C_),NdR#@SBkroGV1hY,>GU3NahmjO"e%lp/(H=OrQ3h4]<RE&"%FkWaMl#cjQY]ui#m;o>?T,C#YlnP(;h,OS\nd"0BQ)nm
%+k7G(_>uoJBtA6*_r-'Qo$QX>MU<EdhN_S=8Hc4,h3!pjj%B'M>[Y3*`*&K!bur"/"+Y$C=JfYH#gQ/In7kI+CNr=$D@o7rb["gg
%[\.X6m2T"WNg8H[=-gghEB&n_an/(HlB*Flo$s\^Z1,#)Q>l1[o)M';Sd3I;m`W+!g\caapK[j:ecB96!=S34D[A^"=CM2J6h+6\
%c;T$c&b2iNJ$(u%6K"i/Y%7Pn$k"]=7l)KV8qt`FOb*ppAaEt$^Y'H[k9H>GBi?-gb%8$s7CcN$[iV\t_<?]s$'UC5XF"+jmPZ&U
%d5;J:3uWn\LN@ls!"SM^>05EWeQ0;PLR#NJ"ZV[2SD9uhSA%"6YF5G=g,n>,HC%1u&X[F][MPe(R)Xn;J-\t@n.WbOYSYH&cYN'o
%<C*6#:^pNlZCq7&3R!9]s&2'r%#9UO,p"rn?m"s`<'++=$#eFolV'[62q-EsLlK=KB@=l9S+T=QhAa#P",D+8qS,2836hYi$eg#.
%d/_3UZY^^`RaQ*06,A=ab%p`p/fd[H1G^CeV^HWfo,u%!Orq$5bUek4^j.1qM<ue3^4Ei9=uJ>ZcoH1RQR5&uYK4B*X@E$s/rp;U
%[:9[W2AI7QH"oi6$tnTTS.4\EX@WFL$+fNN?C:2cY*%V$)5\PH(9mkl/Ejmkf_Io,2Q\MM"n/m.:r-=*.4ZbVk#PF#ID$.>?p$?Q
%o6^nocksUo:32fQ;jit5.a0\3.4+;J8&]\T6WLQ7"[iMn\JXY[k]rhq']T^L5pf.H"qX*1LjBhR^n,F6KZZ#K=S%CHJK76*e_X1i
%Xpl;0$SheB0IL+T9d]Gnn/2_[RBkg#d_XZi??_=/pc+3X`26Yi"L1F.Pas(:I3o8oKZK?17uq:njXglq5nSkV$RL2GijCh3S=k='
%+E,.B>k!H'LA!AU@f#Tl>jrQ<U]_OWd3HTJ'JI(!58GoH-=Cl1dim;p8kRZ2^cXsSO<7[>N.eE[3D_%DUEnJ#!tROKBei^"-3;Ob
%$s5RBZ4Xmnn,^c?0!(>\""EddcQNNS_@&HV;Cg*X,'J>bi9uI6"Hmb+!),iI/i^^`!r)S#RtE+%Z%M^#JKlniWN=Rf],0mE#UX-Y
%2&&9\d/WU\!36<+4QVDt(%7tEcjWTW@Nkf9B%4ri1-?U8%XOd$7ks;T#hqTdAe4DC\&.^+?06^hJ-\AN"LfcL2k/_V#f^;+(ZlDW
%)"??L&5eI2N/eqGgoZI_9>F6K@5d[sXC71t,3k@@a6@(Ja:BU:Z=7j#3hYX*gTDM[1*;=J%SQl^:*#m+4M@PKZ#F[AQ8V3n=Aao/
%:uQ4lM']LYKjN:Z-u"eN96(;7HGM.7<q[Qk)+MNd1X;=SA@upX&=!K:bMt410Gg+mH`.340eEKX8I4^e,!Un35udOlNW_X6^"#pj
%G^>JT?mD&\NCkV*A:O]sbb3!kjrmCe<\tS+Ag-+k(t,p19q&n/SN'79WoH9>Qlti,i-l=(QamGW31uZT53N@s`lc<^E:tem&uP,L
%XB#jP@2lt-<;dsYLS3'k2P`j*-\7/8nUqNI?<=9poNdC>Jne2ZHPsA(V5C#oUKemkRtW"]XP$*7/OF6O;'a659frc%QcL':FD@`D
%hi;e:I=`10M6Sc8Z?M<(,IGHsm6Tls'e`0cWeDhJ.]/<07k1Q/Ia2g<^eM_q"2h()qBc]<SBm>1YmDcd.<G0t9,%eq/@Uat!hb5<
%V%Ni-<,gp"$7ZB$6TU7Ya,0"r.$NYq]IMq[Oab"AYWSgb@Q(DhEF&MSSYm%UE6&o6)+NI#O(-6PSkR6RQ^K:OX>,eLA5+=7@2>cA
%6H.K"aU1EU&P!uA8lf*VWduf8p?bV9;2Q>Pn%5B'E7s>A*gOl:\#9(!-:hi#lKP=<0dR*=&<;IF?5*kqKaMpH)0,l3ebJE&'^"k%
%1DY3#GQ\WtJ:%"C:[PBZQKe(p],.M55bJ:<R1X9gSeaD>kcgu-F:;Js';TlmO`g5^,Gs?8O7gfi6mgGL&etmh?Lsn@^`JVPCgOU9
%Z[A,>f7le9l7U:Q)a\[7J1ORh,1tF>hWTdTURfU<9fY4_`H'Y%>f0cg'rs/]6*h>`fT/9b<p-Y7:7^BMQW7p+<HH'QY\Z%?$[#W8
%g=uHacB"b2>T2B32-k2=!X((@JcNn5#Zb=Bd]0'QSeefO><a`1A_+FhO0<#XUp!pVP-Lqud/Y-H@j+AU%oo-f6HroEH!MKCYEZ]F
%Tr`d?j"cLITN4-,[S]7[!L<qSkm2`A(o>.Ee)e/3'M8KL)>=k<9lW\=[Q0q7i2(>M'ZKkK-U7\?/4M5J,q=7c@`\Xo>#?.UH&.h4
%UWX9r/-Hscfe[1NE-s%$1ohW!%B)q$?5LJjJOs5ASZmY('nC2[,`P<=-*g"0_j%Hj0kD)d71*q#De,AH):D?h-Ik%jM5heJ2raGT
%b7B+UJt.&i$3J59P-6n\FHmZ6M`__I>icl&!utHV3]`b*S[&Jgf$b(>I!*'.he;H`^4rKL<>lN<hsImY_]7d],UpQ&)g"j1Ck]FB
%m"qHfh?VN9Mo4#(WVC5YR@QN$Qfctq63q_t/iSK/L\#gd!IH5&8m'P]2']C-<EV/P+fM?-$6H>4-Mnn$.tEdXEl/J^Fs]?kC)BpF
%pl,FN=`;+c[Q0#LM93T#J5&gk&0]HY#Vj3-hQ*!Vm9]$KJusKr!TOT?eB'E^9#fOg#aj"T-hdmZVjE4X2hUj4$pe%uYr8&\aB'Qu
%KDL4SNFB,6(Y]oO)X5?PD7W4X'`tXj?\Z?PJ(r++l`f(@[A]B,WBg_5:tX/>hO4`/+6:B#JqKgPW"Jno:)q'!9Y$9"=B_i:l4,Jc
%ADWHB5!Ou-BH!CR!A'>KKBptAf1aWoUYSkmBm:&u?aseGT]NM?6@5N-LaL'-%`,*1AhF8:Jg2=\f.+t#3pSX.nt(#V&@e8i2"0"(
%F&NKn#/GZo[M-_u8]U6l'`tQUJ0PEXL,4mLHqk:6fAmNah@9mCGTBoi-PU)Zj0!QA&Xh$ccrK(iBKSt"O18NBLVVYe@:^PbP)iU]
%YQTK#+R'&[N//*FHYQf;mYMog_8nDQL'UsNqIZhNRZ(bu:`N(^):;O8<`?/,pOS%eoFOa$+1$*9WBg2/)A&<]7XShLan-3*SED#o
%Ee=O@-3aiDj[RQ$nM[P.e#+jO0ah'=OX[L814rmV`uGWp1=lq&-[,aM)0kg)->C6RlTX&h/Kn5Wa+AgWj7%ZkeW-gO;Cpl[V8M]Y
%6nHR+Wg!ek]bTa>"Y=?8<*`X<5@OdCk60\GJfYDOn-=&e2MgH7c#CrN5o<?sJLlB/:O$g6)S1sfOJ.=j6!BLll!ibK#>"!>L\(&)
%R,X#rRAe7kSYdoAm<p&_>bEHgN@[A')*uK%RL"I/@e+c$b1o!!nOcYk.WYjd/n+7(`"b^b-Y+6RX:=h>@unO$kt]$5'Gh@uc8[12
%4m7as=B8LcE?@\Roa*<9Nm_Zf+OG.uduVRTl<Z0d@h(n'='/ba617u&MV3p1j*Ng'9nY&RH:,KXX9O.qiic2]`\Jd_=M7ZZd'sR&
%mbj15aE]tj9GQ>"LnFB\Jff:.HhH:6QP*A3<E>HN7+;O%Z.=(TAcF?P1,r'/MrZ]P4G50pi/Vt?UCQZVUfb%Tqc#5An<L%36!c%.
%4VnJO5m<nci;Ldf;^j28)<+T>.c4D0(m6,#(M'J+*"lE]S,7>=C+.A[6BIYF7*&e0VtZ7p*AIS:T?5>Z(Zt=U/Io/2XuqN)I,s+\
%,E8:a9b2_m_b:?t5LeA8j2jL$@/T1pJ+efP?bLpaiUuB+=URIEV[r^KQZ(`0p@.LN?[qe;+%^nYBCF`+o@<H5c^Q$Tpu_&E(-d7A
%Hi,tr*Btp27\Ftnj[t#]fp`PYF20mpB+D(S`2pb]!.(_&pMkc'1\O7cgle;_R?(e*!k31s5)*E.b#l<sE,G!bMtRuO(isq7emj5l
%8U0Hpa7t\,%F/I2Vl=[u4D#h+":UdYbWQ5l]C=,;);d0QPpdRZ\mr[!6/a6#is(/SVXKB.)!LEfbMkQP_<<5-#VdbZ+EbEXKBi4_
%-&HPoh#^jp7)u\p_=!$?\-<C`n/PLHkd_Zia0hkEm`KTU*H:=$a,&V2gn\VDS$018RUb8A74R@La%XG'FKc`0$m^gO-94O@,aWmt
%*2>]a.>#VV&Kd+T1PTDT!E'jA_/U,_kb:#up\bu?0njZigr;;_=Z:rd(ftL"IE$*YODpuk(U5]6Rg&dq&0&Nl'C!H'f/Q$tMq3,s
%p@#t8]FP6NSN2\g.hp$(EI$qWW7bQ8`]EMK_hWZZja<[*ST18LqIiR4W,0*:)+TsXdi"oGDE,6_fo183RpF*o@1k'qlWhGX\Bbsj
%`k?[iqO,I8Hgi89N6R2fW$ZbJV\eZ)BT,eh3eW]+36Alj^(hp5pn#Kj_AI,lr%/-5l%K16?jpfYpA0KXGjJ%Z#(84<24W9+0?1]C
%e$tJU"&&nh,IiY7-O^.jgr3MD8X"AWK&5:G%IR].P>4G<mc"Cs]5SQ"ogU8pY;tFGeur<a^(YiR/mMer>hku)`p6,c2Q2PYk?uI0
%bZm7NkRthQRb;)%FlHl5iWu&[Ll3RMFn#i,5iZ9[HtAcsnh//**&e.C3,p[4S:+XG0tMYh/Y4"S%GG91>nFR--s@<3[!q*fSgjaO
%`o?KZK!9KGN9\8]$m?s!ckRcjJXCbf(#qKH1Yf,k>pc^q'k8<#@h%WSn9ouNSsYB_]]mu_;)&<<NFM'"`c;D2q*J!gQ<8BA_,B'c
%(k%%5\2aZ6Kqu4=A2-W461KIs)B?_(Geeb;(Q.57EOB1&7bol''F_tU^55SVTI`KKA,r:hr58`bQa,b2@9:7m5I2#eVCRWp::r)E
%):ZT\Z"*]:W/4Yi]]WZL#(4SVJQ=t<q7,o,=0Gd7?=HaPFd4HgR6d:XI9]p3OYWkE32VQ72o=G:iZuP<0#$WrSeHd2_+;f*$8?rR
%,d(-0`"tVsiefPUL_9EbAIg\.fNcZ8b_;"CDUg;S7@\d/$7b&u`nV1#F@\3RnWEPr&M]/-!'h/+0k`J43(s_104;tkKfDU\JqTM*
%64ql?oqPC8muNXkjoF"@+NB\fq!ZGD%CQ+9Ra1iKX9b4!9/.rd8^+'38Yj\kJ=O`:;3>5^>hm4FD:dMd%MB)P%#Er3Gdt<]m6&:r
%Q\0u/Ani'Mn3K)DP%hiqK6%meGET0ZQ@SET=$8>L,Q/.QfH;0rX@;*+L]l>]1Yj_l#-hP>gT^K[V#:Y+iJ'ms$;V28@:\2&,m;aP
%Ll?O4#-4>hM&YA>1^pu$k%=)k6cUm'i\\RJ4Z_W?1>G:h&0/SYfthb@MW':>Wna`c_[u[U7QlIo;#\9a%'<F2jMJ.KaNs/,_LN;/
%IK[&4k\7gQFC>qS"r'#_`57%+cBK-KE:nW.0!rJ`>&8>d$3TtZ1nmrF?ic#Q^2OF3`"M175q,LZ!I*jg_VbFUj?=4a"#j:r?A-1+
%r+p6?$0-B$j[pnjVjR%,9fOZE(gOpk;qdL.\.jp>-PAlegJl>T&M?Ljj[(2Nls1Ac3sY:.@Y)K.]UO=eQb.2B,Q!VHOo[O/pFmG;
%2i`PHT.pW+kU#>H#_]GsWiOo-YSF_"BC*I5SnS'F%u0DSon,>N;a0kH*=P]Th@JaVmVdRD#&dIj(Y2uq>mPc\Be]%G=@a3AE2C0c
%TaV.q0@l-%(qchmE=iCNOYpG?Js"%,qP"?e*Dg$H_:as(Q\?5Y<HMtP"nSCM&#S8639c\V\4]=DSmYOj_0HEWi:qb0#nCC*"A_Gk
%SGj?&X74fg'Yu1OSRp1S,J%!A?RMF\I6[<*LG7qC;<3E%/p:VEEYicSa\6k`gq]R%J3aju^`+;/c/&PL\Zemr%1F3`X2T]0GU(G7
%N%6b>k,Z"nSK%>O\?+=uSK)la&TK:%EaVkb''Kt`^p(^K?duk"9t,:W"pUnLka@qXfZ"ACj5L6>7p_e7!o%P1N!QjId#Tm$&Zidp
%)@W`Q=Fp!7Bt-Qj_+&Tc@01,:D@CqU,6\ig=ZSNn2s9N88mm<jb.'2.,>*ro<=f36e[)XrI)+)uRuNO<*AA6K^mfob(eb>hQAQk0
%"JSN!EWKh1_oo$0=nPL8"5s7L*L?#F#WR1^/U2f.mM7mJ6Vs8h7V<KE(iH:s%2N?aC*C/'7L)m*iLL>]E!V't(c[g9d\6a(>9S@8
%#n%8G'S]<n!!B8%jV[p1pcYUtcMYGr@r+I2>J/6EfRJGP+GT/\KL`%[j?oI7(F0'Glm%[G;OI17RJ@Zm#rGHis$Gas0fh:B)aXjE
%Hm\ihZ!Rta1Z'S>htVXDr`qi<rbYaul<M!:cct7_%Rrk?aj88F^Y7m^/DAu\]pNX+rW4c."dV1=rhe\sji.+Tj-VJ*hHt)qVN!Vh
%]Y>-o?lnCBO=2Um]YB:,P'_Ytq[8Vm46("bqtpiU?V5Q)(Y[bGJqQ4!J&U1-b\>5H&F';?eV3^`9^i*$M=q`;Pp$If?S^=.TJA]=
%GS#c6enKX(_smR:D&N>g/D#UK=(K(R*3?o&5[p+4op<EccB`hhL#q9)KYdN./D/P9_>;=bU*@:TrZY@=S=$Y^ia"!a'!/hd!_gG$
%=auj6,G`j]In;K?+H_leEq]P<8M?mS\:Us;62HLD;Q;??IsForHS;J8.0m1eYl5947BY?PrM>0Wr^-M*VLkp1m4Tc=+9q3d,cok4
%df,C_f>dkoIh<K.g"56^AUKUX__^[51Nf-fcMPfSOcj]J1M:c:m=k9N9GPND@.:866:o73Yl8*U1@:<M-N0Je$>uF+Q\Y6W;#]HB
%XJIlirZWE%%M$3[L:pPVifq3&'W(1LPeV;99+T&"R2j<[KYL&N,j3iFpjNg7eE1aW-9iJrZfli]+>s+Om<<(Gis"*h"JTFKY2@<k
%>cE0L`npPXoZR#7nP'Z[ORGH[/($#BRipTrqILHQO6L@#\YA<NL$3`d2UbfX&IDrTbuoMc*EMd"j;5*GDI,fBE!"$gS`6!CVd$bg
%r2.^VgOeCN_0M'AaB2qp'TM4Big4tNCtV,Eb;[bG[8["oA`5QaMI2,.HW^clr!noF(k*oQB&J=#="0fn(W3Fs1c$e>?Y4;ng2LKq
%`Egsd$&2e&)IXd"L0m'"W)M"N^YGF_EJ^@`KuW<"EJe,;(Y0%e3IWEr'(6gT/0[Ts4#h[4@.rTsnI'&-"7M\/?&M^%r)1<^l-:9`
%6uN\<j;bqihk_cV/c5]Q%'Wc;8:H9U[-In;0+VQ$W0@.VTI.8>r'JQ=7e$<[lr,aUM)7c`b45o`;3Jcd9*&)e@/6XL>Q1.,I\Fs(
%?gKVag5'2*61^#93d')/jqgoV%70Rn!D-FGk*H-M\t=h.-+-ed7)(hr.kmOX(BRXM>_mj>M$9IpLji>AJkTg"Xm_`">_mj:S(_0a
%d4[C%ih@J^^HcoXkN4p`IYm_5hmY9\eX;bpkEk'd][&^TPUb'+Wa-ggMt..Z2JNg'?YFll&^SUD&50lWSR;[*c0muK?YFn&!,A)d
%cS&Uh7hV?T(R5'uiPP0oYqTP$o*^C.?dA79$0)+(T&6pKT5^6+Sr6R361YK>s.!BuGL69I6"Q#ZbqE.6jboZA%jhiDKbp=fU9fAe
%$(>3X<+TF`r8M:D$0";C$^eZW(H]kpL6qt$61^S7D^0S)q.5sjW$Oa1&[E)Ra(^!:]T[Bu9_1n+D7uV<Q,IT.7c-^Js2cR;Rb\+%
%5BqWG/s4oJq1[ZOQJ-V52%8VrjnY_eL0O0Fip6e]#L>%+>dc7I^J*SsE>OF!B62)gi;&Y2f.50#Y/^rpnGI<mLs2&p(Y0'DHoh=P
%8G/Z#-!5Va-d?@&pd.9+]j-DCU"hcX8KgWZp=Y)\GDGV>b*D')_Th=iLQ5et7i]9o*Q-#^;uCZ;6A:O>b1iKabE'Kkg!c5DGOI&U
%5[MM!%)#EkMk,RV61ui#a4[n+#,icj]\rLCmq6Oq-$*t]iN%$]p4CAO<D$n=hsRo%lQFSL#Ht=\4gY!>a>n\9k)#RH:>`>HT/382
%n?Vq!oGsE68fS<pS:Th>k<$<p3r")B?DR%Ac?F(C`YUPjm^jDAR;[9XE,bW)K7R!UB.@9Z]%40SI/,qU7HBA72\a2a`tq&NqOmAt
%GDqnsnO5j91r!Z9hnFAJe4G$""%P7#3.)SWcfn'\]=Tp4%)/*Y+=n!,h]<_$S-aR/bI,[%pj99@&Q3m?hn*Me$dS+PP_nRjWGJrX
%#+<<`$T=iYNU7Jo'>.gdDi;.BajnnA'DI*"XQOcgm3Ug*jh+@CMfc5t3#(T`EsngO8UJ#</IQO:fo,]X!GZSOm)=B`CkR.Im,cKB
%e'&,FGP;u-YEor>^d+ITH<KS=p#Kr&/;_8(F0aZ_,U]bO[<8HIou;17gR?hke-gR5`d`@tLNI"e*O,jlRAC^%1_l#H5uUN[E:c2f
%fS-#ce/r)fPJY=@R'/g&)[%?$Ibs$o^qn>)E'I"+S=UOM_pIBZG2B3#nfm7NlcP2K]QcKOT;d+&baEamQU<O^!tik0r0`jp3n[94
%o"q#?rW22Z,.(SOK,q&+O:!hHJ/D-3m9o%PUZ-C-VnGd?3Q6$!YX*dUb@:2\3BN6DV"W$TMhR1k3EUQ8N#'f#ZD_egIf@4+$]b\;
%_VjM:4`*7&p\Dt36+V%+d_<L!#:H]K$h5)r&BqU#^2WWqlQS<6+^bX.3-cr\\bDMUQR3VhhDojQ6c"32S<N[l,NW@e07QYj?:O4Q
%2D1N4PVVXpS@ja:Q+eYk)3lFDs-](;0c-3>_9#@$%%^dq][Nhm/sO"nFSbr%ah)rDW+8>ANP=A*P#n,^b0'6&U)+Bl'g(2^37LUb
%d$[+MOuIu:_8sg*8)2pSOdG#WN6bnmATRrj>;5V'3l5_0R?;]]Q-RIo!JrfPN4d3>(M?4oZW,m6O"CJZ00(dk^Cp)M@UGC'(3^!T
%O`Ol_]E\tgR?3c>8$(o?a=B$S2ARGhHBLJ@Kod)S.e$)`OV]lU,a)*rn'o?+(HPlqWgjZkaq+2^<YEGc7eRj[c=FQrVQf:&fm![s
%e`PR8["+f4,NG&N<5HF!niUAMM`T,L]5aFqGSLZu.?%>(D6[<7k]dubb3@'hMa.fcQ_<@ZY2=hjQ^&e@?HIG_NQ[`7qZq'^l)1\Y
%[0mKuA47f6`8u+pX:5s%maL/^_@(l7)5\+)kY>M('YHT;<]`,,G2KbV#^C^jJmBHL#iUkcr_1(bXZ2tlK7.s!J[qVr^.WXr\R3I&
%61@:&&guQ?"&s,SEUT&&WaD0<pXiD3`4J+k3Pi;=H]mnc\k=`7R!>%T`ssCuAcLK&WekTU6Fk:AX-'T,`a'@YVm-MOX/!<[I(R;u
%beE:aZ$R`=-,I"t)UXkCZ0fC?7=$Q,G2X&"@kOoiHj<jR6F@1$%!O=CVHn)#Pf=p$"Yji,ZL";H'Y2^9fki,i>n">qi;iP"+kVLQ
%[sdf4!l!,e?So<DpV<c=Yj42:PNF(@D;&n"eAcBR>a]_37o,)TZ[^>JLNhsp\gXO$?MdEs$cWZomc(=Zc1_AO;I,LhJOoXSW='k9
%Bu-bV]/g8X*R"LEadH!BBQnuRSPU-5c0kM@0NgZ>:pb_t_1%%"S[0q0?2-o,\&"r"P$4Y;/nDQBrM/<!S\?mY;!A%a9R=B.PqJ0&
%Lt;lq0(@D1k^uDBphPQYc9/Z=e.*DQl*9hfdDbjicskC663%N5/@lG(%hd^W+T;b(/rCJ0a#]"DF>h+2d%)4C^+eap)aTG8*^OTq
%F:T5VU<^>(kYd:p*t5`;e>@LD#$hG\ZNe32U!$`i&S;FY>qGl3p]Z@hMHqUT'Y;?,p8I+pSJW?XXB7a7otmCq%L0pXS3rXb=mj,o
%*4j9-f6ZQ*V1HX74o/"Xa>KfbG"oXeG"4[]&'Ub04m[,6d@IOH]Mn#<fNUJ`8V703IWA':"+W1u-uSS<c5Bi63INO60oL*]cXkdA
%<BuZ,\^P><K+_6_3B&Q$l<G&m[!XnGqfX^))s"P"K'CLN9+0Sc&QK1T?/g$p244,i^#m1^bCF#/rOYQ$7hI!6$4Vmcm%]<h@k"?t
%<>RL@c/R$FKQKHqmTd39,RNmD4u^\WkK[Aj0AO*s,EqT3\T:cn4QbYKAM1*Bbk=F-[(06Vgpmsr7^]aIBe,)TpJcMH,7B68;!0%t
%c^d?(=H!?>R!K;.>i&GZM`E`8[Lg9FbCTnrfF)aQV4?hO5;lS#cC@NbLY6fYcD>A+T%ks)h[S*Yc@pdmG@AdnB8V%[l<L&:i(=2r
%/lfp4=6<aKWd&O"S;REnjYN9FQ0g-ob+)+V%Wm1Sk:6A#e)JYAC4Iu1_OX>c'NR(NG:j#?!J<I8.>>3;\T<V85Stu\F"&Nsb2'(1
%,2/;B(HFXln.s^P.??!HF)aV>;Z)/-(T7as'SAE4WB]0K:uVPb;bg#tT"Go_S?J\qAWXC<M0"f+iBXpbk<d=5SkO:20%'Y.k$4^=
%(jW\HkE>QK5&2k86GQ]80]u=6Hf`,79.$I7OL=QfUdfs0i68`Ja(h5&F)E0S]9^F+MfRb@#)@@2i%FMTAtGB2PssHM@a=(`2d$UD
%4/k3cg4_O';I.S9F&QdZKB17e'YqVu0]tbpTNs87nh@c]B?oV,POlU31dD&s0lZL_B'<^`?@t=`#qk;LLXb!uEI,V_Jeg9W4^H3q
%4VtY6#0k_-ftF"ccTMDDp=pr'p=p>rBu-A[A+N$YS*I_4F'3&`0.;'dR8MF."p\+h_C97q',p*l\2-F?bFD[3"S8SYi1R:=J>NBc
%`9s-RQbS6*H/[!oV&6(:nE)JhW(g@2D9lNgG2gam4laO^K"SW2>!cm*D_@rR-aq@ULK#0&:7R6GU_!so>R5!V?&3PF,r@NIF"-VW
%CB^D`J;NtUF"UfY$p\INA_&g"S$E1>me^g-Qug[*MH9t&/m/asp5]rU.=7cJKfPK%L+FZu:%@RD^l(5i_iL::?)_lgDR"Kn&Qh0G
%\#=?s@=nDDS]`gPO><bUM>1S44K*<E&WH*bcD<tPS?+O0dUjd]9JGWB(Io6k'6ERS0'6EA<7A=`<Cc%sOoFabS-uSkQS[ek^m++n
%cK-4DAN_j4;Tt^>k$1ce%Hl.STgb7c]Mdo*"irfF;!.n[,*K$`RAD<0\oQsh.a1s9gpnsH-$7:$EB+-rlt>`kH9CF'c6/Y`2T@&Q
%&Eb*4k;)&Z,eeo6.#aeQjF7<uT4M.Nml8_WWZjYZem''fo[8=J(ZAhV].]\b]4)V813XObHnjanec/t_F%t:UO/oMeO9a5i:7"%O
%S'!Nk0"f%!gnqF).]@A.^Nua!7?o-u+rkKO/Q>..ik%`mjZ>+`\U]rtU;2V+&QV8AEA5ak!gpU<SnW3g"C=5nEY/E/`o>'.#m#p;
%/ekjHTGR#;.>D)TTA12[%(Z.nd]s6H/uaSBD?N0V5k[HIXLeRXR"!&3b`-<R!fjYpipIQR?KVNM^e&#''0.ZV6XZpW[Ohc(T\.PX
%EQcXef$C_50JtW`$tmQ@<d\+SUpseLXP8!>M-Gi;$]>W6Lj'COX>1=m&>-Nhi^/N-A.[b[4M\9V6JPJG"mqQc[pT;i/2gb/Al/aJ
%,6g_YZUD!%\<XC./h1+\fOe8[\8_GhC2bN:7D,B:1q4s@d/pGW!9i8u'"+63#U'=f7r[C\d3L6#LFb?#H[9,97F``3c3\I3PlSS=
%q/6;X^^rTVhZ>!c\Q+`Kjal,N+=tTP@8(\Lq(lY#_Q?M:3V=uh?l/3IpY*XqlRd/KP0kZAc@QXm[qJ-DO#,lLE&lVG[UYRL2X0"D
%&DdIXQGj,VnD3(98ZqB$[s/(H732P"Lb`[#_SaJa>Yj^ObRcI^?H8eOASQ_%/(6)'Y\\pT2N"JdkE[!8loB9e\`Hj-V(S(g<>"OB
%\&HP#0-n"l*bNf,$N>S#RT^/X>=<h3E\@j1jQ&jQ&_qC;%fg"mq82ka`g,Br6<#K@].GEl:gast[^]4UZJ/rU,AI[P5Z$4PjN=5K
%Am:LMeRuP'`'aT$iO$%d5/Adj<a33?i'K)m[LaY9&=g0O`C-po-uD6QhKuh3g'1&A0\YMJ3*r-&(12WX\.IBRQ,$E0523A)2Ss`C
%:eO+9I:ffSd1ZoG<(MUNEm'Ba(.D5jL_hOFQ9-3_hdc6o!VD#c(7EUa?YO>=c\-`X)I%Ro&PK@\i]F/U/gRm9W`XUffN'(ZU9JK6
%5L10_O]V&k1+-I*['t\&('BmOLbjI]$0_^bR2]1%k"D8X((hp]F;ON%aZB<@E7\.AU)qgl:hF3"A$0\.'3`>^a]DI)Xi6s3kt5/A
%\-%(]XL3\Uq&lfYR`S&`F4PqZJpd;f=c;3K&Cb`MkhT1>-b<JII26%(GCY^;eRgIj\rtUt+9QQ&ii7,@m%UL+Z,(LY>40(,&#*70
%.uU:U^(N&<TrCJVH_+>S0lFNHKTjmuj&;Ohe/$^s5uF,"m1+kS(-f9S-)_"BA+,>I(;<;fNlPV,730mDT!QmL+4RmCBcFP]9YjG]
%23AW:(N*D".,aMR2_>)q^2:@;/K8JVAUY]][#!Rsm!AkBJ(isb3<@PuL@HABp4c>]KYEPs!j-tr'\p&]<>F#j8>2#DYKX@mlsX9*
%0eH#9@E\p/D=[hI$S<qEe.b0taV-!WL0cNcmp3[lI#jT4b7p2JaAW-E)N;$KB%cL8OLBF'B*>'I8Hk(j4L<sCnLWA07QZbm=@*;F
%)chT4d=V>;iF3$,/VI4_Jr4aJ%LUKL$f4W,c3k49,3NnhJqk+a5`D2/[1*b$RMQan0iZ(+/@<<Cc(LEjSo),Zcm"!!<OY9Q%]+i2
%SUrc6?PmHD(^.5%WD\@N[Q?:hKmjf9;$L'+30K5e+J2rscePiM%-lO6@B3e-mES+>+eAjT[Yg&F!T#.b-"pr'6[^VhZe]g]%as%u
%OIVu2`DA4&F@;P5g<0@_ST/g43I;=_!id'lWf(m5dCZ.?UDW"KGB$5h-_r5VeqJ$c30R.bbmrWM.HkB!D]sR<RiUoG45&s+(oMH"
%7UGd^2&df4_)+6.mfaCnZbqnI=.\+($.>K7SOJ5r_(lC!gT:2B5r))A/rO5*NCI4gZRF8<'Y,pAc=8@b"sD%Fg\9WmAXuJ3=*e"'
%1*OjUm'>*`pD1:jhkk=2F)];4kK43F=_'ftoBF3!\/4SrI,U>"!oZQuMgJp8A?a4Np4cS)(KO[l+A"\eq7]go&Y-/I3R3kp,>suU
%-p*[U$2W;AnJ=5hTK#AA.lu>qq2c_UmFA2o/nD9G;^'Ip8<N8,#Ep\>dX=;(Op/25[\naJQ;f)G*&OtW&L/)-fac*<f-H:9%UN*V
%#D]Ae`5QqoOPLLWmcgC+L"Ap,_r-V^Jhr8M+V]k$mef#%`3e\mL7L>8M6PrImRs4cAl$\q:P,8h\sFq&/AUpqO8ZIoa\V(EF95UT
%0\JgV7g]nYVH!J(4SoCF7&MMcJ@3c@p/l9J!o('&A!(%A?+=srp)l''E5s/raZ\:H3gP4pf23rj,s>fOc.mnuTKoOP)^)#[AtcCD
%E@ea<"m!tAYnb*oP`Ia56-8Bn:/M;NY41W&<nJ:PnZs?t,q$_aM_k(;2=p;B\!OhlN;[XaZ.tt0\N_KJ;o]@U/l&p=a?-m^a!V!M
%,ZDh%XO*uB^HB1E`0j`R1<GZf\AXKp#.e?qRSO/B\s)/29q^#(:#"##kg+A^l4!Z&FrGU7!`(747VW$$;$&^3SHFb4iCrb12GYoq
%l!:"IZIjS_:j=OSe91p8>[1(Ig.,HN*(DAJE=rL=(+Z&hZ>Vo:DPV5II5?^R<`m!I1-Z:e0!:r#k2@<HOaM[@:ZAIk;/0E_$45Ag
%Qk&7b8<B'XC>-2RE-?qj3ZW'B!ga]RB@F#M#_7uD%7B`HbIMOF]P?5NS_=jiClJ%^**!pak62P"QP,igA>_sa_!3OhGjNgMppJl_
%H9VbJ\=#MH2!edZW'PVTB#AfDjG;oX9_;XWT!WkumG%hj\*Sd_Uo=PU*@)JBr/N_,2jQq9Fs;Wk^WFn/S7r4U(c^FhRm:s`7S*6O
%Mpj:f7@+_["Zd[-OTNJ2ku6^3/Q\MrMI3kpHnF&mU5@N7\#Ftj?BiFup(;0a60X(d-4%M"=2D#V-51J5Y\u>lCVU,_KZ)n.ZGSiI
%d=&cM]Nso3ee+KB'U\JLN&=5U\m$#0gkR]V09@T^KF9Kq"\Bd#\[3b%0R`2`UZ;:k].35&2Wu031nVr=2M+&b>D@p\['qn>=]@A%
%?gGi$\p_aU9HMX1.'*Rt&jad3;_:nq]++sP(^5mqnm+8OULiEQGM*ZjkR]..S2"rr;lV+D=FPQf/B#F$ObB#PWgDE!RCI_qnO1d&
%]Eb1E2_T(,:7^*6!a7X#j)^p*qY::nbi0D2at[cnJ=&?M)p[7[6)HqKHQ9@\P_4=b'//5XnD]#Q_ZABI^31dSW&jmN:q/kPZbdqR
%PdE60q?Wd>m#3)q(5Nd".f</%[X7(i)lQq+9-$!^PE4PC]n,)QX]Q7UPpJjto9(>N=_GN+oUTqaHqioAD,\tGM6tC]:)1aqcKPYd
%R9rCl&>R&ZL5oU;J)FXaF&&g67g`m&V&0%YP@"t%1<Hjf\1s39"it'kq\m?T?@,ra6AW1]@0`M$V@fi9&6LmXm_Tq'aZ;7TPS%u'
%<e-5ZB'KT9>%0K76'raWU"phHWQ:fJG$YehaiHRGmtk;si#?;-Sr<o=,c+=CQ[u>tcd=n&a@aB:j]<#lKD&B$(mRLE(5/'C/5ib5
%X6p"H%-_DJ#<,RZf#j!C:/JGnN.J[#17Dib4Hdn2e:PY^Anc'Z\gNs#0O\E,6>jquEt/^Y@GI$N;q_Mr']`GLF3M`o''*>(T:,NX
%0UQ>nM[mO(r9f2qr:o(E+\1PEeMH,q;QP,20EU%TJD6fYBB0m2+bh.+[YifAZ@!"B<_p/kG(!c=_l&$<4%J3A^oC="jp;I3Hr(;t
%[6XkX0iOAqR#O?uhY[[^30tIEM^LpsJd,(m<g2gYGJ4\8AS=aMANIInr7/)6`DoreMrN_HB-K_p2O(llX@LXf@ELDh\4\XPA_pph
%h`]DY&;*n4mD4:+?m&c("L<3%b!0)c$'d(VPOnkg<l]asK_?<0[#^.?oqH.7][@Bfg7_/E46EPaUJL:`[Q4:%-#Roahm-f6LmY:u
%(=d-<@N/"h271*a9/'!,U+i@Ji'o0VSEIV*g%R.0+_<*3r:M#cI%UNla3NCk'Bgu=<!I0MQ?dLbG+FaWST<1777<"M#'^Oj4s#7b
%m&Mgr`PIT%&R'D$#S)FJI&eX:&51odV8WLf$,tGm`O=^o^ao0</AB(<LePei]Bujd%CU\Wgh!V_VD6VFbG$`32i+>HB!LV,mP]IL
%1t@cG(aQ3X@8$;9G5trRW8[.u['ZS8_5Tdu%do-'`K_HYffeAB-n`d-U"hOPoY^Q&OULo%eb3QAT$;#M`ulc-VJE-iPPb@gD>gK*
%_'!HIhp>m!TKQ7UOL=f7D#qe1B&)f7YD7'W`:Us`<jg\@aFLM(%eV,,DKV"QK>m4P2o-4h+Hap1^P1d8>MT?S`LL;dHF:59HS!IP
%Nu`HOE^MIFBsIh,)MD3X>L*Cn(]3G*&&_+-rOs_:_kr*C+bY<gS!q3?f\J!V:>)7A(^L)GAq+`GVFl&d=a\ON0%c[pNd??cAQB3n
%1#EDl-(YXJb/k\0@KT%OQ9E7J[PkBRgUIXCQJ2!,KeO6Y%cTrLf0g%#W,U<=8+m<MFct8tWD.P!:!DnV3^n"H'K8PYDE+5L$onGC
%HH(q38pc>PE.G!:"`G:p,9\n(JE%;q5_?X0g$;$\53QqMob*']'Qr?r#CHU3VLdYG$<n-L8mC<%^^,P_U(B9H`"PTW2?oPh`DtQ_
%Ri$Ef.D9N'4<9b7)>b!$@1`g16bC"qmQ-QY"[N7p6RFLZGHiD^Cmj.#M7nA"EF)+#YSBO*>-H_?FGUP+Yk*kWh*[s.e]'RAKST)`
%+`5NG9sR)l!jeMjo,><8Jq;J2IG+k#d5K8'g847*QGqQ(9^#*][<=50GhjHKh<kk]2tSF?:7):)pd.jhDB>'`nT<7SbL5h6kc!p]
%WQ99LNuhI9S80t2M:s%$O73V>VK93j,fY*;$K8R>rQA'+#$d[qg@3@'$=+0CLiD@(NVJ=^@#bk]b<TeT)3sd^P^$+B)7!s^>Q2LM
%Te<NS[AB,S(iC`=-(kcC)6P0Wb;%P1aBh:N`k_<k1.-6>juF5po*mUJjgG^a/RG\Fbff'LGa's?Wl=>kQ3]C6<W.\T2%ep%$:tU-
%!ooYWA5d%`V$M*4R`f[Npkp!6.G!GMm7fSV8!<8F2YU_PHo4pC"AD&nBGM[]ZlL#C/05=T"MO!p?8V]9!P/X/:1scC`(iqpTL,J0
%YnYV!P5p1G=X)OHk-TAKO`9S9F9B6$N];j(/3Z!iL_9Um4TpU?)plK-/`kopg`/qLKQXmP>5hY]6L`u[gF&#*,+cF0MGOP[Z3^4K
%mXBsB!n`mZj+fe^6mT@#lNT.;4$Q_r$F((U]l:gYlsaTk5>4Io.Y+8hm/ipnkJ$</OB,/;EHdS?4I(Z]8$9\e4lfmj9c5'@N(`%m
%D%jTRcL+A<kAe[I1l+At?@[eu\:Dd$YKj8:Mo/S9okfdG.q'!)YsC_r+d[1::*JF^2$3/u+=(?9UuO(*?kBR=Ob+LT!+JFW/hMph
%k7s/oB7b4F2R"*_J0P_%M/-UOK.nE\G?")P9Vip?bOn<M#sPZ?"$n]\VqP)lQ\i2g<K$<bcb$-,qLhrr(46IpX`W[u-p^*('!^G;
%[t_9s>]BsrSoNasYD:@Zd!1FRe^/]n(75kDPYYDM((2,G<tA&s.UX)7RF*F$l/dBXH>X(R;$-rk'Rgm0'1]<u3#\Z-^X\R-ik27d
%_3o@e3XT7:ld3`fA0f(Ig*Iq`Z^J%4`8e.A"I;VBcEiCn%>%FZDucj]edrA+S'?T9fOY:`!Wc%]75E?>O9R,ON&U<,E'5Al42<.>
%/hKWpa>2__QlafPojZ.Zq04.AH<3ZuhDRam/".=(MHfm)!/TP`g#!\;.V,Z7TSKoc+mTpf*AG,L@@7ml@t-h^HUWp(Y").%[if7X
%ON.An"Gu@12i"h<Z8R!LgLB.jg5:L(&^D-Y,a3VT@Q4%s,pKk47j<S.ZeWEdYu;38!?'&iAi]b1<kYr,8D6]B6KCtRSMI18+Q7VV
%n.HV5?r`Q4JdqJf5U2\?3eO\TTg@\K0$!iTZ6)/]Ok-@(V&>X0+Vc_r>&lqcgc$`\EbK)K.:,8<95ZH*m`b[-BJ+:7hQ84$b94n=
%L#bMXk',0"gbDq,VB$M$m;#rAZYdb,L:B#s0N@SbF"*tM\2H#O=,0uA228WI#KFg8A:3mk<)7L"l#;ST:K=eS5Ue]TW>q+,Lm-dT
%Y[@Lpg:0.?g3b%D8'P;]&,R@oL3B+G3-.SXbj/"&+U'9[j/Yd<f1#3X3c9TEb&`QF!u]V6gc'4`QfQUH,?Z#DPpgI'8?$SO1Skr;
%+qE=q[K5k=S\@njoOp-<BWO]DdhP)R;H<LVL5`0dk)L^]WnD$l$FkjY690>%aZ:#aCYo@.RE<;<MN+-SF!=qC(hXgU^'<s!Gm+$G
%Os^^SN;[huf&:N<*Ys>[hR2<7dA@T6Vc3A#"Fk,;AC@K%Nt:uf"g.$H8(sn$h5t/IGk\Ie#:5)ZA6sUKaat*l/5'O[^QSsmpK+o.
%aFk&=G5GIP!Cq(BFZBO=)91=u]tW`JjQ>6j<-U8W$H.V(:e^."d&AGH<lFi$M2p4i*IrfKb)t%GSdL,lOMCkW-!Q[)SYo+]_1n'[
%@t4Q'b:"V]<Q9Z0&;^5H0lB\pmI8EV"j9#3NpUkAgK,t?N8WBjGS%e=dAE;s+ad9aNp5dj*2?XjPta6,C>YU318);R9A?>2M]g]l
%+>m.Im7eTI$F0%HjtJ4K0e+>a(HWjG(eIM*N\'c%<h/Il67k$dTNmR>aa:6r@92N#;`SL:Tih3hAmYtO%!2H4h('3_3L:[q7>R@k
%`h;J90FsOEf/>%;9qp^YC3/Y@,V6>M<OYJ-GFTYBP>Ucm9'`p\Ze]$"TGp=`L,thD*7;8C"ViY8&9m="3)qB-JoD'OgdEG6,YYi5
%h46VUkn:rtO:hRf]9^VIK>)TT4O,7)_.O!:XenF+TMC=gDKfhfXol)tU),KBjBu@9W66QtOY%)rKjL7c;;>(]'&h740Fa0CBAfNQ
%WfV=>SpX&\^AEMESERT^5!>!H_;c]Pc_KTf*FQZ<'.t-E\*aSK:nkV]IWCb$e9@E4>0bKmMtpOa$Y%`G:KOaCEV%40Ki88L=l./_
%+b?;j6A45,M6%8=J<@T2%dZ&Z&9^l"8ssrn.0'N%TF3Kg5qEQjQu7a5,X'I#M<G3F<*I9E`1jm$^">XX\5J@iR71WYpV*Us]kMPH
%+2IQ.E08i*6i;hFN><7TiuElE:?QmB31Dm;!(a(W+h7T35\]cG/ZD\3@bIN:@kE/U6>%^fj8shCcE;=O/pkgS7]GR60IjgS(CkF"
%qNP7/NOMAt0<CLtagQ33;(Kn[-(PO&&-EGTEFR5KBdXLb5"1inDo7O4p$Tj,K`rMDZ>pJrTLuKkoE.4dN&sc$cbq(k__!9qgk['i
%8qeFsc%M0&)+_5MPG/?M:u_5m@Pkq/Qk9CaB[LHY=pTP^hCDSK"\%)F-c-deen35Z5$XVZg_<r4.I@LT'P9PNUK2KKWe&$tlCt5o
%2P^aQ+X=u9)OSH[MUjLs4Z:UrOE<6!ZO-/]Qr_ca2pnKV]><9:pAr&g2"I(dRn%uo?G8--]f?9;CY(HZW)o>rP&bI*>8SK&2L(_l
%(H@cPiLB-(+?AUcG?MA1Y:5RQ?+Usso5`itp<:PM06tsBGL(t.lj(,f7gY'ZH"2G8<tQCSqj#,(1%TUFR8\Z%_OC4I*_\e8[G58I
%"(YT6[3-p7MSR&T5$'eY?f/#NS##5Md@cF;m>uG@-m@!51;gM8=.Z2iZfbF^[Rt4k;dqD:lP/MC4q=)KEKds`K8AG/p4[m!m8.<,
%"[Z&fP7eL'i*X-M)&\uIqH(l"FM$8D@@#P6.!ljPPmCWFGg'&rfUROG"?WKm)4ON?eoV[XZZke5IhGOIW,dZ]koj\OZG>-[cikqE
%UG*2dSS1%qdd'V.+SkV,$(t$sA.Q9RU!"2"[RqSuKYX!#I.L]9B[cI<H@fsI^[<)m'dVjQk!jIrpB=57K/YD$Y)T?*`)qo<lPPoM
%)G@RY\&:OB./"(eEtX=4X()q(8FgURZqRu>nf9OUc:VmZ:\"&g4P/RdB%Q")`,J?^k"gR*AO=;),W/3AfV2c"e@cG*QQ>BaE'eF-
%U0DI#Z,NkqOTn2R'[GT+f%@mGeGbgtb`$M(["^Zq#+Yt;aqjFUJ7ILnm>`SE*o^`05:"G$(#fV:fo>LK*7k2C\LAl&0`sn9**[F3
%$nQ9SEHOB+DQqnd0N=Nq[S*R0G`<C.P`sT5Omm6=!aD4jY$E9V<=pjXU:>b"Y!L,5.[@u*)uM@Nm+WtL.OZJK\W_t`&H\^+^K()^
%64UkFSB%sj<?8\*CW&8[L)MdZhe,'V&jD:b34X9Il(WjQ%3TKNXC\T"'BZ1aUT$4bM?gZt1$6b2jG=rK\>4UVO$Ar(4TcC^1nb2n
%'QmImI0RT./0dWoFWj0bB-[r8k.YjIjUpt,/B682mhhU8"Ijr`<;nD[1BR$6\qL7hRt=B,TEK_$:;tA_WVD<S.<0rR$Tclb4G4'%
%jQPV<I8eR5F$O[7\2CVCU\Q48nfd8@nK\6>=(%,TiB#OA6NZY42j'X3l%g!jEpk.$mZZ,abjdRo<15Bsd.?(P[$m`1Op#qS[MTpp
%lI(RYX/s/CheVB\CF6?`Fbt=:c,d7qrEV4]b.9l\*4[EiUEu1rqP:&>K7P"KJnfXWpk5\C3uDh7HRdgmFE\kjA0(X2Qm[Db)/95i
%.8X#X8E['$LVEp^glsc46G@dp'si[_Y2qV,CfPi:_&QI7,5-!<>1u,1ajhXiHOaMfV7$/@iY!6,[>*?JfjdR5,\7d'$'UVWK+,fa
%,I]-F!3/<]'RZ)8;\'4c*]'S$-p7o^:n2^Rfb4&^c!^<nD4)jbZTu2#rl.WN1>^Wr>RM0]j'"hf]NPXN6I99Z+JEL"fBgUPU0,=T
%494O5<E()J"ApFXOerjRr8DJa)CQ>5g$qQQ^)\QU1O;<uf,:oNJ_3!@`5m;Ue(K$#K2WL1H%b-D10l*&'Q/`\'Qjk1%Dgk'/h([4
%O?2d_GAaG*P^3*-W9`7#M'[[N(NV9+Fr4'M)UT8rOZ\:-UoOQ`abiOfM]&)QWnUTsL!^08j;5->`4\81*Ce-l9-W?`78PHuf/TN3
%G->s3C_'AR0'7hR/<K>'8f+(Ifdl\PK^4Df.lr@m9Al]SK)eJN-N6Jb@(1Gp7#!h6$XGFL#A@!KUPiRr,V4G5T+DW/3di5"-9l_g
%U`J3S!:VO><U%hEWbo>Ob6+M_RqG69+HmjO?dt6fnP\!hpOK0d6q_'(&u1Epit%Dj'8O"LQlN*O1jBs4*7fS*^a!D;G9SuMNrt.;
%9@\7O?>59k*!Z]k5'r8&];>13=_6bumNZmH/l'ZJ/sbm.=FeL\(:4cR<Q@DL`=IMlEYIFFgmFNm)1M9(P&m.tM:nId8//g[oT*:_
%>VU`r;t)P<>XW]?`3f!$ZKEVS!n1[t7%>:LFjtHIfHd7/R!E#5B]7`0jRKM2H:0[k^c^)Q?F[0t(e"uFqD,uV"\gd(]e2O=P.c/F
%MKT?!-eoL_Ph#.ZD&j)mU\4t)2_SL2^!00SFqb$=nVk&NocIIJ(F559DT!YJ;mmih_e.MDji;?jrF`[1>f0)g@OJ[r/CiQ2-S41#
%KhE/A%XgpM,E)nH/C))7SoqSg8V8$mU@`_L4\_8Rfo4X2i`XaTPH)ap<g5Fpik;??H-m:]qi5c/MZU^Ilm@4a9f"]HB:":jOob,B
%9/3Fh,tFj\3SK@Ig?CcS<@u`9c!!8&&"WB&2(MZW@PLEBpG&WSfQ?KEBM'U,MGs*tYKA]<]rm8/0,3HhmLNKk`=^+`*]2LZ7q;aq
%iM`TH>8Erg\@j.:;;')Sm2h@\atROJ9aL<=C+0WcKX.([W3fVP,kN0:hd;S[CLqW](!A&adStQb>]l"glR'-4oMinu3VeHlZ4e$=
%2j)tU5h-d(q#D]sb(i?JK=W"e)69`[keWQd9UKC/(7_n,!P/kf3iXID"-8+'$+)h5<34&_>c!*:bTp(`>`qNHbFMV?/J_.+%1'P#
%&fIM+\S/F(n_b8TAW'<^mSDrC)[<#T@8#U)psr8p]EPVl?n*AWj?es(0KkIN<LK"cd(G.PF&tNu08fpp7cHIEQA?1MY_Y8ta?O^,
%5\An@*2sRh7WC1e.k"BV.c-\Y,B4BQor+f'Tbfq'14sF=;mJJ]!IHa;aGp-Do"kelhj+CS/[UV$LBQ@+_OFq3(&I=gAQGg5-7?)2
%GY)b`l\00_@9k#Y/5DDC/(pcngKG<E@69mS,cEVB#15pgZX<CB)-@o-`C!IQTo2rO49K#qRu<G?8?,aT*]nREbjb[f!d$VeRh@F4
%^lqE&<<ZU>A^`!]:iG8W5i;$:bKe=:Hq1GY=_>O67eJ:EVTnGFk^[4[(-'>6.*r$c9(q4)&8^&M0!$O/4%W88]tEJRSkZ2LbZu`U
%GaKsl?UL0J][BhE]Sc7cn.?i@p<@g)R)A5>OVXb4_Ac\:<T[SFgQKtfh!6>g>]`n3o!\&bWkRKRTMLX?_:?i4[:qZ:2iXLVWLHX$
%&61*2Lqk^')9Fj!';Z+L^`LXY&`\grLljr'@AR(i@%ZMrj3#Q5L<8'f"gQnqr$!%.!3<C&OtjJH(nBs_h+=7[co-pi9cfO1K`D;*
%j489D:F&4aW\X/23L07bNZ=Bpl6NEt=)c(B'Lds005$%W86Rsn2\=%7Ztel42G1!qihap;*Agu*"&@a.X1MC4V4CEi77E=UUe8U9
%'>q^+/&(6f`(aan'>q[='EML-h[jZKpS4^<:9aKr/KG`u[.ppO>o?>s0l%;Gg;;jXlOh),rSd88X=bblP@-:P'h]DrEH8i*0hnM@
%mBKTHnn!ooS4XN:EF>WiZ!<2L,L<kO2)2-@M_Lh0_$%aD111@mZ*#%$3<V[F+ga^T?To9(&sc_=`R&X2Drn_ZjZEiOf\OQE-b\)L
%Yt6'g`of,#NIE(GceQj):q,Ea>=sq&iAOJ@,'XB3iL7O5P6AMMe.pLs`4MA+!tLOuUX67Ca=$c#],rRK&a.Wi5Zcnm2^3":`"?nk
%#RIsi$62G\2h<ue9#<;s3N]i<["^1\Ji)/+*KcBR$DQ?NNoXu2*.)]bqjuK@ng,o\ob^g[+=;X&6)G#1$F2qPPjrE*]*H;4,k7ti
%$9@^PbXj*.1'U-aYGtsp.a%5h9N%BXc\[%.f7aK0!Q<b74$580<ucLa*PY[X?M.K<5!`3]%JM[-^5,4W2&5Grmc!$07052j5.i_u
%*A5X(VObKtP^O]aED\%g&iW4r@:EAHpGs97KA!pY>;pA9$3L6kL2-W'nB"P9>'EJiJGK5D#=Hak#k=HL(6VB\%DG1_\)Ul#'>.EF
%<.:ML?&F4C<6FR!$Pmq\9u1?.9InsVJ3"5tXGfOKN%a[UQ72:^L^-I&SSB$RaWd(n(bVuLD"s_,WkOf=PKcV;)!jKJ3!7Zj@<%NP
%.0o/@NSD@[Y1J)(D+YE9SB<DLB.T5$B['18Yr*?hlG:(2.KZ(Hb3+Qo@KXEu_hK9e8pJ5RkbiH9.Y;p?1P$]G.KCr)`%T"G;ZU)s
%$];7!kis422VD$DW4QQb^%h`N\Vlm;OkAs*UH";BK=hU,+qpid6M)l[#*.mmMHW$:+`9>9`R`h";6UfO*`-fTa$@l@3=0T:C3DAl
%(7`?+='$$.DJM0Of%YL.\Q<dC[V#&mi"eaUY3I+';cVA%)'rGlhZBj)I$ocq7aZ!8q=fcp1-M+lgCYLEP@$ur$Tc.a4L2gO7kg4?
%3KW'ul5D.%=p/Np3FaHtNMPXoD_O%]LR`UCI?sc.K&r\t6LmH=>(,9=.LC]`Yd_aSceb/YaE:bP_Y4-(%XDPLqVe/X*a2WSaYqqP
%1dI4"$YVAQ;DBV$Ws5/)d?=G"J#kA6k<NoWUbf?Am;=k(e_[Q@>d;:eTj&9D&M3+idqo)ab[H*+K[kMgHm2.YQ,":c5(`=F(^6rD
%K[Ad3YRUr]!FMK,5a?>?+9`kYQBBV]]Pp1IOKAs3D1aMlJ\APf"s,9c2G./j6#6.&KW?KQ-p":u^b$\Y'j^_D&d:@,8Z\CJAesOC
%L;XZnR&^C+("f,_DcXh'<[]XE;Z^/IR$Y`49dEQsM+k>pIPWcf$q(:\al#Q>&dA"Z#bh^fCk;T$CF[:o,3Nb#K8KOPJMX_(`2>`o
%4M[kP)A\Dh6I&44#]pl8ZgaVtlsM0\Kt\K#3D/N0;UYhb=4&BM=UEK_;SNYYm$*T$N8o44JJOKeNPN&Y4>8H[$bZmZ/]n1?*;X2+
%?Nqkg;(J`$a94E(l)Rd77M8cOHn#b_'=Bt<^Oo)6iM2gW6Qk5)[Otao%;/$H(6"4=HAjaoREDkV"7'i5&=[)/+a?RD:R$Y8??*A-
%@20OL(]YG)+i"X^Vo,fmd5(J0??rCY1eB,L9AmtF=CD`>#7MWq1q/;jRR@7@!(O.Xc;iH--;r>&!Lu/F>nm=88rj,.KK3q8;V)L+
%(B\5VYJ\&5mT*<$oNHlo)XTq!r,m7*F*]__I>L9,M2c#j1"GYYIAYA^:T"3"%n,kA'"6rEWh\T"!=u2fTYJU,>_;cnMRsFUm1r:'
%+A@qhn:$`2NtA;3_BIWj0LR._LS84mhnb[LjU#7I]XJGkL1gpUm=DRE@?hEnfIkC!!P*0#F,[CpnXlPS$HY+q0pJ]1HAJ$0QXC`)
%TepnF=so!Q9U)M+nK-0pN&5*m60<PpF9:K?K0VKaMLZ.f5EKm[N5Sj(68.<``:WP6!ZD(*%@$Rk'UgCV)r6uKl&Zhal[hG:O9Hk`
%$7J2MPnE]A(E*Je%_b6F*afl'.&Od_c;8"5A"9T26ol`_WPM6k2,9,,=I;H:jMk#!&]?>Qn\FWu-Et\CLc_4N"%6Ue+\qPs3uE^3
%<^UVY3a9_gD><sZkA\b"I1tWo.RQHGV9:,\V:9OE4(6coj-IoWr#en!4[JZXjFYj2_',m!_f3_G=W"Hd(9&if-6Q'>cQ.c'Y^e^q
%0ia6k:eD1\2j5NQ)+I!qYk,r=?E-d'gBmhG6=Dm\OF*]dLgGa*5+NP1he!-.<&+q#Y<E4oa7(g>'h'"E#T?K]UZ9#n=q?]<lN/M[
%buTAR.[35RM))::UHIpHHiT(NiWfdqUN2>0r+^BWKjU,9BKud`)H&=fe,TlaA&Q`Mq[4D]Zu%>VVkEDp0s).b)Gj.*NJ&=3>RW@S
%oo_i217XJ)0s6me5-:_q-rPr1!CB$(#]>MC!L4(j32>]^"\PV1>`*`W2[;l5Oc4#uj<PQN+WO\%k,NgY*EJWU&0gTZ6qg4p4c^9*
%r\+r-iZ>@6!bUU@J(:hY?!48E=#'+J54>F%&m$Sn+m>C049/-9>UbYkJk3*G2J5`nAeqfre)9G4BHMm?\s*[E#S%-a;M_YGBX1Wi
%1Bj9d_oEsu1hYCr.Vk06q&[qXBIQXfb[[(a5eR8,,aRbq'G,g<,5@\KDE,jEFAdrghaC<Aa;F?)'[4jSH<ZhH.r?#l?<bAf*XlNn
%<H\LS1,m@5_GZW8,IM2-_PD=%%SeTL0BQK59EjY[kh-OTZ]r\T[JD$$53PZ?g!qk_-#/m939`K6?mY+RAl%EU>e't.-957ad/`__
%\"Ih:!)eT&-),l/$Nb<u"sqCg159IRngMkrABN@eA%:im4II1D6Pb[n/VW"i<WW&m/Ir-)nY;HK[TIjg&d%Qq9,tdMP%.HlP+3_o
%P+j\`efc#lE>nsH`.2Gi!4RO%YRo#U%;\O0[_M)OB;j!$#\DUBC(iej&EghB7%%B7j<Cg52[ZgT&>K5Y/\LI*!08<_H\.)ckZNR"
%j[_5^\s7=1#m]-\VIPZH6<,g5Fu@G?J/3n8n>p"Ag^#=[pdd<#U1^E*BO?=("NDYWWK%t0M]i_UqbTFLAFHCB5^\`^K8O)c.jEX1
%3u@IJJECbTBJ-7t;`o-*^-U>G_O6&8gaRJ.Q<Y[;aoorD=7Sm4Q8sKi;sOj'%K\D[B24Q4+ZZrT'''&6>j@7sN]F%bjO,%8p5k2$
%TVIHTNW;/O//6#B#UGjt+QiHjV-Fuspd+LS!Qtk9`2iH5iVE^%>O]hPgk:D`JM2ea_Ssteda?77glR,S#Bk\IG^83aegYcfVfLcT
%C?l^5cH,)IreQ@k'B!m2KS#;8"YL<l.Ts%T"q&:O92BZfo"\\_MH^R&KS]S;h!ujpnq^K[0t`<k+NAM^@0krl6TZqJ49Q"4;Q,0q
%?;LYSLX^<ckmM)`7T[+*!a1P[pgWKDj\T"(H,2#O?YPBuNjMtO=?3a>:bmW&%\LTDW!QFKA@+fp.L3;G:UVL5KCYBIg7^n+U0ft6
%N`2Mdj'Q6;;rP6p&YpD((jV-N_oijhJ[+"05a9/DDJ72(*/9f.@UKNo0j-RX4<ai!_W2E(>Vc6lT,`ER)<CueOap:(HQ>3f''[IT
%c/@Y"jm+=G!J=Bn&H%1nRQRq<7?P]]5(m6$"XZ`V+VK`Ya!CsRUG/Du`pSIC6Js)A8e/TRhmnA4<'etF89/A`2k_@W="Za$"XGaX
%*Q3P"%R:r*,:a`oMuu_a:!gssTgIB=7ZPT6SoZ4)OGq^U#]"I4p27B*O+NL(OUshnB/"A!O@s-d7W))o[Ls/[HA^[]5Cu=a":Bl8
%'<&R^g9b7MK-$&7k^l55.MKBY-W&lh9AM*23>>Gdk6-V]bF,#/Dh:APAAmkG]PsN?!^gR%5Jmf"'.@lD,D(t!O^k5S<6!P2*]jBH
%YDfon393sW8mo^`&LF`#Y9;nFQ,'j3Jm=Nq73Jd&U?k>LEhK-?<q+/G7$9P:*]7p#:)$fFc0U1ri+*(%n8Tk(NA.LJC0`WB4!r>7
%TJ3-.8W^tc,ZGZc*etGAN;]7(N[HHtV6K!bMIa`2j-jF@5ol"+<6D0"J7!n/.fgXqr"?$Q0k-/51&M@=G[u&*KcC>Li)Oq[;"+Tb
%8hgF.9/Thf)oiLabbcE>`mH)A3<^0l[>E_KJi+%8Ib\9DXE!_t@GZT$NC1dU*Z6T39!6_Od!1Wt2ZXg-CkbiXEC^Cq*,+&7`ka#8
%X@1Mr2@&.^<4mfK`ds3TjBdg>fG^X"0Z5q3UD'1SN*XFc+LH_/!99^ji`ZZ&3;>9Y.uN<)6+B:4nd2n;90H:46<s;k;f(t]fs0:J
%3AMUc"3`Ej+H&T.:a&=\rY<dkaKNariZJRN&"ULn$^-ICMPC^4E=*^e\.pCP"B-:^-3WrU89+DGWf-unNjTj$>QGNDrsN]dTjiaW
%,u5l)M+bP@.@N5@I'EO.J;FMoQ4uq2*.f$L1-lP6C^*_gE9PgX/.PQu?uYUq+s%Uf9gQ^K!.(q[L]`39$:Y;@Lo6&fduC%<0O-H[
%$\3ILN;2@p%'&gU;(S;j*ZcP[+AK\iUJrNQlu7J&:CI5``lQ6O&1>QXR+$Y+TaVnN3[HeG(cNG^QRaXSLCK#F7FsiC!JghD&d1!Q
%#54K[+N&a[pEp01"2QbB"WCNp2piAsdD?L8`A**,%OEgi^L2`tO:rd1N)8Kk0ZL7';KraH?i^TF<m^#"SF@Zk3W]s)hDiCHAX%-e
%GOYe]*'s`=03BpF"37Gm7(='&p^'9sQgbeW#_rbpQ*284#fi+9*"gTg_&[(@=F-$iDl?^3JqLsVI(At33S<eF&-Njj9M,U)b8;'9
%G';u;CW-G^5QN7O)\=)V'2/Sr4&Ha].4BFMkF3"lC9!;3Gh0',Vf8bq!>6Ap]\!h4PN4D1*k5Xni=lcl1NY\s\7)"sJq4ka6Vju&
%%H/XW-uagUD[-=K1!Hf9JAX69WEbA`*jB`>`V!0hB-;-`"9Z<0d@14*#m/n$[]C['=*Ee$!Pg4t,6e)d'qc'9%6lTH@WL3bNbhe`
%Dg[N&A&uVc.3a!?q3qhF$N-GCYJ0%G.q&MVX].UbY&*G9/8qmbg>!"ac,c2WI>e>E7JuS,!Us<MK(nXhq,Q@eAQqpV^+4pAKS=r)
%K<g1CEJ!k#d-f#KhE?B)g7WC>_YPTALYt5E\&!#e?WODF%AI<@GRB(OT7Gg[Z)8K,)pfSg&tYbEK:%f=(k@4h(hl@B^7>7[:S>Ef
%B1F>++FR=UE@F]kc4HE[r*fim)fgstJ9kE&Ol/RW!qQj]o`U..Jb]KVMUW\uq)/N(0B!ZfX&N^="dks1HUJmN5X&X50OL-@/I`^,
%%&KR_Hojf6:kWcU-p9ou^4D\Lr6pJj%:Lh*I4"I?hQ_]<d(KHTS\dN[E,R+X#R/u;EM[?&p'(R*f+V\5a3I6Wp4i'f,gd)=@3!ri
%2M(N*=csso)3b?sjpR.bo,nWc2jM>re6Ao(km\4DQsqY7hDe:^[IpU,`/(*:ZfK*rS;="lhXCZJ(_]/Q0,@$no7f42bT@W\D\rHZ
%dI]7k"R@_LK6d@:bX8VI2(W[!nqK+bA71#M%G;m1&MF^O!6g,6SKN3QIc:TI'"eCaMH.Lrah(IhaZEP3e-hB4RNUHUF^Rn%7Q:Hp
%;n]$UEP+$E&(;9ta;a.Y0oocFj:,`<&"*KE_h/)_.6uaomSpN0"S,#3-5[".2skbkF66'tR#d`l$BR2_2o8PA(DG>A@2s4`>o5-H
%$s<:mJnl+A)e(gu?l>-t(^$^!jiDTbDhQ3IbS@ta`jeie*!qWa![M>H-6E;.JP;0NN8om*`Jun"$Zh8Q5DAXIa;VuSAf,HFW@>5s
%(iOf?1A:NocNb<jR'%nmhACBnfXD:L%5C3Q&ikO5`h7asAnDluMb)$Y7_pe8YX&SKGQQob_:gMc'Q5*:=G3Dn'@p-].k'9*Eqq7T
%nV29;EafB52b$!+V0`:(%:m?P'GtbIPsb=\L@I_7meI0L2nk,_21jkJ'JN?3N]0e]fK[@FL4LN![_R,Tr&LV^.ZcSY:n]C^`::k<
%bAs]*=o`.hnkh0(2cr'OE-;BT#.#;<MZq/57LIjL(iQ@T82WU:'^lqdZ^X7nnYmKiL,ZJ<m0\Gh'f9q3n4%I?R[F>s)b,FqC/YOZ
%8:n]G+V<M\1:4#'GU*&>,G-K:2qVE8"ssFs6Vn7=Gr'n.7d5.IVqL%@Tu&nR0FN1c&-sDD_7S[>_"cb,],Q]\OaJ[X0VR#/K.dA<
%)lpji9'_;gNPfr+9d-F%i<is"h$mN&.D!J4\\!11LL[8QYiu`P0#MjBZ1p^_FOY3$HA:-C]*:)ZVJ!d4`Zjs^m\>m"('>p8V5\Gd
%+[Me:b\k"'+usC!AiG;.GqMdK[I"NkJl.X9Ns3<FOQTCn]7EY$i=+D!"K9lrOPNG=YjW(TNF^8S'$+tg!`gZ[aDRYI;:Gn_2jh$N
%;GtSR9]&*s"+ffn+Ygq*#hb1t,8ce"R,*jX6,7/cfo;1`)5e]m2j,se;N[ZjAe*0&cu)P85bVZhg5Tf'MYBhS6KS\+!UW>`<Ri'T
%].p7M6E1m0)_4<"r1BX*_t?HL,SS[F$F>Gi$>ML`(`?VD$dl:2BaWXT_@KYWADh?b`tdBI+9Y0km]bM4V8-)cm7%/Sg^%^T;Q-DD
%Ltdn95!gXk!k'SHGCnS/L+D>/'ARJ)X"]2qE4^Z6a;)\(h+/[hL(Utca;AI+aPGJc-1hgj2\;nf`rrplX4q$(KckT'ikS[Q$pBk;
%c@&4NVXfe)X,^'^P@n#`OLnB9&Y/6Kgl::Ub]aW.)^EksLbNd,;WoZj^thOnk?K:=@&=K@`U1Z`''R5hgJ(!6Nfn,0n-BLmXr0Lh
%$PL]K`U-.jOb!?I\/V<)Jft<-S'3(H&j(b+JT6A6NN8^<#JU0?\=6/<M:#'4\D(a])TM.k6]:[Z[i:;_<PVB+8)$j3RM4Io'GegB
%/da7:^6lc!!U^-qK!KHor"3U;PRrb_h$A4;g"G/#]@!oX[5f)5)`A[>6l!2c7]E(Dic\hc(e+]9DDr>aUpqbkm7,JFM],9.]9/&H
%U>U2.`Pdek]rj4$)?hg,,<62?g^UDWat=CdDMrHW=Bn_!6,6bo4M;&?2j,Ct-7->`.&:1"]7E:WpClJ&+K*),)MAK0\-.KeG7t.N
%DBj*ZI$CXk$#hiu8BLYC\D?(@'Ss[;gPmg_9[OL*D?+rI4t;BD_#M=`f9*\]i(+>eV?2nr-'0j!G7'M11r=D<eZe-CmiES_BG#l?
%VpIfa]2"I?hkQ:h8Q_0=Q5Jq&$J:oZ;S(k1"([s2lT3b>TF?/en[hB4MHh$!W$PB6\:SiR@05$9W=7?`puYWdDLfd%'XeUS4%ITq
%d)QE.?@f]LpB7?tM$27t'1^IX82hZ2\@@nmF<b0Rj(tIi'MR;\:C9EI&?&@_#ga%LO^jXW\tO8j!>0_I@X.37i460n:D7hf5f'-t
%OUTMEQnJRJ3b!.T)KR%u*SP.fJ6#'-k0B:_.n<ub+QBX?>](Yec;Hnt!>q%)\\"VWB@?t_cpnEK1[$V/:i7C`R,J1340d#(OPF5R
%75T%9jN_e'#=NH[X@'L;!T[!R5[!Td!MgGd*[Yj]87`WZ$l+<eYTC$!EAmreeL"DR8MgO(iWd"J'lIMt%)jE_!-)L^.b=B)*,]`4
%P8/UV\7'QcT&Ts-)_6Tng-N64Ud>Fn2fo<]N[>=mfI^L"K"qgoNSHc!\:K0^rJ83?!.bKlNEMMiGP(:-SIWB9-(G-c4,XbFJ@:_)
%9TZ^aWflqC)0e5aYm?'4/lF->!kV_NLYV3*Pr(o5h1fmeR&?&##VRY6:rlReUkpneG*,Uf$/ft=N,JaPL9qH_&.78Pi/6R&0nJ)^
%L(0/p[LIOA]$hO5>CTGQ[QBbJ[K.I?b"uRL>@HR:"D>=Rrfk37K2/Ej$`/Mar'&^clnI0Z-65X9H5J.H#FKAXYQR/%f6E$h/4B@J
%Qu/L,a,o+Vf)_JBfhZ"aiLZn#6X[?<@,M5Tf`oD$\&JP]]+#Ar=qkKd4,/qM+PR0Q:]qECkK\UnM.7?`D8\[fN)rbC-*<DIT7Cb<
%Wa]iOK5BTA5_#JXCa4Y<Jk(o>//0S/+QGN(LfEo-5do8jVc/k\hC$B&RNE,9C]^o%A.6BfODQaGqV37%dG.985=U`O["i(#PCRJe
%1@mFAA/ilLEPkI([UBXoo279N]7MRNgN:pqf9>E!@)l-`MQr-T*'mQqBG09JC*$r&)o^G6$GjY9`&?c0,%$a'Cr8dm_G25^@2fh1
%Q9]8=6qAJ@'8Z$.s(YL:lrV^7"_*s/4UV#+3lL_WAr(:Tn;NAkJ_1/67^u/([Lk+oF`Tk$[KqB.Vuq^4!0P.>Fs[LLY_+A98eAEc
%]T?$E).=JMR526!#htHALYukJYmj9?"EVobk`q#b:%>V75#-t;TZR6Y\7>OST-6^Nc3.Dlm757B"^W/87i8$FnCgEiX6A8*NV"QP
%V.*Yr;(h@lpe@bY4Mklt8^pR<.0%R0Z8F,GFtJ;u4ofCd2A$k-"CJcOd\%=])mbGB_.\%7D(,$D^/DV#+:&[p<<B:n3>6E7X:7SY
%RY%T2--KM#[BlBt&QKcL,:WlCk*@Q+_h+isLkU)u:*?r#f,.FSm@5JVS,p"uO:?%l".hDM"=fo[Nc&G;r@i%WJQ2f:1GWX&B\EHC
%L3OGbVObA%0,RA%6.EtSh4_3>f(<ArD.mR4d8&\rSY0X@((+Pe@k\(@.l)\[VMi;FJg#AqNhHnJ'PL_c#]9&IU<uC@["H<`9`VO4
%A$/]H,5O>$I0$ma^h8Er0i:mEC^B^.]O44TL;873rYG"i+JB>[ltcr'6<"_OcGo-egeSX^!7s64^h,r_18.r,C3ClL+G%`@[0j6V
%-]$G@V$o%Q^kXm"1sH?j2+1mcoZIN,*BF-fdBY!`?QNN@\BQI%[ME*\Uhj!i;"J7kC^>GT-g(U[)[8T.W#-jC8nE-2abBpSWc^1N
%A4Jq`&<L_T!N_Khlo#m2,ALnFaG-/gm37.D%C]8JaD?f0NLY\]"ipn1*t(%94uRKnGIYFu6V(6D#a>?1]8E%)i7KnZq*i<CY)*73
%7r2uIP/\nVJ]7mV9Jg8c1,_I2H6JLorG44688tga4!54Q)[Q#F%Z?;V(51'H=D[MY-n7+XVP36o!fC9h<5W*?lmaumJr*dPnifBL
%K8YNU`KPTK"KFcIZr(u:>\0p&@Nub-*Wh18&Y#/_"^07^N!D/T`!16NPQ\h@7f4jV)%fPYX0ldkR+Oca%#PK._Sm-aChl$3E!hJ^
%5U3d^!fE!:n%c_6<+-gk+@902`C=hZ"V(RP7]/%KG63]9/noL@iB)e5#*HfB?/Ua#>q86@-mghP%:K-GJ]%a!__O])O,a9s&GiL3
%&/tn8o8X@m)r<q8f`Vd(;hs%0MeLb.+ftq.Rd?=`Y$bZ_+GRpY;gAos3"aeGd'*`ch?\mr>"'h[%3&;.#VHZBCc&%^RVbR%7\_HL
%K/4?&G0Yl'KoNrpi6%M;2p#&K=P-.fjNoG\/WLK^7PJXP@A-<2%#0`dcWI`B_6B1[!Q0XN#q&3XYi1sYGm4Gi#5KcGZH``1%:lL:
%/7@*qJP`h0JmkFqc4JSp&hjT5Lfu60fDonWV3M>o)kXp"Rp]Z7hiIjo'XlO)1BN8ikqC,@7jr2L"tlc=!,"P_DT#B(a:9p.B**dH
%ii(dAP87UV]j6c)JO33C'.@\HUTk`'?t!9`$1nq39YCF\;VVTn2Cd91U^i(fatP-U#S]2-RB\I!#_e7m(rSKJ-u@D7W9abA@3ZUp
%i9PP?nj=r1--7hX2M0>A8gnA[_G1Zo-=GICo7FD0#/`o^BB\YL`UP,qEfX&Li'-6k?moiI=J7KU!eh*0d%jC/YS#V&bpNRHNIFpp
%XWUl$9^bJfD"\&Jc779*i-HVa(.Q.FSWe6E":6$Lfn9CM8D#&KOs2#FfO0CUqq;/[RrG.&lVQ4N]1<0iTs0Z2R:m6^Cl/JB^-c<B
%Ql)P<-Rl,1H1t(,YgFdNaQO@;M_&X8!elV;-t0fM:tXj-1ql=cis5q,Jt]Eb0#eGH,8<%tq4e(HNV50n*(+-Z"`6pH-u:">e077g
%j)[%%%#'\#>=N`&:tV]`&_)eJNC&k<iL6S+m8Ce(%=93R*&`1r$oW]XN@$%\/f<QO6.7(]Tg%[.0,$>3JMP)NGI#"mUIn(N":U&;
%gNSO0D&LfU6K8%t!$`Bb#TN`0>QU`lHm5u(kX\AIr0XEp&Ip_1+t4II`5/<)HsRE)er8tY'-(h9#$'dl&2qL06QKS9_BrInQ`_IC
%"5(9o<se=\fEe0ccje5bf][]L^^L7\`j7)@#%OX,5ba)X@07[H@onbrd8G]!,nhP?Znik=K0WiiKl/l%_F=Sq6&\Xm\-hFi(FX*A
%_,Im[L;F.9!p-jcTWf"p/2.u!-2`:73-,*@dS_&4fhS6F1%rOW"UnoL:*@7S$QI>D=9<r'KahS2EE=]-Uu5\g(,f&E]Q/UXN@eTB
%O^MUm&I+/h$PkYSBhVia_F=jaED7!&[P=)16=HY@K"s!..-s\E-u?QqC8r9])s=?uZiYpjAD2)+Kae_'m1Lg`Hj2sH-;`>c`[)9H
%CdL'3[UW`U$m_*L):SR=[aQq=\#9*a&XuWOD"Iun(9KY82O_X:jXD$)ju-`EUgRG[`.?"D;_W#e]Bheb&htU*W(NF"@<X2RI::YN
%Y#^RPE_Qpd&,HLU]SVOq%^sE'[L7f*L?6D^;Mp's\B*G>"?WmA75;"[>GMu8].hOL'EPhMd8<cB3O-?Z?PhCI'DUmF<ke)]_CSaS
%lb`HS;s\;@S&:%6`kKIk&tM9p6\#PJ_^EOW!^s-2f+<%YbYGsL*N'*;E3Fg`8=L$7%A"qG3p8HtYc;'H]QTeuUla1nW*C=/&4/WQ
%B>](OT0k/Ld!l>j)N(%m<k.k.M@Mf/>sjJR@eL/a[/a#PgpNIMi=iS6#l"IbK4%tp`%qZB!d+tI<%Br[5)Rk30\9V\3"*kdHF?LM
%!P&E\3'"tqiu7J0YcP9@>^OIQR6Y!Z&O!gZE:"rN;%TnH)i"$u-NMb[r_m*X[g'#?Ba)/7+NXiRQVYE!6Y/6"_6uh.@J(Yp3_:ab
%"PF\U7Ua*?L+!pme.Yr"W;M1ZS=j%5ed)u>)W!i7C;I93L=,EJJ[C/.MosuIKQI:;GHQ*SCBu'$%6221L*DD_k69-L_JJ_U'JsUp
%KqilR!OG6Abtnl[B[@V>Y6;laIUEb^$&g_iND)_OCK)M:O:$_"]S:QH-5b<A^sNi,9HjrdM^Sk^&0L,GODkH/L@Gmi2WIkK&5=F^
%4ds,>4JWTRFP"So@nsk@0p!Q?>7#_](huq3M%3f#<6X\CjD"i*&E)h!R"Q..C+PA)8bYK@ZtFD8C:+kRJdH0L`15hP.%o+@ToAc'
%Jls*3;J6,7NL2Sr\M.K8'GrM)X9J`nN2CjM5fF.ZJZAtt)moGJ=uC]P.X\YiVhZfmJlN7(*CA3^<&M87=+RBfAV0V>_5RX++?X`I
%;scS5BSo^T[<NpK<'qu>@@Ar@2.FU7'\S:>XXHsH;%3Z>(>0u>":Sq2+B3\:#p95u!9f3N5k(`fT7$c:%4QFaGf`NJn/,J6"A\=s
%+5R;^[?Ig\JYiX\E9,'<Qt%=>e-R`bpknUa&6rrm?jQsfV05`eFb36Aj8]6*:f-F"qhm2.,P&$<8Eu"9E^6FTMZZ,h!_<dt)a0K#
%4R*3_IO=^b8mnOWOCg=aYZ@H+I=apod2?^9$:Z&G%_Q7JB1e"dJYI%kBe?,jO>k&IXXuff*&B[qTe<9r0bpiJMB7]a7A2=>]t=\=
%%@A\K.ml"h$gW@q5V3cI(&Vd+fi%V0/-RC<IG.9(h%Y8u;)UuNTB;e=`L]Pc_]&/(3a*dn'+Qs.=c,9MqnmI>?H8UkCcKA-&D1^L
%goS?=Tg=]0g/&$Fp+0GTk-PdN5p3'[PFo+g'lb-IrY"=aU-&VU:uo4YI'VLQEJ`unDOSJn"`6;pXhf1bBnQ3`_6&5^;d`8l*GcY<
%ZP6=g@+,sSC4r>O=W$WX%q;C=:oJ-'TM;Ttm-e70!7jhgWWUss@,IQ-9a`kL@SKA5E9S%7Bs:)=*%)t*"'>h/R:`,V.!`$1S8!K^
%5rhDBV?%'XS?Il,%>;r$FS.%C2M*a)1cTq=U.ZW+_-JMoML+J]P[%_,dmN=LE`<7'L4[t8?;u16@N!=EM2:(/>mH_!Q4+C)Ch]PO
%SqpcI="2B<d*_p#Mn(VWAEdj>ZD7In6TQ.=#5L"K"8W-JYgT@e+`2dq/t=AbB[HhIJ_1;C;!H3N(J7DlJ#\ma8shk9$WRe8_0M*L
%6j4qV!g?KFT&<1-5VZDtQs)&9`Y+_^s#G[&$WXI-&IQ.9%OIYLSRmBu%2%/Wn>5*<b)mq&"@j@9;LrhLA>NJBTL`]%U(YQ2*8-lD
%_2nkS0.Oh4&CO"I3!b*mS0J2.<Xe4*3A!fFUljS68!$2M\W&*>dRE*"(dGTN;)lCQ`qo9UY/!O0-71at)*Jm)9@;qEi6`*'MK:eo
%N`LN_JW<4l96A3/Ecb`sl7$[/A8>&)frU$`<9dLlUOh/Z2V30&BV[]H6)3t`iY40e^pjuJD#tS\a*O/hi=MV#6'3$=)A<Zf>eu=&
%6o;9E$!]=*(/TSiUIF50>/(+S>o<-5TVB7L:.`Te'Fc(?a\RJ^"X72kU7kMQg++l)ePd%M'IFaD+=7U+8p$=t+9@<?)sS9f7Jt%)
%&REI@VJso!*N&VY&A1XIe;OnIBPfGkMY`hFK/ZQPTclGtYsF'NhXiio6Xs5HXt.T?i5.f?<sFD6h[$+$\Bro"28Kk?)E_M`;s=UU
%dP(ZgJ3nmP%Il5%R*[9[:7ku^K:\(4UB1e)KF',MV_TfF@dGM^,R3qoC@[U>6:6/'.\=k!%4$*CCHF"fW"d64"bd/.Y/lf`r]&8o
%>j@-lTMRX,]67O8BOr=+.3LGqDikDBijf-m$B,WXBE6"?OBFl%"r&F7'u45(=b+U!0^-Fu?A\oG>$eWX$Q<Gb]jH>B7PW3BNW^r&
%Yp)K/m[WhT&2`V(#Zi6l*]QS^@A&1%8F7')BY`lLK!'\,NK>^AG7`t<alrAfb?d76JUVBNkLTW>gAh3>n,CF9DOtlA8;KNUo&]8`
%f<(hBXfj*"9Rj_QZ$g3YbD.0eq#^Rsk\lON?G1`hD12&;S"'$8jjQZppd;C_m)'@Xiqo?4r88=hmh?Dg/H3!Sl[Kl@k=&L#Z2!ef
%0oMssV=21pn:MD$Orf1+O8nYe-lLP[RtQ$p8i0LMkA9_c7O#Tr_nGoHr>/uPJ;Rq].a-4(5YH]rp'`[YJDeoOFjgfX+78,:UnD9*
%U>;e%*h!>H]#I9fY<hFu3d<B9M!AUt69&(WkL6,tb^m&Pd@3g,q;K\\41A%7VIk82B8cEm[+CpI$fISUpa8j4U2-TXGn=>^:l:#T
%(&S)OcL?+DQHlqGF!dLZR$_-1r5f*@"F+sMYscX:-R(U]5`pjW/G.<k4<KE_&F';D1KYEl1U2eug<%un6_//>cNtW!Bqa-XjGV\;
%DVW,5[^".>A"]rmb%m-T!-^#:#N?`*7H*2j8pSni!^J7]@_`&Q_"TP3,7W+bNF.K1LdMQ3<'`oB.PfCggIOZWNZW-_AeebfilW[h
%!Nn8./aHM(1u_TL%'YfH")i[;pK$L+P6@go^je\m;eHg]&EsdkMDLsX+NME5r[t!R=+8eKmNJ7HH1#jfmrZ"->TMqm?kts=I?=h(
%/&fNBSIXJ9@%*grB"W:+*1W/U(lWX8oG%'G>$%QT..\)!n=F!&H!I!LS.#3m+\L^Q+2pUb$peL%WC2+J@L,$Am.o"49@>IXh"4Q`
%_!+g$J:m!XkdF[Zg=Y_m?Si<^W%4B3E5DcQQL+un07C)W#nuj9:nOG8^9*:OScmtO]^#UHL3ca,>&<QCl+j.:DN!9U1aV6]'dS`-
%LWGJg3\SUKaRaDIQfsg;e]aQb=cjI56N<ffD#@c29H&q-!'0OPkfsOK$+i#qM2">Z#*S2;Qn30_[Z>O5,$c\j0Y$]!KT:V\[)YIq
%jDMaOdWpQ9QAp;3]=mc4m<4\;jSj_gYqpgB<]fYf-3e2&K'.%+E;C0*Z4I4<:39iCm_#=5DESFX)e&-RqbCL4V_b5E!EdS,]IjHQ
%pOQu6J0&t_oP?'SEm-^jqFWjJ'*tDOY@-eE[Er3E"(dtWYomK_1nP>6klMM1rME4GVp[nD)$-m;jt6p@`'(rm"%5gA&GFeSVRKB-
%OZic$"ZL4\'t0Qa\2&rU9Qg+Dm\O]mHOsG,9BXG\6*Cs0'DNp0eicEQO]fq3`e"dLe,nh6)uFS8/?uHKG$XLkK,i:+PrI/(aM\DK
%&1&W38.D+4#'20'D(;KkCkk`:i;QFE8QnmB$8L8R`kIGgDJ^)Mm)#t_[scaF\I'lIAV_2)Z@*"0@:J9%9I*!)4BnjKbM4"f*O?<8
%P?(br2Y%0b,ohV].\FMhk'hmOk`&--3;RJj+qKGYQcVQ5Q$u-_Cb%[4SVq#s_`r]%H7`Y9L`kB5cTn6&*0Nr($1QlD2o8'=#?Ej'
%;\f(:E&m4$<Q&JO%r^aL`@u;N)Yjb[l-<\MF:M;fA[&K!+g?\)?8-M%?J,T]Pl.=K9FRLfm`$oONN:]B0`GaTSDK\,=8;Sf\MFQC
%ltf<V,?N)Ho@b.fFt-Rp9QeVgbJ741+p.?I/l4sRillLQ-(_a4,7BA4P"p8jpf`AKVBVT)2%NqL76(TII?95ZT&(gR$ZT_dj6<[G
%G;7_\Fa-AWa>QbCgG.!WSijB&"Z^iTp[6ul8_n/Kh*O:Q%m*iRERG*Z*l=SMA-V:\f1IuBG[)D3&6spAf%Go!nN_I5GnS6b:M/jG
%X)oL.0j9\YqV*OV)YZl<Y'@)O#[]WdTj!S%_.Q>-?UZH\bDM-;2DeP%KE`5\<(T[543B,O)Z1Ot$l1e\cP:^b.ru(uM(>><DpbT%
%(Q*-WMcNdOAue\q^rBEbHUbrS8ss$SKQ(!U'"Nl6=acV-;j6B;*jt'gI5i80+!!i#3-]oKL/nW:7-8ob'$?]]KWN*+Z4KMT`nDsG
%N%4C#X"o,uBsFoRF1Q!agHYq2,qkmcS<b)NYW^\T-^P5`$1+5l;!^9I40_ZId0-#7+H2uB[YtaeJ*CK4iZNPT$Z!/$U?%.J+t:^*
%]hCgmSNN=B#VhFEmO^ZIM?*GD;jP$G49($KYM90K>??Y1-YWPq,e@Wj)-Vitgj2sZ+gF5X^&fDcD#rULOI1)+p]`e%4DACr*l_/^
%,UOUdQs#Z+T^1fs5#a0e=HZH&B$GU%&1u)*Sh4kO/?'&+=BUJ:V$!GGdcI,f&7(L#Lkt7?)qVSQ5GIkpgr!d-KcZaqIY&>e1OZu,
%]u*b+.E1ib]]J?V_G[_:daE!`Q^,$C*'bHS=ef5HesG!nEX8IB#3mNuRuZQGi.0KN[1)grO$EpS8KB8$@%7o+7te=Nnf[:e0JL9Z
%$Hm'glus"OlW@:H&;EG<I#eFHjm\AXU=)Nu3eoL8bb`UQ0liT#kO$WOP1Ad6Co$>^"l>D2);6Fj?jb9QiePH4AL#T[^pNbYcjlQ)
%U]o.Z*>sBQEiM<+lS+2q[H5581=@nE:Pc#u!'\Lc0anL=V`_9+>c+ID)cRh\[k(EOR^A`SZP>h9Hu2i*AAJ&@<8BMqd]gkjFZ;/e
%0"U_8C5:JV6C=iNE4R2jOlPEWe,q$%h+_04Z#1\%T#1K.EI@n_hlndR<qeK,`9@h0YTfg`_I@JZD`klM$PH)U*42b-Kj=Xc[`tPf
%=BI1"MKG$&E_/2i<Si]IP*%bCkk\Kqef>*)ctco(HfoZL0d^r)S`abo/>uE,,5-Q6V(^14@q6d=:Rn*#-cRW04O]u`\J,7mFkc\M
%NBA!4K9=UFl#S/M/Zm*jM766P+g72)(gU2e=nDmh.J'/g.'>1%;'NVHe5eB4S61^QIn5]Q`$3?F&_=NO_c,Mg"99.E<Hq05MJ^m3
%<@]6>cDKR3n+<(Eq&I":Tb-'$onRs0;J(H*SrtR/e"064VBUno;&f8&0j/O=la>VqQb'BO)UZ_=93lX86.5J3egn5%XdXT%$jhdZ
%m0]n9[\Y#C"<d4[iq+3$E@ph$T7G"Q,!u>YT,<u6.P2kVfm/\\ZnO$h[]Ip^e`:uPK=su4FeH(7'=2IcL*3.IjUQt6_p+dJH@N63
%%bFq9O$YI;:r?2<Egi[+ML&ZO+e]+`cAL'1%.S`g-FG3jFY-%Dnsj$[l@6a<obKDb>)l1^1_?08p.`/i+PnV)?cditG-,kpB`taA
%&i!GGS&LM<$&D`;r73rLVZNF6%Y6D!M&9@e$RD5RdFZ[(Msi6Nm'ptrFc+ZXlWi+Zj!_nJMROCsU1=K1dNj0]+T+AKT%*rUh'CfA
%S:$D>2Sl.$OkK\Z_tm*C_TfB16?fCpJ0g]E1.hCV6H?l2VA$]s>iH'HM(Q=)/aGoZ+_SGpZ*+:(fElTi'%6lW.O-iPj'lC?>+0_(
%WO`g(i0.@,RfbjP-5M_3fD@6C9(@;>d0TtA#caU((:Xp`f^cp7PCSJY>gd7an4pB&[IY^\6@e8g3fLKsES?13HZnnI,4tB4d!\gj
%R/OTq3C?PP-6FY3"')+*:DRLXl>\eG_M++;[Z-_Bn?.6=r)XY50tT^I?s31k%O8oW;9/al'i!U+`,Vm^)B_0Wjg]Q)+q[.PM-)g$
%V-l\ci;4AUbfmBF4-5ij@?r)roKg(oLFn<":(1!E1pa]oZUHqb&?T8[=<`9O#,6I$BOl0,?'Q/5$=F6V&l7R&>jHs0aW^]?l*Y0C
%Pm^TtU,]j5iQBJ%-':9<mHrBINV6Qo?l;A-9]!r]!d$=2!ZN:q$P9YS!AYUJ4<cqE/%AeX!-he$D6gn$2`em+'9?;bJ5-7n[A:b-
%)e\tMl.Poa/jp;"Fbb//3YP;s"g9M^8r1D8%qiJ,f)'DIXAmd^0Mec'Q)_=Wq'DcAaqr$Q'K*COrVX63:@2bMfa0L9lJKtT8fu(@
%=cJT\]J/`EiK[u]@j[Wq*5^1lNo5a<9Ji(%qU3q;m%gkP)]oi@U3Q7QXS6/i?I[W#$DA-e^!M%ipG,UM'[dZOGhZlW6RXu[9ELN@
%)IEQjgA6QQP4_tU>mM@UK<`*/#GIV'WrS8q'WDo#6MDHT&h,>nM3de9W.P;K.mgVC/KrnC@KFo]])d_(ab)+(mbRP"F9+-0TJf!+
%]))]r-46=+#n$pc4@)q*flDW\X0g787sHpr+^6JCEq!8LHs3Ce4:=CueN,N@m?o`1#]\4e<'o<LgmV'0NO=*%-.77$>q6)0SmlA>
%o?CHPo0V"u'j5tPK@CV9&V^Z7!.]s^3ZoDK$XM7eKUWRi+-=ZZ>8<#q,%>-P:0-6P1s@-n`,qSgq&0f!I[bs[IHj4ajcVLdc-MIe
%C:IVakW]`,2KD[+S>;;6*'`d7WSa-&.#8]s3%dQZRc>@"<g),kf'hS>f"NH<6%SU':'ah'@Zj_E,++3)!ceI=&D'o:(:Wo=?km,#
%\,,7+D\E`3%;92'n-prp,=H)JTSB`F#iHUIonKq)GfCI]!As/9d@L>%a%@Z=SiPZ%kUP[)"uTQm'*lT9=]teI27HECae1t.m]hG%
%r%VhN8&-93'6M.Nf4::A#l:gImH3\DDqMCC*-+?G4R>(7,>f^:&-;CLn@j'3`<*iNca!f'lZ"7nEDI8]Q\ak"CjFga5fERu4rh:M
%p]NjcZ;%2m4VqiV#>o8Q-KbmtCLofF=pH4%c8mJFJn,pUGV-3M.[.f8S#@U$p-AQ@D9VpRY<p(*TgTU8(`4+f0E>(>]W,@%20Kf=
%if>dUB-EH^OGGV[mVD(\[;7]Y&toCj5:l4X#aaLuC?[ZXeDlmTL,3F.:SX6YLX'?l8Ko(qORR#<ckaQ/!s.EBrJ-7]`q"S]bd7C-
%[PMb)4TTkCRY^(#eeh'>LG@kQQ`EXZ/9#,J]ki#t\L;fE7eQ5E%YI0t-PJN*/?*^s`#q\Ji"\n84>%-l%W-`OSa6p/i$=ar`ejW7
%g&Q"a\pGXg&P-rO1?fG3Q4cLM;l_50lp+9G5(8@`>=ofC%)&B`%n%Y\g0K>]0V=&]iI3)IbAt;:5k8.]<'\>F8V&[@qBkf'j9RT,
%!"q47EFMei;&a@%7*d@!7lEG[0r0[S;Re/X9iuGP!`_SqSi7R@l6j-&'/3"q2Ue+sQsR!8$oT:>RFbQ"4KF2J"WaFX&u?@#49q>"
%@c56U2VNcQibFIhb/9t="nEjYZ`LDsL1hXp?9qks[Mu.H4/Z5a5C'Bm9J.)og%H;,]LJl`(^NN@oI+3a$cT,:>DY]mY!G?A=(N]l
%X%&V_V_'1&G=)a<jrk\S`D#sQ0sR+`eOK4LR%@3?';tQ=a;brm#.bS$%1=:ZWskAA"?Nl@^/(cMUR5Q-F?`=OR!-JkV[iJiM&8X&
%XE9#85RV&oG!hX=j],>UEM*R-UYa/Y8%qKDkX:.k[bBVOf6Gg7puDWH,KHi10OWEV,GVhU6l21$#<t#,YHgQ.H6S(hF&T.^H4Zl\
%N3>BCH57`;k28087[0K5[MT'TMA9STr?AIFQ\%,WiN[r8YOY(`\Om8b=_:\!+pL(5-7$0gLhN=mAnRYG,NmH"12?LuZ?Qg(Uc;D7
%1M5a>L_ADYa86^r9.O5JL2NPO9LagAn6;:tA8&ts85\HdB4@r)PCTJNjk)M'gbBDI)OWJ[cs&1^a;'u!#\$X+,E(dK=h0=Yogo9V
%j?>tr:p5\3_l'4bV3#pKU19eq>Z%4r#1e*1d]fiA0Fk+BKq-**'K+qmE+_#C-a8p;i%9S[B[4.Ikb_gh8o0[m/Bef>UTpm0&?o0s
%#.'$UrOscaZ`+d!&h'd;!22A`I=e\,K]![/Ku*g%9@s.<ZpB[?<cT&,<EkQXfIgsW_a1\3^(.EDQE[nc<J,UZ7NRRJkeg^0`/qYh
%M]n^?0_N;=T(6Q.Ce:1]&R5Tu^F56V4IhY&3%LVbS/bc=D:c$E/#a+$O?9JJN5VN"7,:X)-*c[`6^:1s:sW-!HFP3i^1[gTSSgf_
%1G3967+`:?'6EN4#(K@5LJ]Yc`?Z$I6ElRcf8Wjs/fK_3!/+L4;Lj(o5-SR\3)hd9cYsM`m53T(P,t^=Ao$H/+CMI:'d`$!H+:lq
%(`(u&;.5)SDMd"KFj,006WmGQYS\c[`/mAj7_8a]CZQ&)4o-'hG&W=Led+TU<Xf3u31h?i1_F/WBFCq&V@Q!Tctf3[rdYEs]J!,?
%&//3GKH6c6!hjA_A1"iP)fA95PDbKt*^KlQ$&\m2!g\]ZENCWs%L?,h(H!.GYrIk`MCPDM6@6/sq8-/PHB_Q;^p78j?"YP'</Oo7
%Bi(m!:Ve0>+PrBG0aI9H6>efqQJ`tHWD$:GRC5N1],.]NP,J[aN93]+W4>],\(bH)A[I/YL#G\WAjGuChSUX<ll$Rg#nj^uKkRgs
%a`6YRY9@ZQ>9LOA&Q/D%bG#4R+nW4ESDgM4J9E+AS8BCqW_S2%,HD8A-`WsWB3M*!:7=_(G%+pqdBgjH!IC(G=VV$RV$3!bJo"i)
%Lu]8Y2:b2#i2k#:FlK23^kUoH0OV<,IfjaN&ep31R8D1!>JOI.M+5I'=2Y2=@i&V(h@bF//#%bU"lrCZ.S1[Jkin%W;GGXK@l7X`
%P+R8<6kPYWh2P_XTL6e(j;'Mo-%L$UWW9+XYqC!'Wod_^T1M,7DAPh]"kP.10^O7DW`r'VXfe7i'3/RcA5P`gWQ9KmWd(aZ8&Isn
%%N*HWLmehZ5$3iOK.AinZW=RRg2jWTa<<]DN?b-T\PX$<I1Mg+,hoTAUT/ScOS,2,bW3[K08/k-d::N=e`S*&??\sR"ol583KA_h
%I&22o3l+fJ1f-4b8tN\+G6(ZOQ-6CXNZtWZ01?;elBMO?/)4Q/PpE>3`8U;%e'6k3=j9X#N:,I&kSfnR?e>aP#BcP:2kMrF5>\H`
%m=I;\+[k$!I^jX]7#&#N4X.bb%:*`6/S%T/m4%'L2HKDMBSl-\!6Sf^0<!,8+EH/*)p$%"o4s>5:i_FV`]A)I;)24IqC*VbZ`74\
%,RL^f;&PmC`^h2=H_XqBcL>3qJX2:O-&><=-?Kh7J>lLfc5H:*%urp&W'!NACWhHB>.fSg67':;iV4Q(;4L(H+C3NsM>@tS.MHse
%KB>;kIZT.r%;=qM9Z4#ZIPQgB%EO'">4Cmt!7Y*D\b)Ok^]7s[QDZbNgc*#j(GQHL3R3:!OsKa#(9Tf$9pOr-Ca:!-S4ASNB";JC
%O;o=T[ZQL`=J8LP%@;p-Q*3`up<XSn+QLrh&!O(L,e4IZ_BDPb;=7fr0Z-3S[0R\sPLf@)3DJ$/c/_-OM:,VL<^7-edP^<0pa02/
%fN+>^dHEL^Y/$oT)VnHdFI40WI#*A.lp*(PfM2s/8Xb4Rf>C(M]f[i3aCpU$DJVfID'nt()otq@/S%R?:YiFN($gD3<uaYl(.&r&
%6.<<5O0TNI90e+?\j.Q4HrPoM8&ZVT?LpkE_,$5cfVD>`ad8UC*r7uEMPWhSjAo^&&]qM]<rMch8g5JaHts)k2;lR`FJe[Q+]!sn
%8\jth,X+iW!^*H]5c2`?#\)q,T=?`IB?B\QPda#ud,@cR2eG2VYZFg75f>>_EQF<i;CH72:BBo+%,o`-9YH)K#*fYd3p[=&P6ASZ
%"uqfN5O$^S%VrfOSK-'m=b,6JC_enEgc6kq(F'1'7i'K\2eaJBmoh;Pp;q.7FVgQo""a<)8I"fVclXOp&KmB"eeIm\*CNO,nMXpJ
%4sA<\oBMO;I14Xp=K8YPGH6gsI-`"(WdH-[MC,omWifGa@j\0i<)&VMaF29_od\)TR!YMFRO"[D<R2ql%;d/\3_D*46h+.K51+MD
%3q5M\eC?tJD'F9NH[EgF"4T4R@5!9,/)cKg05<r;c^IZK>dpo)@Dids)m.Ds,CDg%>.qIu<<3Hj6,FFjbn=S=_>TCiXcnUD`f7M3
%porgW$`FSb:2Vo7d;qS&//&`H]<s$\Cg\V2(2FEsq`WUFl-'Yc:%FUCBMjVW,5)#aCCf^kIEaB5-qY[Q4naHERNO)lk9fnUrRXGW
%QR\IpHn)D!jZ2l<1Jn7"0s='KCgscW'Q?@V*r"kY<',,"(3=-%C[kiXZ-W>s&!7Q&MWh!:&@%rb^)rl@q[7EF+S?Y0/]9Eu-YQ?k
%--2)1Ee"7a-![o5k6#e'hK"3,!!nCLTRiiN>#@B\N?goE*EMbd`?,@]Z7lIYNo&<K<F2C=.h="+'U0bs2-LF,=B0II-<EX55nAa>
%ab*3q.E6q1SW!`1g(:NkO^OKO.)Zta%ZaVBFJ/%'$Y<YNh]_hgTb5eUQo*aEO)RTS%nX/kQ"4B&kNstmX9!8_lpi4Vbfat+giAI/
%E]!%po#gG&ob;Rn69ZY(ekVuE7pn2:DbI13TZB9d:70%r21uuZ/HoS6fc"jl@42K-ACM*FY6\'DAI-DW,1$95U9(XH,LQnp*daD:
%h?KnCP70V'T0)Bgfl&(`!O9eV9^]&F0WQWB$Hnp\;`uPsYa&h>T?JM?KsZpuT;Su3$9FIVECZN=W<6^7ncX*=G`[lZdXBh483_7C
%]]eLL&;7CohFmXh$2]KnQ@$hK;ME>sVjpBhB/!Z?WC33Y&61AC=I.uY#1ke)R^EPU"?@o5nFD6!.Y@#K+Xf^0cEVhnH>tZ)>WNjW
%KQY553%V$9;1r^LH?p3K-RHghMm"u'Q/gBtMZkBeo_C,s@>+pE;(*$H$,,)O,kqWF[s^L3JS?:Mf2C0jWRS2=+RVlik>E>kgJB>p
%LG?cnO'%<:>Z]D0S^SWi.:.il2mp,Q+j$=M98nNS7Em-CbgC6^UcHPiUke%moRn!Z_-%Cc(K>+$i%3tY!k89i?)e8nYEmhbkD[_!
%#J!u3_W^`9[M5&s7&QI>(jD9611ldZ>0o?+pgJ=aYO!\8Wje)NrXE[sbUf0-NX;%L#VLlQ'/0Gmh2!4?dpi6:!@)k;\Hf$_XIpLr
%#E?<<P[-l!Sr\peQ:-\%JI]:;$n]tX\T%+'P`Urp$I%AAS-Hg&'WX$X#1]`@+VRD&R5a6YoUn#H-^(Bi&_L<@Hbf+sU/t.sXPM/R
%AG(^crXD"q#>>?BVGnZf+BIp5I=SP'gI^X4c9Tut4`j(B]bD&[-,gV!#:R?hC^)OnUQ@TD"T1\MGjHHkfG:MO&J-PXmK6otS:RCP
%)9!%O\):s7/7,\=o)MpsWP4"9ZZ)$LqOCFU(R!FPg_&PD7B#jWi]L@i&_(.+_Ti@:Y3JcBFS,W2FWEJL"cF(U2`S:nZ[KJskngGT
%_^EQG5YW[GLk=^qZjRG[./-;(W\YCjKbn!U`&t,/l#fEb+o`1Jgp?0$:ctAY>hRgDYUU)G>Ub[SS!A6";AK&Y';S-:+j)s#82b*I
%0;dWd"IoS%M4G&CE+4B3KPMh+'X\?<$B-02YZ_L?ql5KA2@n?2JtAb.ZJ7b`:j*FRMu#=W>^4+n;gM"271NY'O^`oUW@9$l7a9iR
%jZh:MSSVFp"9kTMOTd`0)G!k'''e$FIaSeaXpICt\hV\Kl'465!Hh#\,#iLiqJ_8.ct_-R7'Cme2%<YRFE2.pc-'%_57t5g1N':o
%@o101om=6@Tj2RPm86-Li(<$3d>n_RZ$XW>U5rIYVo[KmoauMF*CR/!Pq%oNJQ&*G=i/oUAXt<ag8Yc%fm7G-$rZ(X<BjU9$]SeO
%6sQ\#CW/o^q(Te[8.%"H-U96!kRAr3n7&tg_$f0(&1)kG;ZI1:6!+],ju)38kgg"@2*2A"BUh=.@;\1>6S<uFTQ,]OQ_6Z8dOu0F
%?8QJ%,9iG@Ta=ao*$:1]f>u=V@9!+qC]Ip@]VQHk+2Eab.UJbu)]u4Pn+RZdR#>i[IQM9Q"9LU1#SQqOC&_9,_)5i-U!Ja\3k5DF
%Wfc@s$%X2D.O,l6;T:)jG]B5t1I7=@a3DMe4;3%l1Q-=o6l#EJjc*1F21lC#1g:4V(<*c`XfEb,U5'7/b)bkhCTToo3!#FZ.9ou_
%j&At`rD:j">IB0`dQ`PCg]E.7b-3j$SAH+$V8L;=Y[BC$4rcu:[X<=MB_=KdB:8pM'Eh;8S1(.6'Hp6r$Y<.Kr[rJt+W7(k@KLd?
%&*G@t3iD@3r(\0V$9d\(9?PA=8E:?"0e@nX@5ZD^ibU#n=].=`RF=+q=ohu?T/C7-(si%,%h$*;OuNUR%WFT0a1.fHc&=?pI4<r?
%3m7k*'Ot!"l3't@\:m27)LX6[m!uktEI4!FqfJf/\eF*b'9n9*4;ArChj(Kq32kt5kg=0nW8h`+LX_2P+Dh7+Y0h`6<CABG-]n_*
%VLf_OPCUsnH*:AVQI3iDM64_B,micfUrpODl@C#o2,?X1S0Yu2mt\>DLLl?;=%O&sU."WS@OojCTIi,tdE#'L?h*>]%7Ys-CumFk
%8jlZ%`u5MQVYdSR$AgmV9Xg_d0Cc#ND;W8BMcDGET(KI=HJsC:l%-\gM;cV$<s".F`gSc=dG!#QOOWD\D!=X'ZWq.3N!`6c!5UG$
%)WcFq8QLm#d)D09.#.=eDD(H_7oG"s=F.&`@f?`.\"G+BqL3buB1c,.l:gD)oU',+JCm5!X2kK?bs@2h)/WM!F;*Ie//qOt`c]^[
%W+_"r1+HPMK`[$gd1@kJb4=Hrgq[%:K9,(*itdSG</F#o1SH03-,?:F=i:pD;l&VH+P@sTn,pu?&Lg?U.K_6_g.kb4E31%T!UjPF
%0J&51]rDk,XQ_`>)A>ngO1D?GmX@2!*NTT93\OphR=jR8*>/E"9<]3)HpPM(mL:6"lOj81S:"'k66u1OmK58W8WY@mTh8j\B6CGq
%g#/FHT';]nKTjKJeck1a@B,I7dR]T3_RDBpb[(oi7P+e2ZD9BDVCQF'g+!l),GN`%R$CI@1/W/5N96dG.n%+$JLE3L^m>d;X!S"-
%8n:]aC.aX\P<`I$^ktf=:G-0+Bp;rPF>(uDUI8Q<L,T*L9iDc\j7?eSG!+037L`R^!eY*E`:Pe%5j_HZD21Y2e2l^j'eBJ)K1<0,
%"jb>[QV7L_J"V3<:4fAIoajSiPne:,FcGH0V'eQm^Z_H>ga>!5<6R>QQu"*@)JGk>3'%6uKOWZ/Xq)B4-'MI5kFncBAl7cPoElq:
%7P>BTKG+J)9[l-;HAlmb--iQj?L&"c%9,)L<i:.B*[)r*P+<3Yi#-FG3q]p8Q_Z!7'eYIHQJ@(eHmMs.XqjnUfrhS_$#usf/HdDT
%XKI<ceR>6aOd$Yq6#]B#ioO7#UJc%32;crEe=%-@#Kq!#DF%*]CA4%Wd1cd2rn-"j74Q(g3m%p[IT/+62e1"1[NP-Jm``IC'cWSu
%#1KVBoabFLDWl`'Gig?GX2PE]3_F3JA$.]K^m-^HcVbL0QoW*aZk,&QVWc9_p*hX'%(15S>Lt7;j'[#.l9rW/2Nt*sb;&F]BPjM<
%s&-b$NH2r_,n;JH)R:sR<_s"/LmVe$QqHTh%=6A[(^;;\Ljda3AGc00l@poo]m'O=5cu^fpuhkia[qZt.12!,iCr_i("6r+e?>r/
%V8=r1Oi?`[5!Kgmos3C0Z+?*`K4`O[:XB;LfSGUq"C5l>ijcrW'_48@Vofpr#d[nR^V]2H/KcC>Ct-?pU!db=3;^o]*Zja+/KC>b
%p=ZB7DQkQ;9(8VOiNW<E1enS,9G,Hd;3bO.,m(bNDMsXJ%IpU<,6YUl3p)+ABi5VuSl:lme:IfLC5>DFih`]#R4P7('U(;RTmCOJ
%p*q0>U+-#:]3]j@3EXXl0O#!M!NN.%hKgp%HQANA5J],45o>I`0GFrL';!3o9;Rsoaol^0JmO)N_3LFMJ^s3sod[d_?M.t;/dBgI
%2<'Zf$FM'l(Z>/rP!kd$(,>SV1u2N%BVASj,bF$HM]k_'SUf5a[8AaekVMTH7!906L,N<]b*C-(Sio@S17;.r<PTHDZ9h/_+g,4j
%S0Cdh?$n9]3V!"m_@aEr]'oON1E7H+0DdJD$\1(8j<.Iq9)rd`*kbqq[Nfl&+\i/Fn%u&U-@-+KMfd!H$b^Mj-(HS_=ru-iEmRd*
%RHmC?V]*fV=_klZ</G388bE8/O'_.)Fq55d`"Rk+U=YqgG!"$XX+kEkn8<:5F<714YdW;cZk0lZ(PaC>U>Cgicft>U*`2#.0<ah`
%Zj]0DX`TP0O_dl?MX/HlQj(F,d<&Y("aUo-SNn\k&?M'^2*i00)NbYei,6'!KcYZ-LU6i2"jM%8&CWdIo+9^4CYOB&PU(9rE->9H
%/U<]bBTDqNXH'fSf,COT64m1b?jQ?X;3h*C3c:papNo4G&ga@e+UUtNMk(t6PAjaj_pp0&60OC=dls:^#bVO5K/VrZ:)?J%isV7l
%"hKETj0)n].PaV(60Y(*=]U"s;!>oZ.@(e2]33NC;En.^/j'`tA]"MQC'Gu&jOY^A"jQ&f=p`PB&c8R&\C^W)&&"n%1QV&7^!)]7
%6NR:c6"h`;0']iWJJj7r9+8)d7SMj;H@cX:R&!,PiMr!r&!b9?]P>,u^"Z"NVL`if?:Mb'QqDBrMI:[']1KP(=UK'mR54FrMElCF
%5=V,;06[u5JtR).JPd9DTW+[OI2chRBa%O:,':94ONkon&I#_\';!,K-*efdSIKR#5hA9>^h$PsW6X#9PTE$"o"(1I4-C24))`B>
%Ai68pAI*^+:.,"D\UkOk=q[sM7bp>,%`d)rcEj(=?GT5!Be.8h-+6)>3?<r"oWZ+IY4^aq5[l8_D<t`P@2(C%VoZeAXHLtm=^D(P
%g[=I(+d4K-pkg@:*]&'n*YFrRZV8(tmKs!\%<Q3(=4ep?p_`1hB<\/^a'R25]q)JA_c)VHb6.U?":]AAYU4u/nlMKsB-peVDrpmi
%`&a/n1a\W%m@f&1?lpY.&D\(j3d*P.[Z2qTNuN]eoHP-00_8!/m@5h%lnr-Z:RVT)%LX3>&'Y;=aAuE]qUdjXe=m/g%X#T5F9#(M
%U@Vm?S[b`J3dnH5S\AK35m=f(_6qWY56[!,N@=GT\f<^(*jT02R95Xo.n-QPZ%MS^pSq19#a-rB8W':("_RID4mV];<+BHpODCOo
%Kd)[XO[.uZ(6N?M&5dB[iWp:_Mdg:;HM?*Y09.h:M=D#AUbh5bTIOq$^=UP#$HqToX:<?(3`d>d7`,+O7sp=;(NunkVh85NX(2jp
%!VA<KTH;NS\)IP_^,!GS=]N91FukR16kp)A!=$atGeSB22B1(G3g?*N&Kl'<G$CDMNR85*e!q.e5C!8:aa@G]2MW"f.4.!\:n0lI
%Z#9UCr7)=taJ%pp3#r45d^Tc@W!g_hn:HOdMYt=[V271MfNT*R&m[ju<(tj+[LS=[\+>]HM<VM$6EaFi1tBFeh[@7/::BgrcL_5+
%6s,`O70#Z[Q3q^F6`giJ%Fu5,3$@pF^F$CQgDGs>`]4or/sq)^f)VHc]g?:V/]nEB:1MK.6TJ)V\m,VU*G),U@O!WSZ<o*q8G255
%c](pZ8eF]RH;PCb?Y#a%3Vutp6SN=3V8Sm@Bh(BbN2!m!8m&Y?]!u)TV4%un//YT>C]QG/p*l50Er+K*,\sqP"kNQ9CXLYA](kLL
%`V9D?p?t4op@n.=0/lZKhn=@3r9NtOqrQWC;]dZB]Y'Z\5PiFFc2%&'klSs7VCt:6pd;C_%$\a"J,\qi=89OB@2B.JoDPl^lTa.=
%rjU:(?A-96MuWbuZZt21qYlsB`jVeh!rqSts$D+:9_Vu-X8mLBc2;a2Hg,@p<r7"A+9&;=(FD_]]ak;r':YS(TQYG3CTW(oReJ_I
%Ih_'Se\N;m!R(N?oA1V.pX[2%`39$ca_.Yb"2IfPm*R/C^'p<dp?/l%D:7@b"'#t[*?Y=`@REl%j;.4n<7u!c_#LG9+p]OOKL`Q!
%l<8s`>3dRR[457fjsE!JL:<egPM*lmE6X0GmVoK&KFW!D.8ROcJ^iSsDYhAFZ(&P%K#;K7]0'LdPABLuAimKV/)`^mZgHW.I]e0J
%[BkCDkAhGeY^nXukJe[I+45:R/G"U+q9Db_rn;<H48o,Kbl/&3?+`X\ddU:5*RGsXUsVK.drV!-88gTCP"*)FZE<cueTZ#=Hc'k^
%Bp^p/9uqG@7jmWHpBfM<_VTUJGn_4]",$C)ggFe1c9mgpQE_3.*9_#cFBkh,%_4a0PrtJ-Q(`":pM^%[7adbpmLTF1&X!6*%0QQF
%Kg+1L3:\!.-1%Gl,]+OB`h)Z"R2oE-%sJuUc=/#k,dW@n+,-@2C)is,Y?%9.2S;NBG-4AJ=uftZ%%ssb_/DSC&A2=N>7T]u3js,&
%mu_t^4(ke&;G"i9Prf<P'h2fH:/U^Go]Go<=XuXh8T+ia2^Up@nO>F$)r'Ui.s+liA,SB[nle(*BG>dmmPaq2h;?IqF^`jV`<QAS
%=Z6budp^E-B'VFXX`RC?oD1:[UJIe)gGEhRQJ]`eFXsQfnbTY'h)72rk7VgUb3S7Ik3R;tDVYTa+2*,?-e"CQ!-I_U&W=+J@e\/d
%UJD-,E=u=)SR$X:@T]fc;Ok%Q/NdVI2juLinWO/A8_dqF6CCMZ/\nDC7Y@Mq<&qPZ+mHij\N]l]E:I$h9Z".Wiq\(Mo#YNgpRbf!
%ggAppSDX:Vp^a$GKK1\[hC]m'55FpOmdfM\`CGt2Is,i%lM@")qf@#Wj2IYLd8/`9oDl_,W`8W`>*t?*TpYu&XsO[s$5tuG_4cR,
%gV_XuDR45l#h15/hVNY95'GhtGB1QB]E-'fI/(OE0CWo2cl^%$^OQ.Hj]-*]_[erYJ&=N8q>Q;Y05mI8n__eM^?/4`/jB-nqWasV
%nYC<smdc-7pWJm_g,;rTkGup64MSOTHFK^GE/RNkIWOEH#lf&Il\d(gnKVhnT8!Xm+8Y0reLQ+6q==*skP&2PK:<r)CH[aas1Ht$
%q>'UGrUUo%iTGAAR+i_^GBn3.q"E7_e(2da\%fS$AC#4irT!&2roK+/9qL4l-pRV+PL$C<4?n=)h`SQpV_^dG&++*cF*?HE1WJqM
%ILflA:)o&YMuMa2rS0?'GlR'sLK@R#Ru?BtB7eudj()i`]33QP-GFaR5FfJnrq11)s'E*qce5'DcgPUfm`cugH$0)9`VoTsQZJPR
%q!bH+FE@?HrT4!s[QA4@g.Qh]]?@6XA",ToX22XBHLnr?Q7lTNbn2ts_3rMZ>G(<KqY]K&GPU'aR)[M9f?a@90?WD$[aR.FJDmJ5
%mB4X%2\4sB`U`Hprq:6L=Sef))UPt&YO4$/J%Idlnbhrec4\B*Tq.gBe(a1)[kBE'k8fo`e-hLjhqWcY5$pKXI!ScRp2Du]<GimY
%\StO0NiLkunAJs`k=q8WqXX@NjhjsXAf+,M<0s)j2ibK);3sB0E^sF'W663(\Hf4ZKnlMJbo4lYk]0D@H+a(<o'4umk>-#GILpCt
%'DDL6SU#j4f_Q(`0W9Z>gZrEXeUa(]:Hr4co9.!UAdHZAj1?5]%p,sCh,FV12?3(Ae]X;Gk;SI2O)D_ojr)q@ko:c>FMB]sVfPtu
%dpMhIGjITf\pa;=jmrC.Vr<0PqH#YbK086s+::Imho5!5mG39ir-Z-51:_%H]p`FMjQC\5BU]l,H*P#,F`i0-QX=(ShCNU-m(2jk
%FuI/3j#arfH$Oo=<o`MLltUo(icJM@\pJULZ2F=TI,9mR4FZAU^M=[j;8.@aD+jgH)#Csde#%5ps*=3`r+j;Or+h)!URa?&I92![
%XAQW7*Vb')(gl0,hV=aJZZ,m=rH7.)^)P@"DE(1\k:Q'&8'f!-?7a,IE``2&mCXG9`W9[V$U8JAY/eM3LN^)5k)<`<!G!s?Yh'6+
%:O^S+r-j]8c5#p!%W@H<@(:Q5)kPqmhESb]hTt^@+4RFf*rY1^Z9@#nI=A`W,]UI:%oWd`)b]Xn`,pC3]_c[T1O5)1cMW=g0\>?u
%p>QqNF,]\C3#qgGU3uqo)&oK_[o\XZQHOd&n:L%W+OdD*[J*_W).RpDED6)RN3r#bo;@qYjr?7(E*!GDo^_9pNg'8=FgHi9C,TQ1
%^I9I'f<Mst,N#KMH[GMHq<c`"O#'o3*i^AR2R`?rlle'dpQU9;Y@BRJYCD`er;bhcB-kF^qsg9:D`O?ZrJpJ\G'Uk63"#?[-H=Bc
%=o3[!boDT15dU?#`3p_nqg!")Okp&T*:;iq/tNr53L#Hb^]=d+Rpi$SI=?WdZb6-XH*t;PVb=2-ZE(,$bma42gQ-:OQ!KAf>C=l?
%mH/".lo6S*%TD$[!2'Q?qYW$W>92"+1Li+oEnbtjq=;MTq8MoNH#s#)q29m<Ej!_mF#/3R#GLBQq$=</XSpUCrqY[Wj$2]tV"3GM
%T;]HdEAMEGLVr0/1!JZ1H/'ho"+Ti%-F)J+D:VnWqrsK3gj>--+#>GiLND`n%-CifqL(GBcXt0i4hJA<RMQ<S[6nY;g[.4/*20=Y
%*(qM>\#Z4Hi"!Yto]'<<#i7PNQ03?KaICqR)-cPL$=gbqNPg3#ZJjbJ%4f`VL/6tT$dhnb)TLSGFeor`o^qD0rT-7V/WW*,a#EUr
%]A)X3]FH%<fd<2^!T),Ls)*$>L@_I<c[VL*=IPn%Iss=TUnB)Z25I:rS)sI)jI(qtX,AWKkN"l:O7#uR35<#:T#H?^r4[LH!.``t
%b)EC[(l@h_a)LR1,#RJ2k"s8<a%2GCZHphM=o3[!+*>oG3B2<)=;2h2?GrRC4JZ)D3J0>VX61=XZ=.%!YpfXTn]al>%O;g$(/rlc
%=Hj%6r*2@[=Hkgu3L&:\(lP\4]$;5r:`a4"b,c8apH7je`M1Qobb=O96]X[([2/Xg3Z`#eb/H`*7@>s!6TOi.dS"Y;0f?;gnh%Ak
%0%]Zu_=M8-GTBlFnA$I_B-H,I06Z$$#DHO[g#&ELNgMLrG$nb2\&k"I0fgNWll<7r_%g=+99bhh?[Ea+QB$?0`Y9Egg6&QZq:\.(
%[D1KSb#)Dj=Q8$I(A5c!Na1t4c..ikg4L$hNa1tmec*p#D=e)sfn"X"hkjr('`;:(lp3W3O2pJOO&8(^UD[!L4@[A$1ta\4/E2Tg
%4rX&PZXW]aB6PY]rF'G'I=:q7o'5PAo3\-V+Qmb%p@@&1qK=CU_P)Oi>i%SK5.eJ\??gN(f(EKtIfK3p%#s6!>n-0%iR5Aq0-3Dn
%2N;M`5\]ST9mB(&g!Q`>+;2i?(P%51jrs\(,a@,TU4rQqR>$Xf^WiMOhl#l!mJh[irigW3Bd(+;5i)_8A`#nNLK2glhk93$-9cWS
%U%*aAih&0"5@PK0@CR`Z4sP>'UH2@-d``B2n,3"@pA2bqbGMk"okGG<qORP#Q]0j%7X'r!@"trTVerl<EA?CFSJ_uNN+&2OBekFI
%6d^2!(q,,R9uc,cHOOsJOe6fALV0Ho]_?X0q;(02oBYN:S1FT3m`)`J<"A2RHr&[Y&)ra76q>1"Y3j%."!'2rNrIq2s*$^+^H2E:
%gpatEo`$!2^IS=mdJnRcs))#6U]:'S=2NU\oEZLGB0Mk88KN;oHYV6fF*l$VkBljs*dtb@/`t7gE\<tIHhDE)H@++YaI>2:D!d3f
%D73f<=')jq^NkW:QTm[KD\&@C!!)2@&[&jP1F[H!BD?Ws')L\RSOj8H=S]#0B2,Iu407],Hd;N^rMJ]:rI?MsfcrO]aOI;2[#c:[
%AFE"VST4BFc"-]d-9E"34dsKQB!QWTVgS@$h/[f4Bp00rT=2Ato#KK\s*8m:[ClP3DY`qRgUm'HXa]Z4rG3:34#<t+bH(>PVS-\g
%G%^0SbS\h)^Fl]sh/=f%38oDYjGqJAT3n<9iXA57S]7OS:5[%/b<-$?mHkndr5J6$8LAY2q;k&/HY+.TemI+`+dd6RUpk8N'jH0!
%GJ_W`2>0>g`/`uT]f$tS3S8'6a1a:YUZ(<JGW?[KhT%=2L6n[ojki8%UZ(;g$nlF/+i=[l@F5!o1q`1[#'r,=]T(l]GJ_>:M=]C>
%"4FZ[4<:d4l(Os'4uepd[o1V7#)?K)VS`V-Qidn="In&)1$h!S`1/RK44qLL5d^L)'d#!R`-X&sYp3EMrp01!XZiiHjg`>>m<CYZ
%LQJh1QfCFu@X:\LjENuYs+PJIGN09dl!Y_h]u@Q(d?fmW9=roTIi+]MDkEXd^&@b/Uun@^jj-2_3bILBNC\$Xl0L2576[8>W>$H.
%e^g0FL2H\#A.66>qsi<cmWJEnfurJ?S;+Z;e!Vc_d*DPj36"1W%e*\'pL,NRqmJ6j[93-"6[NbjRe>f=Dr.26Qh)DVoYFhhGW*b`
%cHhhQB8*&LF$%"Js'XRP4,3Oda_4FcS?W+XaRD8*iTCYZNY)66d>kIJRQrpf0b-aP3I!VTGlW#H3Fb&&1%nYs4g["pZst*C)#L`s
%7m"`<Nc?1bN'E?*I"+=1ip*67R@i<+?eh8\I<g0"-f1BMHfKKeo/di<`B0+BfhKEOUD`ha5FfJnrq11)s'@9q0';?u/'m[!Cib]'
%DI-UueMcPSB;JLe&+=702n.]$?f#.+Z\M:,"Rt2jQWLN52L0U]7r!cQnR,ark7$LHZi),qd&`5<F.f3e*<$5hZY<rs!7#Z(k1RI2
%43-KO-"&mJ]=jfRrp[2KNFYN+U\ie+Er57l7WH@=RWE?n=@p+\rk&\Vd/,TrI.upoLK@RE?9Dbni">oub?/q[^,AVY3"T$UgEh+c
%%Ae,^(_8.TCY!Hb!FMkpmY)7b?\)"]AY'uAd+=d>\E>#BF,'1g"2=3\,aKI>42F$7&(_L[,<G"$M<D/2Kd@e#f>EO#3U1X#p[D%H
%qmW2dUGd>Gk)S0N;4H=R2E+"]4DJs70nb=abrrl30_8r^[).BoF#-:/<9K;,gejV(WcK].33%$iFme4eF7E\<F0gUB<9NsJSboVF
%gS[9mS^1`YH`tV`fE\(obo=U=f&n)Xd=N5CcOl7IpF-n7'Bft&%,A\Z8f[@UO15f-Lb#aJ_*&e#okjabG%6KFC*GOc.K>GNY0J\L
%qK,$!gDB#hQhS8oa"5^-bPPYMk#eVY\R"U7RH<'3jrDVcc_2>R^V[uPaA_`cE+4hsc@%i08*OE:>jWh(DOs$ChKIQEnn+PEE.-![
%gDd6W4\&.II:H=tmcWc>dbM%90_icU\B$YFeJEBd^=a70^:cLu-,rZNhUSQ:`:LWhFnb8#@QAX7e&RLVm-bk4m!?8KF"beA+T0$+
%:=9QPU#f;O2:FZM4M*Bbl"@5ao7(%P^RF6pe0fGt*kZfBJB@Ds`2Cp7;+<O7k?\)Yqs4SDJMY$o%o\pdEIO`.lsG3eEI5$^--r^.
%ZH!$-FS7<Ieb*"(!p`^jqZD_!DcJCcIDo@W)cJm,7>E$#*G(shhN;`E*uqXaF:;"&F5-Xth)`S<oP!T?O4qKIgR]9!"!61Hp6m.`
%r3X_P58ci@mkJX2ka@CGn+R[]>U;W%n0XQApY>dQnbhhGrqZ5-<gePl\fDkr&G"B5rR^5!>O=2dbAiR\g@94=%j>NA0?6(_f_<SZ
%/[^c%"hFXLb40@3r4DJ1/]btAKDR.j]H?!M3:$*@HZ>-/iW3N`4KPRB%iJdK=R5A$+Gnq\hK-IfgOTG??(\UgAcQE_":qsL_uJE^
%0;Z=,[.qs-a%II9KTih<Qe('JgFlnId<*0/!n2G/GhlNWD`7-iUn`\PnaZT7ic]U%%NZkTA;3dlpE1>$%fn!:rE5P317YQI:&2$*
%4T,Kn1@\S7k5]lU%kbfg/`b6kB*mKgJ0"C?K1#f*ll^nh>FW=`C3EA*j+ESoa+]tE9mC?LkhlX0LW6R5J%!#elfHq4m2u56_Y<4X
%bZWbSYYMdK%*&M]q#AVs5>Ig,0fSpoX.,#c%[)f6UeUP20?iFLDmR2!\(RpnR=4kSm.!i'6Vt`&*.dSHc>R#QRo;me&,6!+a5nDF
%*r@O6*eYM-]5G*@o[3<9Blu,jmB`joUPAAEpZjQPo)45D^8E$bAJ(_&IJ.l#T)@^4W>7if=p39;05kdCDQP$LbmDi@07UXI)?99d
%#@G3,G4:RMrd+O\m1hUo?JXMrhL,6p=a]r%#A3N)cQ@W*lGF/3^K3,/c[kX%r0P@FI/b_pqTnl=s)#-8(Y1.O=T%pnR)RP*_"Za%
%+5=8"E_>asXYh_O2K!M/,Yu2#i)d@0r8m8iB8HW'n4E5mR4:F"/W3PR'Rl;i0B+Y^-s(_Yg.B7G1<(sA47+E/N.$4`B@BTc,h&3f
%9PV=PQ1f(p)7VR%eN.lN^O!)19/NU3N3r>O_.7u>+/N#ALL9J3&%:DS[f+Ykm)NShCHEE"*N$:FEop5Vg!MKu;OiqHpsOWsR:/#_
%Mgs:.8G%hF^"atPrcpOUZ<a$ZJL%"af4hVEI.I5[OlhTTp>[6&97HMo)`Ss9(I-cI5J:lbn=k;h47f8b0""&gf43HiYR_/&\rG_q
%Pm%ij>;=TAI"+;-12_Qhji-8<\SXO%eL'W<BG3>Bj2^QFrStd+C4!&#iP_kDjRoCL*e3FKD#1QNJ85PZ-HFA*Nn`j=fs&"tqjjm.
%`p#rurAF$/X6F5YXhT0=b]k+=l^SF!L5iUPn\uH[fY5*CY^#"/CX8e5?"3fgl3?jLT6+LYK5GOJFb=OK'..V&_:nnbe!"t&hbQ\/
%5<T=22IgT-"-2c4DjKQf'Uf5U>^Y&(%f^[8(RB8(p"QN?JdlKSbMV_?TDkH/KqA5,8`Y5<Gl!nQh7UD86`81QE^ful8\781hqh[6
%*rX7k./SL@Fnq7*P!;*LlO<o[hVJ.W'\ndGi7NGLn`'HG)QufJj>Ph@9u?bc(956RgjH=#c@\KOkMCM4YR;OI:1sT$-cak6^\dGs
%k?mi84Y#Jh./\NY$pp*:^q]P-aR=R'ZqW^s^!EV2cU3,=j3T]+-fgMm[(gc,g)macm@[AsNlBSXf+,gO[au#0<6uLp`3$,@>?TM,
%hpYSQc0s0t=C3:Y`Q>+e8)CT`<d0GhUsi%"$Ug<FDnGhS=kT3IJ%J4R>*Yb<1bUVK&9OP5Q$mC\N`;1)#$I&QC[dcuqDM5;]:10p
%UIb8$jFYY&DO(^>[_"g`f_Fg%FRY?BbI*hk3TFOTa'_9Zn.0G1]*R-7-!)o#aX<:qVLNuCNg!a_nZ%ob?K=$s7chUmHmACKc`gb\
%YELm%q%%S<I(MMU]6M&9RFoJk0DI`9o5uGn?;c1cg.iL8Js7>,dafDHLjrBE!U2(f7l@^Ia5n4g?dS<pO0"o!7?6\nnSeE`72PX&
%I8nth>"mXa?_2X@IcGcB^P:pUo=_EnpfR<S9T7$<2]q;VYpODA7j06M5F]M+)Q35pRu_C,EKP&CO)g$lcal&0bU\O[6/0'>KV^k2
%d"=pq;@hICrB)h5/3`n#pAUQC`U2L1ejJ/Ao=D;P&5GIeqqlXOh`\Tb]9[O=g59aF5/$o'q;elsf-d\!ha4<@-bUnV*=F[prR:G]
%FDmPj(%+W!OC\6`5Xa@OH9#TdAhP(Z3Q;@9!IBd)6OOq,JB$Gn>6cEW]%hi"I.9Vs3K")V@Aa=>_K'mcN+a:kd[Nc[2T,b2?1bYa
%iZhBB'r%n"Ld(^WRi:KC=e[j74nHSB\4FR'*1hu;Ki6<aOAjp/hK.<&D3uMjXg(La9CB9"Lnq_K8)?`%7O'r-/J/qcVM!BA,kb;Q
%(NKt_2?dmBqImA>=0`BSCm0H="*Op\88ESeSG*C,!Nbj2QjadeT"IM&U(OLT'srf-&Z6(pTiNA+gn)0?(2O>DYON5G5MURLL_q/f
%@ap1%q+:%GbZ]:VI4DnV-KqOr2A]D;Ku<"cgW,UnVqYj4YFWu!)Y)k,$-a8kO=@PS^i")VCtH/1D+g<\rB?>ce4jRiT=3"+?(H!E
%Ya2\N$4\^kdq5FN-ZO`KI+qMkd"cGk8m/lQLL#u`<ESX(+dWc25j,83,10"?6AoC>b&(lfm!BjVh?%Q<Tl5LZVsA(f=fW6=Gf1I9
%>33G,C3%#DY3=KqA@o3aJr.HkfbVPR&c%A!6U4jAPC9;CCj1NaQXI@F@NH'gEb?Nkp2q^"g&mK3!7>9^@I<%?]X/6TDa5j&F!%]1
%[I]l2Fu(k=)Of<(-M1d2,(pV+,'/Jc5VY"iA=49E@U]gqj0qrpBgLH69n[7o8O791R[e#6@:0.;(Os"n>/Pi$lg+s;)>=_j2oL9m
%]W54b3#<e]XjoHV7T77pK<2@H@XnL?"D,Ge%XFl#Gg@qJi\?2`1YFLbm=S#!QQ#>UL>c*2?7lo@+P]^'c#kMCDg9*3]um3h:fb#U
%a^Ol$dY;$%iKWso#D3FA!WNJ*DfV<ugQ--U<DH=o>_a7,3#tUuN>+YEVh=,i*$,cMk[@DJcIULUbbl)fCdZge9M*ILF0JCL[^CBl
%j]5IYFS"LU:_#t5Ih6AuGsJQRjAU\2s-pK+>>;70M_@7."+M7u]0='`BiCK$UC'CNoX:!8:?m!WOWSb4AA[-qZ`?W5k6N[Z2WL&m
%V)W;-4UT$`HoKa/P_t@(UPFDf>@VoY<)5$_/Q>mFOrCes3<=?/FaPt[-L*"Da?"#<EA"@US0'TpL=b3-U=H][A)]SZh5IX?+9\?2
%d@+hJ&nMF!G(hBLhS:Dq@G2\Y(Xrj4[u%+#f??0&9LE#(]!W!<gWAfb0*U-jas+j?2m/60=7qB1$2F_eZ#N"8%6)[d'm;PPfPMTn
%Ft.FG?"hmV@6ho2LMKAng]!^YXF+2\[(K539pN*4g2eZ\["6a=A;hs`0;g!uT)4l_hfl1'3O3LQ>nO[>F>sX^EE`CtPj2.IQC<Z[
%63_/Ig?HLLFiagK`!U>&dtW!a>UqCu1YP+Sg;G!]aCl'%_+&OlU+`1E%![[K8-.iWQ9'W-_^u!&j)BUVmeF4t,Haf%CFC%J3D,rJ
%+Lc0n0(ZSJ=&V`!L6i`7&N6Q*af;O]OOMJOk%qKI"h'?u@^:7n]SBbm107tsD&]Yb>o?+==Qn`doQfn^4,2>^Fp:7rq>p4+nW\jC
%[dA._U-I`!"<837G=D=*UGkb*&Y8AS=Kq!\>&F-L":dJ;Psm3!gq#;rKK;QVF;_M*?X.H:')&Y;Lp$#kf&hqa@n/KUR<2u9K<K94
%KdOLAT&H@FrO#pZV-R0%ku+0GDj\ZM>O_jo1(K=Cis7!L?s>:jGD3FW'_5[Jg=2,qfX\YMbIh[j&(4Tb\W*dN2)Z<4c(Wr&YU@4M
%oc$-mGj]46MVc8OP%G-Y[e"kbVOMqViW<S"?JR_L]R52-@_'"g."kHIFt4o.Q.tmNI0K(GiB'"@9m3o%Hb5S"MnG8W:#TdQ(@l_K
%[C]<hKAh25OgR'VeBQ.RQ#Auu&V6eW[f;QQ]>k"\<aCr.0/tj:-bcP5E`cf12($Mk#"*]&gXk$2IQ')AKY4Uqa&GLj%'?o@/uU?K
%oA,KKhOq"(VR26u:f6r37/+Y:I^kW2jMj-@M(#GK0nHIt6Mf'=D<.b=BSW'(S*8:8C45'$78G8mp8t2C9+,SEjqR#?`*7i]9tmjd
%&MK0(g*<dhie85egEO7pLCGsW,fUaU[g09c+KpN(OmQlML<G9r]<!@7:NZ1dXWkjJdZjbsCY@FgpR?P;,1@RSeNh>)o75RrbY2j$
%YNL6RZp;=_>c$Wg\?F"ROH#,LNG.SAcCh*?DUoLPZd8i\p4KI(:"pdZ&S,hJQkL2?Lpk\$\3YI0ZU+/R7U..jnCfE1$5R>"P2=W&
%kNXqMh14(-`lOUi%1G/&ASbY(7;H+GNP.4Z!uC^N2sCg=c,2r#*+qQ-MODej_`c_lTQZ:JF9-l6E"f[d*'hOH8UnXY^_tmO@/cU6
%lt^2+qAVZrGiiYT'lHSrKY%ag8/(^>_Itiq(U1%&[9AlZcQo<rl9li9_pP>:PGJP%&ZH2W$Xn1^GpgqHA'dUKITE;E2B1]YZFh\?
%6u\#,=#r.j':49&^`#a*0SuUl[PL8V]RQ#InD8>o[ui8*YR-%PLI\=lXu7GHlb;'pIN>/l,_Db462]H".0me-U\6^tJshVo2!?Fo
%NHpL@f1;LATnT3s\[E70GeBJo$2oY>eIFWR:gfg_S*Y'Q"19ukpK;!7^tjE#fH0`<W&>b/dr'tT8]hNf@hUu_J@4dme:KT&%`EV,
%jkY)![;uMP(u+c,D56%rqi0K]4Su_s[(sbq25W&j@BVRlfA#sd7badj)I'e(n?&M52BZYbZK:&_B:E+TK+JBNUQ$'j&WAl%JbIn:
%f+ubd9O2$6_IK6[fVZ^*F`dc`bDOlohBXe32!'hMd"68CJiaYln$;1XPTt7V`$%`hWYNb>DuAn\R9rApTi_mm_n$!I>GXhDIOmh?
%.16[KYdU3A=N3i-mr=kd*BR$2>Q/[Cg"l4HS*Lc*<&$Cc_+fo)ZqHF=<8Q9IaWXF"<A:#,O_SsA.X1urDi3Z&Mm2VeKu;A?2S`5;
%0h\?Ac3=V\Y"[f`eg^IH9ABc5da0(lOopp*c_.>I_hjG0rn6!SB*5!8Sc051RA+W5I*HPM,aR,NkT>d+L=CCXU]:(DnC>FBqtnWr
%=8/bBcFhmpB4&:(0Ec*qfoRuBCgcS!DRME[^9qCUorWf8,a0g7PfX\nMeTcAegUCGlaE0,$WIe%kTB2\E=[)"rKd6U6@\n/l;d`M
%YC?9(ji)Z&Om(k54MH18o(h:'o:,=nQZn@km[c'"5(:s&(\H>.o;eq8+"<nD+8r@e`$Yr-G]EasnI8SG5$<BD?0n\Qko83dp6E&J
%WK$Vk=8tCtOr)i\q!+a$mISHKVpE]X/oK"=(+5$T0&%J7GPjS2Z/EURnE.3H=9!)4J%U$EZe/l=3etIi4l5iMDOIJb&YZ^1/H1C'
%`rDn8)fSAU5L/0]IG,%49([8`ro9HchZSrFs3"c!O5D"5%NcbtDWVB*>qad+>mfClhl"ug:DP,nVb\*!+.0K4()TPOkH<aT*ltdB
%"5TiLZT8)4L>Q3g\FhLTr^(7>mI-HT!Q#Y:o+C?=@*"=P8,<W$!mV;$%%m.c2Fj&3-BV3nQMT\Bgt_mVK>6>fqWP8TgREn6im5Z'
%:VLY?U9qCQJc0Yh%t/K@2I+D4_Y;cM\@btk,CehI/\KR-R6PV=mG%O0MkAl*[5hT@I/`^-@e-M1gRje8J'$Z1X0:sdiBONA1p4g*
%I6nJ8e1A&O3?&UI8-,G)[`+"D/3Y!+dKI&QEQE*'I.Ht+h>P?54hb+V4FP+P]RC:A_K6'$c4G`5pEm?Cr:RrerVtPte$_5VA8V,?
%I'.8a"5^9ljkLX\2?a7$]51u0pB;@0Kr\>`6d[]<5!6UYNK>ol#\@OD@,.ZXRr`1(`LYEtP%)h%8ni7SF4q_e<Ines,a1K!s%LV(
%\`'$AmaCR[_j<I]JnJX_[R"79,>Tu8,MYkPK^/LR@X/T_*Y+oSR$.dM,D:>7Wcpb"bF3h1RS4Uup9sVfW>">qqG2>4'FUZX(14T&
%L$A4Z9OEM<X"\si@62QKgf%R>G_*',(&3+.!13B=/@u86=.so0d%"Bqk,ZjV'q2<qd/O9Xo_5?6\\iN<'rJ1OoMq9m$If"Y[e0<n
%ds8iQia%9&X"\r:VQ[l/It93MIHkpg0HCAS<LEbULZu(DE##7j$e%=M'7ZEXqo^SN*uo+qX'g8hCp/HX<Ns.D[_G#Y#$8Y7T,_[N
%(*Kc'>5Y5akO2?Io7c<TnZQ9X?%qFAd!W5Zr81mTJ"Jcm2bXHXCVs4^qC50GNM-<Op@J$Xe%%j;eOoBs3](3G,[[Z!?`bUR.D[p&
%Z`BAPIrqp.)@'W/KE'BnoCo65\O1F_'q50EU%rFCHo2DJ)@-9k_)Cth^5p!c[9'X,.b7qFg0Yn:rMs"<s6*R3[H);76fPl#QMs'j
%3a\,sOsIUGe,SJ_I5N:a)A6BdM>sYb)d`d'Ir_d,)A?JkLAOWucekWqk75a<LX0=]k,ZjVRA!d^^V5<[.L'8!i%\^1e]IC^kSS]T
%(3-_tEO?SPX+Te<LoQppl[PI%qbN':k6a-IG9]%X+Eu)gbqoD"$%N6:FKYW9-Gg<Ipl6OhQ)1a@QSdl4-BA'Y7XBRD\@*!(?5DMr
%JsU"VNf+?QSGMN.cUJOoGm=;<q/MR+ROjMIs%cgNq"r"mZ")H7^cSIk__3j8XnN?dp2)XeSW9WfAQ)hl;V0sjTMG0t$\A@cXEo=.
%Q$"'lT5:@DI]:(>#b"+]"*GdDdc!sM?AEau]m=IbrU+XWe^[dV)Sb'kTBNDY?gap0GlPP2Er<bgrb$(PC8K$rhtt</q0:]Gl6q"3
%aDZ>CGol*N2IWe!<2j3-/53_EmMGt2ioc`@RC85*YodO($CTrs])2AWJ"%ELO=!hB=BX(;j)4V<Ul>7/%o^I7#B?-oVQM8`iZB21
%50Leg_)iA$LAJhX6BZe+s3rr%OQ<qg..9qU0/UWkl(<0C]8+:aal4[.<#@-TApK7CRKmQb7k2)8BN<J8Pi*cN`p8WSLOI!'q0L?4
%_hjYh0V;I7MdkG&*op)g(#)Rs.1ou"Wjq/9\I)`T^+L9/+_mu6<$.i7RZu"s[+<B)O9'Ei&65Th3`J^IZ4u%7.=H%;;%Wgr;cld$
%fZIIe0hTY2Wb\/8cV"mNfITeWUp,I[FGp`Q[=M45J>L1^qX?.WHB_>eA/Jm?Nl@t>HElVVU/4!HEkFIPIKZ>dJc\Qi(lO74?C6Xl
%b8J9J=Hk<-ZRdTIZ65)@LB"0q9/Wdo$a:L9eW-?RI?m1LFQ8(#Wec7'R8"nVqiMR#>%R>k@R.&S1%mkpW^H>VAPi2/Qt_bF,Airb
%fnog5O6=N?+qJIZ@j)LYR79bflTK3`b!nM#+(P`$X$tLcHii,m"_Fe-P52n\7b4W'0T1!``A,k;Xk#i_K.tor9S6H8<+&erJP-_1
%6?OPS*Ddp@4CK)'Z*M(p<Rqg/?4q$J7ijQ3@_,40Hlf_'CjdW6?]9+^^oZ!YlbY<_C9"7M]O2'k;bQ!q>ZhbLOhBJm<8"!*NT4!I
%?]aQi-",BJa-18s&p.g"CsN6q4B9*&k+(^-"Q9GuVo(2H(<3EYaU=h6>;;Eq#ctYSBJ!3N'F.2DS&!U2,'8DCF%7c5NZV_MZHP4U
%%c4"65THaiG[Zi;VY3.AA#tt,EC-(NT0r4J<kW)?&tk7a7AI/5.b]LZ_$-*27WG(lIB9,WdF'C/9j7CHEX<.*^?6+*N<</p#Uk/\
%D7R+75[>MiLho>qqrLhZ.=K'#`ruWTq5e>+*'^COTbSIHae7<L?$#MNSAhK`%`V[R`nf&uB`!p72i(JTW+qY'T!Ag__pP88P!&7i
%V5[:0qC9VH%*5[<3=.?fVM=6u'j2*K_I[GSN$KskK5F4d8eYN_Z7U-YG2XmiGuTY;Q&]>N&07#*[2[g6lU!q7QGBt8AWWU8Js/]U
%$N/6i8%RGN9:JMWQVf[XgR^$!p7*SX+KYk,>]#CWJ2Yo3%2Dd\P%:-kreX*EBSk*!X=@]G5Q*96*h8C,)JW8=CT1_B1qn-!LjQZ>
%pnkAJH[q3#Fq>1gZU6$OKK"n@&-mFNq2,uQOXW?Tas4l<@UPn%5Y(9p2o>\IY>/QTUe.S]+j<QC+qj*<1Mr^#T1J0AY`qah5a@&N
%+'Kj`PS;_0)u=OqLWY_V9Lo!lqEJOiH'WeL8OZQG3WNS/JB2me$+d^OHE8[%bXi@\mmn[!0kV*BVGms7&r_CMisNsn]BFH@a//Va
%&hII#Q72,H&VPG[\VB#PWNu2![74R.fP;4Vju_9adoAa81/n:>Kdo12lXg@)#aD)Nlbp%HEL8Aen5sWdd`a^0Kl1GU`_i2ii0coE
%Q=qpGIH@pEN$hU6$d'+ZV:0]N@Mct_NC+GZ935?M_R1">MP$?a@ra?G08HLaT=a=I$Oc'X^J)jb<X/F_'<T`IiL(ZD,pU4qo#1C]
%+(s^p$$Gt<2$oFQXZbm4`n/"lJmufnK;n,W4j5VrX&r;f<(?`A7F]S'#cAau"?r<]SOr0pW>[<WTpMZKd;,2![rE8q;UWYfRh'>.
%g(/7p%JnpP)$a8LU^%$i[o@3B%U;mP>RIn>b6BTZZCPK;VL*CnaWu3El\LWJM$ic,q9"+#1r/s8h#W-cqneCLe>)[?B\$^mOlVXb
%FYI(?s+-i9i^O>t.of=@hf@5&A!Rsa>AX1p,S!c'A&U.r:u+%n9;rJ3S1\,MQHK/'n>=?tEKZEH=:>49NEp!8K*qVIdT#`?d&F)&
%1,Al@_ZK`P_dl$V"5I2lot[NsR/ZU'\/8V<Kl_a.gjogKC<d"_g@,Y=1fs@0dS.\_ka,c7Xi&d</\8HFop<7&MaOtgKXmp7e,X*8
%M&p5Zp@W5K/IU_?-qR@n$*0amC',=F?&:&)O+Y2HrJ8@#^7C\lQH%oQC5@H>!W6_G=BQ@$H?%1?Q2SNi5#$np='6aALDaoQC8-EZ
%*RLc.N6_&P22Lp=T_s?T7JF\!f?>hs816f)_nQB8g4EV;0hX<G[>(jEr9Ji=*#4Aql<1[ae*`h:g%lFdR'/+Tl-s@L'8_m#:Hr+a
%j'ZZ,O&Z-$#i"SBB@o?7i_m_U_Wc#!^ib^[`;uc;)#WQ7O^e"QkS-DZjEe:V]`%eH8I2/#F<cZD<4k*@5!A*N%U5JI2!qEi#:4mn
%FSI4dH;q]WkNs(<SSl^4LD,mO3S6QL"Oiq#n@65U3p`H:2+:'k4?i32WAKqeKr!K&hV[3NmN*.CJr'`5crB-^r\OK4W*;BU]R>%1
%q0V<"jPeo$I*htscdVmM_1em50g7Rr8U/lJ.+8p-3T5Jef/M5\s)84Cm>o^od%p!`i="0_@l+ur54t8@m,?m,Y3;s]qh+:Lm`nq"
%/<aD;;>bf/pnJd;4C.\C>Pm6]4C]Aurgt_@r'=cRp[Q-&VYt9I3S&6jVAb)>^HhSkV'\6Ed_T!hfS;ed);e?l%)7>prRK'^pN#AZ
%hS9'lpAJ>0a\VX-gOGhLmX(Nan_eQ!ZTk2,hn/jCmpl0c8c"d0h.'IQhu0,)pTa!aV#3kbD0i:pr@q?drqME$l0S9EB=u%O(TEI&
%DYpE8cdi)n`WtmKDtrn5&(B19W`RI;QPi,gfXO+)4l5TZi)[P+`Y\cg[_G3j%_BR'%LfKmTeQ:<(Zr_4YsL43c&pN2<>YA@h&WlA
%[tNQ'GAFAD'1\Ugmd\4es58!+m07U"'9dNuLKfDVn]o)H@"3.^3#<nY*d8)iN]L#:m6;q@O8D#SpV3Q33/E0fQ>Ih5fWleb1[V@!
%dkbUq@l%%Xi])n_PPVWpB;VM:3&@fkK:dg"BTeYh@#LSnh`E4O[^gdd*8dAj478\^O+6Uni-O1sdS>;Eg$8&#LLm)3q<<0KVgj"H
%n[a'&fKUt]Go;N;*+l;^#0!K1'?d'3@J:=tY/lA3ABD]LNTFPbSp*uE:V?+c%(jRYs&IW9j:k``O(ET^3]oGDSs@DRm8,BA]5tK/
%g=bjgX::1bO3.amp'tM/8j2J+m'qducoKd#g[jK>0QbcdpA8D0:.p5r3U/O1/1Mc=k-9';k3>A+F>tss'\j%1<I3`EhVhjhDZFX[
%HTX"TWCbj"G3TLJ@#eO#:/tJD=kAr;_,b4KFnb*As+Id,nb1Qo_K4M'4Pgnpd>)^R*j9^I:QE#$1\_=Pn>7C5qTlAuX=U<1DG2gE
%6&`tk(dHYX#Mgr*a#o.(-8^iDd5+f29tB.GlqRu*,D;j!8_Q0Ep*W,GSPmRnIamj**q>?*k3DO%rdJR6DkYh1Yjf$Fn=74=]t=<?
%1PG,^_00H5?0Oa'OF)/7)QMXW?>ZsSo_A\d@SsKD'r8i/;1$_e*4nXp/DM6rqs(P@TjshQrOogm#4_D9rs42n/i`b6K%M\4JajEn
%n5tudjU]hTK@V4<JXpro\#$#mo,O%cD=DoHp^#atfI?%e])UF16tLkR25iDIUKN9/eX!"#+`eN_*n[aNKAQl;%IeaeaLe3G*CGH#
%T6-4!Zl<dhDW7s[J3J%`lSsNd<jbI'MGW@o3KsCI,3O6=cU`5bf0@sj7IJRmVtq^pgAH&s[<gIE9FsS)BL?_2LBej,L.Xt0isAG0
%[!T%/fYS1Vkk,j?]Nt6O[HS2_a*T2!oMW@_rTQlir)!V['1M-)F%HsW2-n`@Zu6[ISIG634.8ekj:(Xrj@)*brYq!nB]f?slMfc;
%V)[0hP?"fpg6@amO,f6YFJB`m&f#F[p%a0;5Y+FYpM!s'N%K"iecVoJ#N-qgIHZm790!t3SR"RQoU*]A;,3[Lg#=8Z'u][6M6/uh
%>0#!0*nQbqjsMVnbJ*AP=ad<VRnT#s2k5!9:A<R==4+WPVWJ;"`7:FH8UpJr:.p19iG>Q^duNKg.0mQcr`MNm8&u>aR*LZ&>T_KG
%miOIuf[rYeZ9:/M[1@8U3iX6ge9%'^H<XI!io?TLi4+hT*XF!02e<NrrU5C!s0X(I1"jt4UjlF4eq/)bUFi]@<5)0!^"R!E0Ylrl
%[PJTrIR[%-[ZC-krtl?>FJA0?PEE9^M2!]/1Lp+S>(XWb4%Ed;8!.ai"]QSo4iC4Wa=rRp:<XMUFU"q1l#9?:@mjM)pgJYc?)S@R
%[2gngGT<G=Z"QP/HWHm.j2',GBlFp=LS;gml&Nl0:hRqi$-H<3pgfTjq;C5U*epL4dX%ILR.`=GN-\#d`^ii#]<`1"P":&O3ug/%
%p<SPD3ml>pDf@ZkoO5=pdk0UDTqne(W%OS!84g8d3(P'doTR:'GIKA-RnlPN_J'XA>YiYL+\W/Icf#aXq`aRn9EjN;#742?G@8/4
%*S">\W]S/`efg:([YMre,YOuds.?%jT@g.&8]cuC@sPJl,UM93LAb#eU3e.AIn@+-Tq3!kOVBjhd8Fs!5qO:b+>9Q2*,Uao3%Dnh
%..sVT4/_*jmPu02(kKJUo43e$6RD&h*c@#o(7hCk`1N![PcD*]_aCd*2BphB1PY9!3f9ARdo^N^]^'H0/.Q'N^,,;)ErFh;[Ej%E
%ILk^UAd:#mUSC%f5RE9dNn(>7<E5FYil1W-+!V"u2W\?A]usFhbuD8WVPfVl\ule&Fjd\sJ%GMmh;_hnXq/p6>F;-A=!q%/4$,Fe
%S*1j['J$^=f5>`62QeAaO**(_kZl6KAbd!4C[:."VR)7*mG(@R5(1%_33Xo+'E(;+U4ktdmW^?b[`YO+F2%F*Mo3'if]3'cY(%n?
%79j2(/CrEZZh:^ug6]c&h`>!&oBMKUf^MFul;S\8B)UYi?DC_DfB?>jQgU$l3%l4IX5gZ)VEV&k2!:7nV%]KW?p%^hMs3W>2Hdl[
%[M][ghYFk^r,dG@LH78_"hfgFS+R<dp.pFif:A?q<Q:9R_n?B3S3=]TONjN(j$uV16Sho7D!h_?^nY)VL%]Ji5<'SH#3VTJFKdXm
%;Epm::=J!n[R?<NDn=_J"m^qU_Yml9?a`OII;sBeMd+O\46ic">LDJt[m/]@I5cB5@H[U=e+!(Sl%SrnQ%SN]]8,"0/mk*:]X-8Z
%1eqp8Dk8L+2eM40X?:eM4e?A;^@QaOpiJT'?4*9:\,7YciHZfQhcdWjhTbkO?Q8b%B;^bbk"hQP%m\A:_tLLu1=ak4_X<UhmJ5G6
%]=upiHaMUD2"'^2A@6VFJAAP"Htt)-\2%n!p15ED3'GeS(pm)S&r,<45>#g`0"7REmhUB,^[hrR[!LTX/WoF4ReP7>Y<IAPDCd^&
%ek;k(B"lL8mO`pVT/gU*gi#pC3aJ=^g$+&)eR$GV2IE&aH=,O*$iBPmmq6qShhR-IduQ\.O`.^5gOB%?r9WH*mkbUjqIK-^mahL;
%])AD3]!H^"@64;QAoiCs`h>$'qp*J9Lrk.9]YD.e*P\%Jr#T]=S8I*iDr4oH1%jr5r8O8+bDY3*H]R#I^%)'[p3('ZJ+`7`p"J<2
%B]"0`8WWa-^WlDc52BAo^\.BIo^Vn+Vp4r3m2oG]]CQQ*ILe_<o'l%5q<$Z0SV-f\cQ>>A%mJ>4e+CIJ05M\JYPS"fApctVh0OD<
%(0W?(dnS_RhTefEnNdDElp%,3S=]!um&+V(\dfh9\)nK.B5bFeR`],&USG6n.Cnss>o\7*5PoWednHugj,;oFFEe1noI.7o"4crk
%H'c0)`27jfY]i$o/e%C>:>>BTgj%\%d$_S\I-ppR@hb-bK<L/$,loaWf(IQarGhkbnndi3p>+.QSUPQnl'l8m4p7oo_=,)7NuflI
%"g,hWEs9t'\_2a"^V0EBZtW,@HnQ;q;@K@)G\W-*`>6:^S9p6p\rjkhCC@7=e_I:pal=fFR/FDKgh?Y0^X[]#m)N#%F6D[PZM!A1
%m$$#_UZTSjm9t)'k4\E/7M):#1t+*"DEt(iO%\rV4[(a*UlC^Dldn;CQL-VkT9MtF0PL.1QZc>l!cR8irC8df^=-7PAe;;Ul/.!&
%&A<S)4F_bVrCo-?r7tkZV(D$V-_S;&;th(4q,b$_H.?WXQVF<AMc:h]iVg=9alV*f^Yh87BAfBsYHNd(-!Q#tLE".sc&JX=dqWYZ
%g*BC"CB+8&28hC,VYt3#Rr2/q^<X@6PIHV@/q-T&IpC^uB(*.=a2_+bGAZcA.>_pSdi@b?k2oTLg"brd[q0[7B8tL-DeZ,*!a;YX
%qN$8Ac'McRShDbjSn=SoChm[/ETc84MPPhF<YkCm\Ta?%)7J]l/j.gs1$95P`'?>o03]rR\%3^JeLUood-Jrh)cY#HVV?i4;o=lq
%lW\X`s'bQ:Bp4=Q-\L8bs.l9ccoM&=/\$.;onfg&_sYb9"7YR,GL=L'hk,8lnS'FppG9ap&>%`nhcgt9mMn(8^HHEskg)sUCP(E6
%-V8C>q-\FGmD`mRGq"+5*lQ:ZpQe"4(-,Qe)S??AD^R@061LlKde;OYgSG&7./P#*VJgsqdtUsbGGk7_s6(LupT!ff6K+I`IJs+N
%U\X8oqB:Y<&\UlB3PU^5I_",1Z/N#AjPK9)YBf:]lOmMW05o^\p0CZ$!q9V7>V"ZOSsC^R$2.KI6aGU%DKTNp1psSO#7^Lo*OtnA
%S+e#L-)#Y=>b@HL>jV2lm9o%Y@?QW$ZY*(2QY2ZE]BZAqc0i84SUTVpr2k\OVd9JuouT70RQ^)rMrro74\41r4Fca:I=9QQDdU,e
%'\pCtFjXQ!CsV.F7ptT\SCcScH0e=$/j;2G,7qaKl(e[(58Q"?/ukH,cXa^0]Y^Rf._ChILtI<VC<fR-Vt"lpFg1]3BF0mH@YDbn
%LpW,B"\eU+&ns'KOE8X8i]f1Y*i^JfS2F:n<=#Z8&2eT=Ybo"W==e9]%E';;2Ch7:\?1F<QDCNFb=4kAFl&c@dmJM_.e;6#VG<)H
%dg^T4qs]kbKQYh@7a*EcNRcs^Onp)&)3-%/N2$fP$/<XdX,<jQi[lp`l=Kup<(?M;/Hgmg$@O0;hFP'<6E=Ij?<XB-Z`l:64N=T7
%9\_Q!ZM*9]DGcnWp6sHQ<?>,JaIK@i-@RDOX5gK.`\c_G;cD-r1S!J[0@$<:X.D@M9AN\T,^.()qoB\Z8rSbW'O9do.H6d&,MH+T
%g+9;5<4q6L2^u[9UJ\.R-@frIa<+"$:fYg9kkU07l(i""=X-4tno^,kG@.@W=p:e+C%A^[K5gfo=EK4Ao<A&%\,-R<SBm4crhI$o
%p=\Eq]^P<?R$Cl+S'W_VA3ra:Vlt!_/oM4Ym`dugeumh9HMd\5fsa]5,\%6<;K/O21`[Jkc5ZDK#(#D.AFemG0VNd#OPGCAiS@;;
%e#i9$a7aO0gq3A]bn>8dm]5RSLrfis]l[t7WY`(74oQ$j0ajK,k3KqX2pM$SlG:pIp4Gs9FFSR"^NEN$3F:UNdk`Rap!^pAk0(_t
%2)VZg7U68#D.&fiUGH4X1'1#hDSLJQ9Ktaih0OBpn!c_lN1YK#D*E=@$HLL^g"tN<><-u^4YFa-m:67/o$7b$[:kMj>)]%SW$+Yk
%[6V/WIIj<4XOVZ?ZMpN3p'HK'90X3b?p"k#Ii:ISWgtVj(ckm,L5M8F'CkhAQclMghJFn=InLhFllFm8Kq[ru+.D<=[krNH1VhF5
%gL4#8_Hl(!@]@_I$b!h%`$;g*((MCnG,Odmee2;CO1rF1mcC"Yn+T$t53P5"Rjn!KRu0p?p;$MDbBC=Q0obI,m>4^A8.BLq.RRFp
%IUT"I,^"0ggQ/_P><c5:ZB#Y04$DMC"&dWrYPW,JWjHhsq:k&,]X@;RmD5lP.I_qSkden6lIt(?c5`^c[&$[i[o]]gS,4]I[?k+6
%h45kZMJ>21>sb]Hf[ng2HZf=Q/q<h?n&FqHiT[i0<dp-q-87N(o>.=Uh/5G_GdTF?[J=e2U0%[\rG\h5lG`VSjjr7Ynq"4E_/1j]
%45F*3g<[3flqH,=S-V=HTl(X\J%dg^s3]!OAnbUZ)PG*iZ\?*UpL3!pf!EX`K<$b7(\WHkC\E<^0^r[t%e`'P;dNjaJ$eMc3%5Q;
%?af0-!;1q)nPS>srPrh<5=u5$l28G3+0NKqoD:C?rj')KZL]%!B'qXGIrd2CH;I5$Rlh.kBQu]5!+XaCmjG#*e+kL"Yor1E#<4V:
%Q8Xg%Xnd`jmPN"Z=qL.0J(QhgqlRF!VXjg6bj9]"TBAQicBDrUX50T^>Yj*]*q\aa`]$IJ8iNV`A%H[$(*Q1pZ54e2gT@TV]7-Ur
%PEMRXn"N*$hd+ud\D2s+#593fpi<Q13Q>e6iGB5e?>+8+=&"R`H'CESD)GYg9[D%tphe@L=W>KUjho&H2%`N$qWPtmhg4ekiI'=S
%GIe=!GJAUE-9WeM\'g]q_We\C(jl6iiS`fBm+0g.j@-HFnhg7Mc2IKLl2JAl8%LBiI:uI!bo8mQq3cFkq@@pK[W^hHhCheW*P_7]
%5Ms>#B^E]NV`lA%'KPF(Mko2T9]q2cTYlg$>MZ'@D)K=(DR?/XL]snn)pb]lq<?Z4p'1/:O)HXfHA>j2]o<d[&2-`eSt@q$q<"TO
%mBuo)c7#\pc.p"?#LPEDSt8&hn[?!USk":SVlRe/SX_p9c;0pFY9/.[l$ps(T_3O':cDq7U\gt"#@KLXHSB:3r+:6GiV*S[eDS`8
%"46].[J:o*\%D>7lKbgFD&r"%r$QE\$4PFCj0Xf85Gjbp#PhZgRD79Y%4m;!Ej<tEVAJq:]H.p7hT+^)bf^Og&!(bG>.GiJdL@Hr
%ZWDd+[Ad,gR@TnN+4VVYVd!L,n]p]72q_taZo\3'IWct-JuKjjq3dSQp6F'>Yc69<HFko@rVdHi:[<;tou?ojWe&qb=mXHt5FJ-H
%^=>dr-gt+P?S&p>Ckdp@g#&U3rU!C_ea:t($dlRo=OI-")qU`=nQmeC5(253T6srd('EVaOUX"RB?A&(2k.M3mYrks3cieQKL&N9
%Su'lQ6"K;(#AAIVB(+Th[>@@:]<q7hit3B!l`t(@[r8E&Dr/";%Q1p!H0OX5_elet=`)TPiR6;o]h&bkoDF(4WO]9Rq\h8Ya/as(
%>qB_*[aEYL\bu&?NKlW:Z+S`e!b9:H<EpPLDG=udAslM_2rAC'D)B`>okkh!><%.J/pOcqY[?VP>jCbLiRET"[_Y(Cj6bm?q:S8.
%pmPl)s3SA0E-)oimL5^?6m&SHGr#+S\hdAmMt%m!R;@7O@eNi0_";/O5TMPH+(5-D'Gj<6_Jsf&Ae6&*b;&$if3U#crNJ1r55X:,
%&?0`s?L5%B%e;(B`WO@A#snUQhQDjX3[>6MI?06.RWfi7r8)oXpoW)iTC01sme(M[m;L%ObK^"'lY6mZ0cDkLHm(K@@e%:tf!B"q
%&+g\kGdT`K]]Af6QY2bjYErF@2[LM@`e.f>\bTn^\TJUq<]g2f.\UO*m4PckQe*'V)m*bRf5[M-nYFj;e$T_0oA4F"'S!X#I-odT
%&+eR8QmiQ]K>MQbO,l*6)r@'sX!aS)7f'N?rAB)JH%f>,_o(TXeUqK5rUYpdbH828lcZbt,)A&D]"@Rm_T0_YAMH5t?Zt5$?3E18
%oc&f`q!XFBg$-L^=U_1=]n20dT-;`_=EV%kHd-5EiQ]g3ajq8e.DFPChT=8;V$-;Gkn!Grf%USKh;3n-iSSplK+mQ`c,'.@pZU+A
%PfkQB2j;+@%UdlT5H-RIW3;lE=^V!;Ebjc0#"GqC8eMZhb?r$fk&79iM0d^O`mDj*o2ao5pK:t<O-6KYo"DY6$&jn=>;4NnhcK7t
%+*R8C\&E^,jQRUe=1VH&3*:VhFkt@7X-Q5entVc4o&R-BS8)5qm&SGknA0QpII!i0-^6o;I<XZ.HM/9q5g;MRqI/1.p,>Uf]5Y3B
%5(*$DXgroW-E))AnSr@;TRR%AfYRY'EBdV*pA@rt5:Un<1Q)WHMpHV$2e8JG"-"iR4P3uo)EaEO,MgB,G@-Xshc?p6*8J;'qJ9YU
%A5)Rh`HtF*TBlZ!fSBW1lA?TUD\Ei\jPCCaNj$/NS[8a$^E)3W^O5qNW4NV30#1El-KJ_&Y*'buAe7]V9D]+3rO+WA>2=H]Cd">Z
%>fQN;X8:(>F2)dh7SHImgT/pud80<*W\CSm97tu.KR8)V#H_pEq<Hf`oU4G=4q5e5:P[flVj1E*/]ue_Y[r/kk/GrSe)bLTK*/Kf
%d(GkJ8.B=:]0LZEoQ]1)\%KCMcr[lPD"VZfh+3:HL3(P-qi(hc9`OG./nj>,?97]Nr]7bj]'no2]R(L4+<g#,UH<Z(\c;*NK4_Q4
%1;nSH0[O%k]UqF!qu1p-g!_T=>2@l8f<*KnN8RnCh0/5m,0B!Qair>ZgZ)nd]K+3MSig04*.F;^T"ib1i,A6#jY'',.H_.Ucs+gl
%J'UC<eB5qSCub-8ejf7:CH&u`G9WF]@V,Hm*OcM]Kj'e,3cOfq^<0^Yrb;)HEcZ*sB]f-4l%#ra-HQc_J)/gbm-M.JocJ"JZf+f+
%l!nXSaXh/+,jXCclc[p^Fdh!*j#X?3XJcE%)f=tP](,10KB:Zu;n_%8"iHE`e#h`Lk&]``2sr<b4e/&qL+Nns/d/fZdu>B[)+7!7
%K(RUdL%t'km^$'MR;)&OcrhXH\5BVTd<ol$Y6XH5aeKr%pZTO6RsEu<CjTm]bJH-X)][KV?.E9.)h79cUHSHnmqHS'IJ5V/h4l>J
%+#]1oWIS^<W2B6IJr5i43=+fsb;YUE=&0mTJES]jlt8Nu<11snC@GtYLfQC&]NO!7!&".\CAF/[$+&r!YGYQ"YOt"]#G(Y2:Yu*7
%2,t0lI&ig`392D@>2&Q7O1U1LhVcS*[Ep0OHl%op+i@=ANKqu4dF[NeO*<Bq!k>)bcI2FNorm&l-fIN9:-F$8]K,Y.`iY4Dg/o7Q
%>ra;/[^c3_q$t,+cWHkM_,7Md*;hdAJ6PKL[_DAuggI>"D((csg3NSN2?B:`^Oi`\oAr%a\!EX+R!B@hT\eL@[%?-h&Q@*S_ja<R
%>>mUu>Je#1E<..d^Q$t)`.?\p>9j02c9M4fIG3IY9K-Bl\cWW9#Lf7+T\3VZV:.!SAFndX__5pDd_jTE^\)1497Z=0lhg8a8i?qq
%CHLI1rE6'T)l5/=hd1"=fr\#/CU`oE8b07'RqtcJp_YPfRpL@/rG\ZU1Z*V)%#'+]hqp*^Mu@F`m\&Im^UO0:jkZFj<*as#D=O2.
%;hfqj0H#,A[=ZT(\,>aq4gH"0q3J[Z3qHm`D2=CJ<ql>aeH[m_j,&\A"Y4G#`%?m_Xl[fej8Ql9r2O:dZtl5gmOJ+LVn,U99O"*8
%0Qu.RqH;sZ;S;GcdK3)=`64s7`CD,sj,m[OZ#[K(?e.ngI.*YK-T]<(M;e3s7.K+"`(>0/a6fHlr;1j8E8m\b40"uq3.ZCeX7DP0
%_G0J4SJ-Ba[s42d:GaETS1%kApI+1S`.&1j-][mDlel`V]@4eJWYh1H(N0QF+6n4e`'gIL5d2CkKIT\)#=u5XS`m*`fq!uuNm@A(
%SrqD\3nj%@lVg/G::IuJJQE@dl8qg8VBm&LTES,be:X>E;#b(coPb<o$Z"8E-9;/c1GE_hpQ*VpoV>I/Ep%!.Y.OA8hu39d)V8Wj
%oFL]988Io.O&67,:rWS6%S]P7BU=;d[7ATb.3m@U`CK?+)e[oS;-(T89!CMG5j16]H0+LK9&f#d_nl'@j2"$j"j5<W>un^)(a2Tq
%5D,kL*"LTmLE7:[ecoM^J%/^q*J/@&APjP8M@Vk+%kMF==mR-mUO2jn1VuSRM,`G8&%@)qlHX-@PO\!l6,]u&N")fU[[3]\+\)EW
%E4iZ!ek$0ZcB[G8+,fh;\Dj$@d3#TPIoqg1h&,a<o34ki\NT7#QF7^Ma]X3S5Y(/,#bZ/P6U"ru/I*6H&`\poU@lteeDoJ+p_m@Y
%9`9f"+FRNe4#Gl.a&.g+[Pc?5[R*gNQ]de=nb@e"f"c[%Gs9E[K7S$4\[d,Nf]in"SNj^+mL_OUc&+Ia[B#EIjiXN$FS$CP)QD:"
%cdtR,lnON(nU=\b,f&[TW41[MRh+>pLfP`q)]J,B]Wis3J#<7g$9H4_QY'o=N`je;c,b[?\H-Z>"4kas\ELKNaC[dI*FWH#ht+G^
%olo5M)T`gZ+:QMfhc,TP3kmHUFChTkB-!+5js_oMrI\W?T<F26'IkXD5>A;&kp,@PqT'apnI9X]X-@,Tq.F@51U9*$loIs>B@u&8
%IX85@f]hjc1O1L@AV1sA3Q>/:AgjZ*2X#-"0VO25g?06rKX:;\T7*skIXq0]*0t`ua*Q#/rUhe#W-gqf>b1@/rK/:Q"pgE_o#NF^
%cK]57>R9\$OE(`4=M[f)r^H7!;>lQi,158;j\Of?NG4FQnKq]JgKX^ST1P;m,.K_^5#`2BW.T3#opaJI9_<Jm9h;D<#J<c%rl,qL
%L?74/bIQ+caRB.gAS<-MG:PU=0D"i_TtV?&O[n72]p#b7`@fUUXkCn%K<[%-`cIC;C!$[J<<$e#gPXb)F8O-Cma]k!W6D7;c\69B
%$6kRsW%o+&gA2ULBG]"Zn"_KLhY7haHT1Ie`o;TofM@F;C#ecugItu"=5F-sKLSFEA;%tfmR\YHq(o=N]due+<ErjnkhB>318s3d
%=`^cE<aLVQ<(;]T>cG/`Jb.?fl,hOrdp'54+D<#l*^R61Olol+P2[0oG`=<+VHAWjW[`s<(."G%VcBp<=c7<CF^u-IEDTn^X"W'M
%2nOe;_I[Vp[MU7C-&Os,cAO8_XJOeOl[SJ^ah&5TnW!RG+9srP-;"53GY'M*V0NU!UF2Od0`4Ii:Q,/hA'$N?oo+\j(q]>cWrS9P
%b*r8_abh%=1Jci6k50D$0#'eW?Z_5kb\`2cUoo5ZjccJGKeZ^6LmP<(0Rb'SZ+_-Y\4R;#5k`IIBW8P'd,&FD-Ci&8,=HeZ6:8ad
%fj`OpD-dNYD@iWR:iXXsKRcA(Amu0\.;`At@q($DBuE<'0f_N:1ucji=^hFF-aq\sd#k/Bnk?Qp+9Bh^\1A"c>*E4pR4RX"gga-F
%WsMB$58D[=;(Iqfa=(Ur*M0''5R!ENP`e[S'mQiO;7Qr?l=D[2(KE#+;n7LSEGdA,R_`6ZTPfV@b'cWdV3b2IIl^%`Vs/Um6D1Je
%N#9dr78I[H]71'_Da-+M>*OfQ\u6V;"N@UIDLkh)QeG*_Gt1=0r=JT7#/!n]8;lVc4tfP4T\1fCROjU]!mOHt64,"M+J,!CD]*Y.
%7SdNm.SUg84p46'aP?:57$TNa)\I1A"Dh!jMAp9p/"<fs7?D%=.a7OEbO@=pTJhY4lbpi%?kWUM)<g+gjJiqcFqM+7HOPrR5n6g!
%/unu_XK[gTEU;&0TZmtPd^YFU6ilhR&OGJTZ4ag"3@&"%J^A(TeTdQp(I=Phm(b/10co^31bs]#M_^G6R$.*3B=>@=!8Crk[]R_D
%C1'Z^dk<h:V?[-"j"o>r1aAuN.>\un_=(8V<r0Pfn8Zmt4=g_]`uBl'Mcc'#'?Mo&P)oEf"BFr#D?2as4:)+m3W`JBe,1uDgl+G$
%MC6VK@g'0mV>4\eH(+2KN<#i:>i.4i`iH([Xso63[8I2H4cd4sXaOt`Ci9MVa-,1^A@E=&[lfj?]gZacc;KF!S5.XeH?UUtJ`G7r
%A6k#hkO^n+QR!%smWj6u28WI<X2K&b9"iG(aJe<Ld$4i-luQt3U$GIk1uhc8..K+1+J[`ha9-2[PhPD_U;YLdK8ajNK6^iCV]j[)
%+3*T?D9)Y^8j&(eaQU24:Mb$d`AZm=o/*`.7=O5#@dA(Ye9>F4E1T,'l@YfX:l(nTN\b#Uoc`mudg)T$p@/W=mXn*^aFZBoI*eV;
%gFRu9ME[D]d)^Ltp`S&qAdjg^K*3LW7Mo[#q]L/LI#q/<+!`9)2SpT3g]pb3MpTe\k5?QDUd5PO5"JN0D1k2EcfKdgMrUX1;O_`t
%q3ot(,!U&LZ1YX=k(BB43):Q$og)Fg-q)Jea-j,fq@NJKkCWg-iX)bY:_sPQYRu0iD)7D9RjAV3aT2K.K,0IkD@SjhE0JMn+T\^^
%Bmpq2mRJ?1pTr)^q^cD\9_6FUF$?+BVk+g+'9rf/eF<&Tj,0S0<@_XBdIT>igtH-s;L:3e\sV:8,.f]t\`K4fk'9kjF-\l"icqaE
%!#P=DEU$r;/k#^13M'L]amqogHO4%`.D[nGe#_M>`T5oe(I=3i=BinB7[//CH:J:M)&U3n2ci*e]*R-WCi'>f'o=#cNiW<CZJn?-
%<.Jdc[]Yd+NAU0(^91@cD$PaY6_kWZAf&9=qg$am8Ft8`%+7HN[]RYBC1'ZnXK.G[Acce,0t;%(7NmAJ^faSZbt]'N8BX#4fuadr
%%;\TgZDKrNb:]Cuf<?B;,*H;&-/To1@A803UF'_#TN*_k0;Hb)kQ@l-_JD)!^f%Wu[tHIH,;X22CGK6E>2j4p;U-D[j1C`7dWG/6
%\VSnlS>?_!GadFQ9Et/(U#e:iN)lHCec8o1@@eZY_<%Z60B-tpc%C6\=Z%?D6W!&RQ9du/T<j_g@L6QP9f,C<ia7@)7_.-5#?Lkh
%g?O]m`lCW!$0-JIB@kZ%ll;Sm*CGgA0a8LYLYmrjc'BoJa2fjXH0Xn!kD:e:Ki#OH>+`.BB[uiF/[2VqmX(ZT>b4"S,/.^A3iMN#
%eIq.o(8Y>L).Z_=4Zho)^1X@heFs5@]SnPc./,mqJG:1Z-GDuHj(BXPKQ5nUZYJcPG&C''O.jS:(k[d=_tV+#AkNlopV[j14EYo!
%pV`B\6C@3JXj:-\[-E"4(>'N3pH;@e/l*L:!T15a*5qNk.LC)7JeBH;"<o6S*guXua"oMal?=#Nb,4uGPdqf_5hsX?'<e`MWF20!
%_O/f7))Y8MR?nR5EO8[oB9:O2SPF':\k9ee:24Xk;MS=Y:2Y2$K6^_0jZ/*T<ZFlc!*^CNNZr8Tjf-/DlYq!]:G62o[dReHJ0A!/
%<kHS]>lE>&IpuYue)V5d03nhD#B?Va=2tjcET_![$C+!=7\)Y6EMISWmXL1Ch#**qb`6=#8KgT1QHAlR7\"^P.Du-j(8=Lkr_:OW
%iE`4t*\uW;-M:g""B8rHbhn+rS"TnNni1s6JOLPGR:6#X`XP.jou_4b5t+/![416@biG$CRoaIHem%o>msjo%`1@SSP/<Gc5_OfM
%>R?OsO;-F-.u#"S0Gi?#A'8GKZ_.m670c[J=,F1/9J'kF9>F*To/@hO-Z*;7B#ogjZFL+>bhEp.9]oN,Q#WK\J:</=@h8JrK-)f;
%e<;Iho>q%A[M]@q!\.ojg_+3T=#L,;EcE!@87o)g_`21k;M_pc/)g-[Hco,'9MuWrPEa&64E.$lo66@$`L^C*/9S&BK@&lC+sVbp
%-k4_J/b:!a9el,P?,WBWZ2&\ScPfXb0p'L*0IA"JMp4#4<!7&UOHcXSH(e(k/.i4\TQ<j+!bbLTCrAW6nsN/Q<+KL(aRH<m+0\A%
%(p-2\.S:@\?5^,\a-Zp")S<C+l&;?*9iuiNUUb`s1TN[]Cc+ITX"6_;"&f[Ue^YpA]=Of"<?912JgRg&3MKMO%AF_t=sYq])OPQp
%O7;F\OZ5!<7A_nYrm^Di5[XAIK(EWPMF$io2Qg!L+4CU)i/8?AXoud)*ju9$h.=A["62k<`7fKQFqM+7HOP[CR\YKZWrUla#c%CC
%Tre@=ls(;7jC+k17;7]R!`Ol/F%AaHjJMD9E#3lbB+]KOB>?D/".8a,8YQ/.[tKmfB:=EXLo6[u/,<-Z"LLdrq.5fTP!6+m,g9:.
%$nV(ko?/OZ-[fCp8Vi?q#\I(,F3>u^W-t^3<GLDc:pgka.Zb3ti47?Pep+/tm4'hj$UomZ$%n1W`KCI,Z'<rlL8.4pN'Tq4C<6RQ
%>0:Z'6U@G9P$^\HEm:mI;m':$B$.M0dA&!!_/h'W/0Zk2RUo$e>_3SG&dB68as@RSEX=U#/jkU:)2!lGjcTjL\V/WcQ[hJ`,eo9n
%jdL<hVHgI=b*6[=U.7j!K'-"6?*Ie\/Q]TPDCoOe8Ft"Q;_<D_<,7nYAgpi^OQVs-U0.9-.b55:]irW0OQMj+W`Hb.7b)8*n>KLr
%C,JNf6uY8rSh\O"s+k/7Z@R^ENknc@N2-ZT,X(=Y[/_PhWmH;iI6/]3YU+;N)H1&A7[X[mMJ!V\0]Cq/H)OH!*BR6"'Xe323Fn@O
%PVW?-RomqIIp_I?+/&Z!>`a9H4:im0C:NEE_)Q),_^bp6&'C:KW]Y9/m]t@$NX^dHF=)Sf:`Q9PN]PrQ"*q+G[h<[4M?A#k;ZgA\
%(0k"[5KOhhL^`9JNpc`%>*S2kS>Qk#>(\f<j$K[cjggr*;hr!Y+O0Gd%&-@>T#Y"!n;9Yjo0'\@afu+ccGsU5i/>U1/"?=Sfu+b*
%6<k4t]9=4m&/PO1:E<cL#]YEG$Xjeo/eYZVFgu3!dUE6D5qPE.0]4L)Gf:lFK`en@bHV=enUT$:^__tC=#TT0Z\d(,6=*qA4/s9Q
%OB.`.9-%?D#C3/&a^F6RXZ!^@Fgtojii3Y*6&e06H/]fd\8)KC$5D;d`jI4t68=oIpk&%par:7Nef[D9EAeu#4BU-:]ro*$:'5QZ
%C)iVi6IjEA34%-5I2Rg<o%d&u2R8$mCa&/]NiDO2V&Z@)M%;(F8ZSZ4cZ:,)RX48ge!qMX)QGSPq/ND=Z\RJ$bTcg4N`.gS(tg\:
%r6R3SKT/#h[42Ku^c>9BPt(>dkc[*H2,;\)V#3d6nZ$N5$IGUiWL<t?,?6$=6=EPg!P6K"<JBHm5mPaSK`%',!n%`]`FDp0F&h6c
%3/9:"nA*9kF^uAOcj%?1S5i<9/+rFkbWKFA;I;D3PCUTJD0?M5A-lmdJpUQpga"#='i*MbE`P>(GY9B`'7EnX."h=eW\k$_et9/r
%WYT#/\I<'O,R$ir<j&B5KZ.G%79).,)H`(O*j[=GS\\Q]Gg*1dqXKVL]p)g-W`q%q<<!ro"WIR:?sMliBT1p^eiXt&dW,bZ#C5Cr
%;r`kE)!5uq+A:3L091\EO1+j/e)=FW@t,ccCLqK^`I!'<h*rAQC9sSi7N(5un[J_U'^uLGk,BPufaaL%L6JRgeZYr\5jTf,Nc)?Y
%;G`K\<J6G=INqY[fTIV,kWk)^%[>'@;Gu1Q<J6Hh5pPu?41HGh=bo,Z`KFH$Up@P2#U,6Bg'C60*O-,YZfDlNWGJ^e6HBgFK1nh*
%-OCVP*\(^B/Q,L">ZHH=B5)u6)h+Sc5aa3%ne>5s5:u'>&!\blirU;Q-JDa_o93\](NH:G6*#J<A.X6QTgVc:69$@SnoR4l8*.hS
%T+599\?_I%6NTBhVG!2lJ.b'[.D[nGo@.Y*2;(E[A?QA)8K&ON;'Y]28dPj3c-an4KL&'Z6][QdD.IAAb1!"./hnKj/qPE3QNc2F
%*[Ydd9%8uh>Egh"-t.&tL,f$Pj_9g7KDrRf8Tk\&fhkeM$st`b&9o[n.oAf?@SsubUR'l?aRIZ=!:_Z3;Z$MJKI0,??CMSh[=M1V
%JtEab)2!k\L0AN"D&pV*5P8=J/5]`20X<*8OAX3:%49:;!Ap2pYWs4[WC7,GN*6E<0_-/KT"$X/;(aQn/4paie1tu!NUZG%bcP<1
%3W_[,&dB5]%$!UN%'ZJD&p4=((*sAEC)MK2?e@?,pl-tb;PuE!b%hZ'cr]Nf-t/37_D$^O,VdM<r6R#aJau\aO[TS/N*6F'VFf?p
%nWtK)5TPET71"U*=p?Sj`^U:"R0tQC/eDj9TS,U#/V>9%C8?=@f!%O_JY>L=K8`t<mMBREUV_lu9@OQ@=HkM\W+GbcIUT:Fqtf)5
%?CMSh[E113:#-@0UP*%a^W>G)QM\C#M?;n9JB=3F$%n1?#&Z;Df#ZmU;XFO."Juq\$o2Q8Pgr0]4Mbf<!\\53&1k=VK=3f*>Egh_
%W+?fekOg9L6S[HldKtBUV[i7gna1:sS1TJ_j5KdcU2>e90m/mk_J&A[HF50sett!fi^=DfO\sCieuthon1Jq4,meQ2S79<CV@KrK
%Y\_H)a=,bSW1P#n0ZYYN\G/1Id(qgf$So2Y"j2`@6jBIr127\Qlp2IRgeHRI.8_]/[kngJAWTd4TN6,1RDg!t`\6KqGm3KS9+4Du
%7*t'\HV*tpm0]ptZn1SW<SLtBYp77eLGPNnY/!K-N0@F,j+Xpb_XWH?ZF,Pe[a;>)0d4JI3:7A`[QK\E#aan=bHMc#nV#hp'h[gn
%nf&A%r*M=u."c;c9AQ$8bhRqcK<d,Ic\"]KKdlI4,`q0gak($'9``Q"I6A@O%;sNN7jEXa"rXfW/Ck!_8Qh;RNkc9M"Qfobe07L%
%HF24AC7k<>"\Y*'$Y"`$!YMg8c]3-gF&NIEc,K4/i,YTNr0#7PVIr4ddrF>,_.<e+r7'g32/q6W+ZUSW>Z?HrIU8AUn-5'nO-n9(
%$tW33fPu(eEbCG@^>l-&MmWsK8f02*h/Q%)79SpJr$BL4IU!./:r4?MKRjYN@"oKUqZKDsJT?<dY!mn>"rXfW>[S=*I&o:D=JB&.
%jr9O?aJ`Z0O2o]bB71\40ntncANY)pj)I/+de[4YD*<p""IF6Rnr(AA-C>@mOrX3&0'bmc5Ju_=Vf2<.I20XVINtMu<P<&LV5+tt
%gDmVm9c7Kk10f2>j$dOXM;q&FlQmKJTG$A*N'i4q"rXfW(\m@m;E#E_pYaC<j]98UZ*3[2]=fnBIp`1U6U_sI6:A6njGn$7cV)r+
%8;Rj,@S*W]cHgQK29[:RX'qGt[i/GoD?M,N7IV+0271=>feR+4RE6U\,ISKtOoS1GXbNu8P#"Psj]9:CYAQ3;Zhc#L!+";Z_^qd)
%23an-Kdj>8d,f+%9N,A<>+,^Ydg/Kf`21>RZmqt+B:9,'dF(G8NCH0"Rg;+'Wgm6n*Xd>AnlXOq7R5t]Z*=,,b#uk"p7:<-Yj76u
%PZHFV<ok<:j<gl?I9,-<.&rMoeA0V:GEQ\Q(:P3>l=D4uE(-q.Aq\.*L8([c8I[5l't5*=8nTgo+Ds%N<I^#Jh1):,2Eb3J@E?C3
%ne6fLn'[fNo^:UQld3rg@)jp&&4GV$+Hf;!S_[!VNhLiJOhi;-c_KKQNH1^H_o#BcOJ6TPArR4F!JM-j)9qDD20fc00^0'QJL/GB
%iqAI)YAdAD)79lF+T.Ymn+bm3)MQ-jUET&cM[8$[;(pJgh)U+HQ4-Lt6epsi\hu%c[YoIGQb%==6VE/?`MKk"C.(@Z3[tS;(`6e_
%UJc[VjUh\7jXRYKW(JX!<@L4jnd'l,Eg:+X!BiClNI60,4]a("NUdp=N)Gq(Oq<nA\e(,^e0pA4aQNnpAc["%ET!c0G@dRIi2Dm5
%7!XGO7_).Y"0,6l9iXe^U--:8UKjWE^.8MMNFIs@lOWB=7N#r_7gVSFlB;p7k`\u!k`_]0F,WCSlh-\C5$lp)3Vps.ifAKnf-`kd
%jsYk@14>;j<1fJFlB@lAF-Js[R6I=RCuf?IK./Y'T\g+sI8[<!*7$:57%pt-7%pD'7%k#@<Q>tfZppbL*'5PBZZpqbeC/HnlBh+l
%iOShX:@<1k&>D=J>?u<A3h5aT_PR5Jc[M1+?l(IRn++ueQD[W%CDXX<<j+,^>(OjqLKbhi_f0Gu@da`8fKXGI.9u577=NZ)@Sb7%
%E'k1`CX,k6<t.I^[/h*@D&4Q,(]/*4?`lCF"L/J]EM@EW*uFb!1'FjXa!965?Cg+MiF:+cnrr2IqfaB?)hQ__F.PG*C'[^EO#!Nf
%hSk>cV&iuQQ`JB45j\;PS7l-nrC-]AX?[g5!0]AXi&K8q4<>(0ah!!^.UYTQ'o4(:c;TL"X?[gMTFbOji4rCJni/pGQg;o?5TDGe
%\5g"#Ae=e(c/?q$0B9]*1!9o<gqX_RFH*#Fg&rn^?C5!ch_pC@OV%@1mPaa2nUoUmMOg@go^#\>d/!U`Y"+01TT*ZuN]embL=\hH
%k_1>8VBG<^/jPV)_FWhSLqNR*-Gu1`C6^kP)LbPJ$pT.ks)+0QkOrh`8H`nUSf[[,/JUZ=*X$5cSu!_U@5YSAN!VP+3ca$KOll`u
%<L?&]Y]lk=Z=$FbC9ia?/(_j*kSIU\W`lt)g<=hPB!#.?BQr!']jaQQ5HfB+jorKi6>4.keErdaX-Q4O?47X%&#q5.[ZRlr7LPe(
%PpOU9:EQ-+aKU0KEnEJe7UP2Hg8e$%W?oPo12Jf'dh"HimNL+b?rFYP01f`VbhSL$$c@]O..Os'8[9IIKdLQ1=pYg4BWIYWX;H=0
%`4b\?Q2rFOP*R3S8g'C!i@Gco@bq:o"J_c<nQZ9t,aWMXA!HFV,Y_1(L]po--:*K!M4)Yc"KbRhnV`j40G>RDf*pI=%9&W%OL.\i
%/m$K.)5^HB9i+S<Bq3%FWhB%M/!D[V]W):&<s`0Ta5/__iBEZM$]>=M#,KX%(LBj-(sRG2031bRNaG`)=dnsAQ67b3Ic+I_2S06X
%lp!XlnaX1QC^!%;A8t_1@ph3g0!-\@2?O'NN+/4)Af!b&IDcnaTMcQ5Ys&P@=\=dB--$\M'1],,P3b>dj,'j`o.?))J4s!oK5:GI
%0?Ghu2LA5DP57]U+/UqnQog:4Jm;C^",f8n44uC(N*:h\K9c%UlNAHPLA@"*1uTG#O^hdgK%*suFqH"Q.iW(gaY4HlA5h-UYUEl<
%<j;A$dj9ZuEb>[f"1H"`NsUV\RZ$=6fgX6s"83<JXb)=jX-nK.J@5K7<bsZ+Zro&p"jsVAS4KA&[O!F);_fG`44\U5PADFVZh>4G
%I5K59XGd4b1(s2H0ZbYn2CjtW9G;bEYDa$ir@AeYT/hl\K=+Ho=\#FKn3o!*'X-p8jELO1=,PI]T9aDuMp*A9EiU!X73Eh,Z7s^l
%VJ.X'=A9d"5VB(J+$o/I/@H3p#,JV:,Trgdg1>[4M-JGJdDlV53RhF1#Tt0MGQYA\Lo68&Bk2D:`?I^V?JJaX/j'Fa%@sd>@%2^$
%>n3Wk'h!Rget,<YY<9S=neE".OZ1_<M]#q<Z8n0Ur2]TL-MBT.PoO^j#RT-q?jJPgIJ#57/qQ!nj0"_W*\dO`n`>q+j^=<m;03mE
%j%]m6AggCqEkc9!_]Y_-Tt8Hi>#+n_$;kQ6)'4tR3gOACAs"FTN*_OD&isg1Ula0g#Y7XQjHi_]ZhAr->>&dlNsHsg8n^YX)fLnU
%Lc*Deog49fo#/kbrDAfH.UeFd=pmOG828(9-?O&=beN+FQd%(@T[YGCK8eC9.S`kfnMl/f$G^U)N:GEVN(4jDre^dbF$+=m9H?XI
%4Wh$D3f[`Jl?&=X7PD^q.@kTM>"n6S'X_gK).\sl,C*[fOYC!XU>i97;.:,KmYGYrap4:qk)^6GkDh>qe2eX^OO<n7jh_]/*2eb0
%+*-hc[n]5^5FA`79i0gMKL&)nSb!YIjARZN6lCsJ6Vm)W%EdSqi\s&;(MW+%,0eG^kG+D@9IW!CXQ1K_T,9uUhq;RghSZ9&WhO3[
%7.+uVDN&L]+O&f3(oI_Oh4G_KC9A*][*;I[%@],okV)_\LDFHC1Bj3F!efWt;:]j%9+iNPm)U`?N.0\0bEY'C?Kb9Nr<YjaaUAo6
%E3@2'"<s4=ejhu6<m7%I6"N?&R7r&9b:`0d+LH7hJHte8$pP@21<4/9CAic?a=-YK+=k4nhu`H7&@H#,$+)+S-4DZP"@ahhdZJ*G
%@$HtLL!\lp,nYY]aJ^>fr0DsA9ZlfiQp?7$C<I`pkP7;4<\_1pUh#M7DcC79Mu7G`-:V#pif_/=c@h!G(\t1P=nRSDb3(`!+rc'R
%:PDGR!4Z\J*9TX6@hAI<nF=41]%Ad/'c`KKMpc"-Ee%!gU$n@d"c+qs]]%kp>j,b5%UCdP9QA^;?*'XLiQ/L\(-jqdherW0`_dR-
%28W&Ed"@;k@B?hLS"Tk#;:OLa'*]=#$pPVRq:I"3_6o&&:*Me1-.6_C_Gm)VCnN\;@Z[TkBPCcj[Fop)6&62?N/9#,.a$>1k*8f5
%h%>o\Ds9&T"[keU`f=b>)7A-p<.M;SAP]gu3S&QH6?&pB`sj-qD0$C*j@-WqKL&'Z_q?bG<[cm+PnMHDO#,;EPbdJ+[)s[-XF:Fg
%<QQ-DE(X"?CDBPh=BuLm,sb1)\&_7]MFn+Y<'/.&ME+HQ:3hLE#'CjpcQC.$m"!$G0K)G]P3>o?4Jp*_Us%,A?8>+iIT9&Lo5^9s
%._e6)n&$:#O1iX)nes>4P8fBH&";fA"@HBY<0F@;bq#PI3u8Y-?mtmJ\WXFTLo:UUbuc(b8b:*'c-?Dp'S4g"4XJ$u99]Z<g_U)X
%S^:Ah>)%)%1oj@:bZ5qkZb#2mlYs`"L)$Fc,/>[`J6%`$TamtGY#qE0.tK++J6&S<TamtGDDWRVB2OS#N8msRS>Qjp4T@@f/C&bt
%E(=Rfb+i)H_d7"7-Z7$S@JEjM/Fc$&)&o97:n'bbQb$\3>-uN!UJ.1FM$#Y&.j6*oe=#Ha;4F,78g:L)Qj)^eU9t=I\ZZN=VKlb&
%B'01(cRM^GGD'"k4J9No'F$cskc-p#_moge;5eVNU([`sl>mj.E(f0p(SY.bJ`ql><gB2K%]:ST=JBJ,0rlf+>.&C*3h2AC0o[TP
%`@dlANa!6>SiWD4N#0sCYJZ67U#WjkFJ9_-eP)Os)?qAA!EG*/@U/CJ@%2^4kikI:Bmpr-"I2D]=ZA%Z#iZ_<7<+VSSC/C_-4\0%
%hFe-`\//1!(uVlsW?4*:=b(>ooO@cU'$i5+,sdSVa;Sb.]&F'YMbBa<M@h)T0;Fg5`MHEVeBJm-NAuu`\Bp:B[*;J7Cm/<Z)kDO`
%L<B4NMm'lW#+s@eT*&M%Vm>`#ZW$pK+\7!gL+d'70MSfD@=/V%CTET$h[j#!bu*"R1iii)q/cqa1H[<OpDlO'kfCjbC$`km[tn4>
%*lfG8VK(UQ.o7iO$lXC.=.!RK1,o>6'/(bVCAaTr0O"2C:.NGLUF?XR;&nVo]grdp$Xl2$-e'I-#gB!#e&P&o"rS]q,PqFuKdWBT
%,X-Zo^l"1SE?u$11UOABS%/UM(O?K3Lf=9>(iRM/jXh??%BnDL8f;0h1/tme`\^g0KT=7hjY@J[YNAIup);F9E;RS[LqU_aQP+ED
%JrqDa8f2*g1,o>T+1mlO!XmKiLdk^DKL&'Z"*]RN00^O)bQZ),5s,VLMBC(qJj0!toU#@T.Ch<^;K<.C6aQT"['o=2\3uW?MY0Kf
%C^%o71+UY[k";X>%7.rTo"]XA6HDfaMo<;jqG&V7+G'Xm3/'Oeo_hgN\A[0K78\G,m$bTrgAHu@]Fb9mSkb+Me.DrZSHZ`#/YeV_
%q*O-G\G=2P0*Z97'^R*mgYXH4N*:sCkRaij`qW^,X\2JhZc4Ym,DpuZ:IKZgJ.]#\7"b%g`KpqNQ!onC7P08Y((nb(Z7L$j[R%IJ
%!/s(h?i*\))79l9rW"Tlb[&+8;+Da.-ceZA>"1(G(C1,Q+:]Vd@#6oG_;+uCEiDKl0Q>Wo&R8<"-Oe-$_AFuN;l<Qm6S63ZF:DE$
%lPd/*(8^_:).^+gpg^g'N*GN$k\X/QV@iIcDU0GX,_*cfTZbOW`"f4:/h[E-:Ql-pN#Db8UbP8Er$'c*=.kSd<8[*00[$D+hu[=(
%(M&Xa,W-td#Qqp6916oFUR$IX72!F=20/joM)k^S<.`>^2q4OeiE(=//\\WB>'u5@>I+GV3*tRiq9c%qT]sL?-`^Tj]c+/41DK</
%]sUGRMQMVA\Z),4Q7;W:AP-qCC;cuSZWS!W=i>k=:jMnLEEr%.:n'cGnY'j\;,EYm/JRC&lLI01&G:qt5nL!>TJA1B-pV@`ZTc4;
%gllWs.ZG6';J2%uJ[O1NT<ME!Ws*=BSipdt[+91f6&gJ(/ep4k7"6$o`mCd^pj!RA309pb1iX:$%U'KYq=9:/a_AL%V]L*Ph2)C&
%_rLaTm_n2'6?@MNo\fCMfYPLM-`4uAn4VJ6Y1KB;Yi9]dGXU?0mM-8fhj:WegtA>?fj3[$h&%1n4-[_!04bYSUHYVI-IiU]hri`[
%%eC9@#C.k;+HNAtj#"N0rdt+/Z*9X#BHaru30q!G=*UO6/I@&klu!ee"k&>en?:V)SkGQma)6Q8fUZ;Z/C"+0)ohEBn]HT+;3"Tu
%Rp3`^DnC6FD'b4<IDh8TM)^fE&6ClM*`UiR*(en>,AGJC,]+C$Eb\`C..%]Y6><&G7>[LhdN2hJ[hL7X%LrPSD_OU/[BqShi#Osa
%-sh[eM?QeA[tosbAL'.;YY/0T*\OI\_0dc?\2RYlG.B83<&in.eo4dVS>Qi5KZdT;AbC,7$^%oQb=42beo8;ah"0&Ed>p(GOVR_e
%/5i0A9au&0iN""l8)A!!$H'##Nlld*JNim[rS9+*p=1P1pnu@]@3j`a^B<Sg-Q\om,]U[/RGn,LhrbV(BT#?cMkF;4T,j/[k4/-=
%NFe<>Ihtftina:4ds`K3F8jsnOZ%qG*GID^aFLWg2SY2O9)>lr)2+#i#'_5n]%N*YNhBFp3j8FiX7)['TgFWR9j/=e)A]/$V_V<R
%V\PJp#JQ8dLcUUGbgR&dQE&5_4S&.]+>kqX+5\,MGX_[M9ftik$e.k2[#7A@Q48J*3\C5-T8E?iM1e0r(=f_qR!.PT(=.@W[RihO
%!AsBg[*%n0hNR"0Qt[b@B6Jq>5ubL7QH1YX9;'Jh$YNQK%/!=;X3i]D-t*taZg1P0ie^l$F0fUTr]XiS8(3STn+f]6L/2e5:?C-(
%,&!k9B+2aaM0_?s(Vh#i1d_^WAp+!#IcKW0ZXZ5AYXct2,#l*bM>)IS+eF$kco+BmM\643AZM,G*ofFOT*rT<S>.J=H#ecTC;M*g
%9].4FclIf92%hQ#StE.1Y[k^"W%B-'OO;e4>oY@eic.X?'nG<n`Pk0"r9g@D9)O(,h3L8]VmjYd#?mV9:rrQ?%YaE9V-'A!8/t&"
%8PZlCH*M'=mLP7C;m<da05+mBV+_IPF1**dWkM9j!0;p/Uj,j^W"0?dY88r1Cbmb"+NZ6f2LCMEpu3VOhS<_UaCXH;,d\1TZ?'0q
%1O?c6Y7bBOP/)Sn]*R-WQSQ?umWA+o3OgLn/FNBF?*I&>,W;=?/qPAG:X4ql)bLGhl[;E;Gq39lJbH.tj:!`;jo#j"AbbD<.6MgJ
%guh*Q+/.Me7FBb^KL&)\5-N/V7Gt**W&aFnXohS7''4h-lqRW)+JV-VF[.$:NR3aB<[ps:?t`BZ+JY7=&XYoJRT4*)TT6h+TTh`3
%/HZdp,M4EEfKk?T!crulC(Va#4Zt-DXpp.,GYP_MkV0mPoQ\c@6/*@g/4paie2#BRP4/4cYZs&3PUKW,4hMOn;L;6H7cs%($3Uh0
%7[=bu:h;%Y;,&eP.kX!(po][_&sTWkb\'BHp5-db7g2"82T<j.nF_8Ll&Ya_k`*L8-X`Eq0hc>>4khm,#a4PQq@IinjBNHqXO<W:
%2&IVsR75Jb"L0rU*C19,-Ds`WUo\-F$$-5\6#j"@':":]Z_tZr1*EF$q.5eK4(HDY.eD5gW(m[5d?LF2AgD+D,q9[<6+$jWoTFMH
%Ag15O18'f!.EqSk<=@#=W2O[N-'_Dr$P:i@ZCa9irQ.hsc%s0Y@B-4i3m70Yrtl(eQjD\E$NmgTLk?Uo3!.>XUR%QSR8r!P.Ge+"
%=/2je&o9X;=DWQIq.6oYkj\mD"1NDmBc:bKR$[*#)UC"17K/nH8oS)SiE&TJQ4tu/K-^*rfOeLs?&%4+Ci`7:c$X\Ri7^YUQLp.q
%Fpf4$Ygk@=WP^/ZcPFK`MF+[GAJ4YrE+h-qaYk9I'7Z<!JVc(lFO3qS/k6q"=:2T=WrN0`>qjo7!TfD?8o\GGiNXMa@!Ij2gc!ZQ
%%>jKTXA13:r15U`kbr0&P7`-aJqtI.C-8+Ca=*#QjFOQ;b&#SJ60%hn^Pn>3!1d:)q@V>n+2G,2cP!B@MNS61(hE9:,(lhB^d\3C
%SAbKU#"8G&YsG`#-Bre`C_&-o*UZB%aY((3in1PR\1Dd4'-BU]_9nHW,ogRF5dV5fruuG,_.eYe4)lI%)nmDI:7NFTM$Sc#7RtE(
%RuG>n.u;1OL73q6(hAlN$1bmO$,UN="9V@d@/4Au`/-Hf6lDRWbi/baACX_")C5e]U&i@fUH]J<7*XaO>LG[T=Y(-W0Ck0[&Y^:"
%Tfbf#[c$`+iGOU9CkBj'0g`5TQ_b19@YAD:HEQ:3#Xql9&?S@]^.<Xm@WO4,M%A7K8a)0Z#YH9A@?Al6n\HQIn\GR,nU[A\&hjM-
%V=B+!Yjm8ug\AQL'+%ci)("ero,DB\\`3tjmD0dgM%Be9d=<plkYK/';>W=%QLrLC((3ML&G\i7#gjET:`^iLHZ48qE&U6WG/7b:
%(a7Ufb>O*W0g`5ZPTa09a&tM9/Oe_b,>MLl[fP%RoP%^J'8Qb&=$Z^:^(*]ihnS)B!QA8j.1c`-s1ePM2^YH^hj<o9!2D`VMPeX^
%]"cSc[6X#F4.,6`!b$@](&_=OJp*V1bqGj,ibJR!P0n-bG/]qE+unk7!C7]uJc!8K73p,]"96Ls#3&VLZ$3o!(q1B!D@*q^0*[S)
%pgQLQ,8J;^QE\R1@R/XM%dJSI,':7r;j;_Q+Fc7Fo@ZAK86a6s!4RsnW@Q>iKK>4gP7,$,@#A%WW?!]m@-UB(aXKiPShS6a,>d)X
%SpJiIEJdY/C#c_=44`mk<\\p.Uh#MWmf_pi*uOMKJZNb--&$E1#n`FTnlt(Yl4KAt,*:@$H0T?7\GR(mC^;$D6KG<UA90`n<s1b$
%jh2YC*:WKWrf)7Wb"Emh^cc!&1,d.&;G`)dpnaD8RB8EsQU':*@3[0#P"c'r<[]OfC[BV./gQ9o/:Ya);j8sL"rZM(F/M>r)E36j
%GD\je_HI$q$"jAQYuSX=gibQ:Q,YT2^m%)%Yh[*GMf$[X-:;T^Oe2o'>8n]i]fFC5CS?VBiiBJBqd,T'3lB2NVJDT'`!Pt.hCQ(K
%;?Fj>_P!"q7DDOeaf*I3i@S)`%Sqn2:hL/;!iBoKDQ;;YO3i80C,>VZK;9))#o-A=<_S0ncU4$q7Vu`OUWu5%MU.:q5>u>-0cmP6
%`">;i$jE[AEd_s[@?=@'i:un>9Hcu]Jf$8^R;JN.0[8YRk0tfB:I[ofq,j#V[WO:/L2'+cgBeQ@9"9RYbhBAI.q+cPh1gm@[ODKe
%:lAI\[Ws0X=gs*eD-KVJTbauCD"C79ZgIsNN3VhTG60"R.!)M[TYuisK8fdBlSd9:[V_Ib=K'&l/XsBcp*Wsd*]p5>VkA<?RUF-0
%:h%Rm/-;/HfQlgc[4MEeCP!0Lc=7IE2P%mK5nbk[dKCj#SAuhhbrN]%LF_MW,WZ`#B8][*[1"heCWnf"*F#sh5cr_6e9:Fc!pVAj
%Z"gsY8%o4d"6WU]OfNj"(L^r-o#3UAC$4bcTgYNhUD@#1"uJn<co+B=M\643[1(]Ij!!]d$8+#i*Ea:'KI!1K1,2?7J5P90E%33N
%_nAu%kK,/fW@<IYEe.g^bQOA#2%rMW6;8;-PRG^+2RER#-B"OM[0C"O\53(ih&(,A@kq<L@j[e/6`I0_'!td*\!\`H2uA_E>$U"O
%8EF"8K\i'sD8AdocBu1Gb3tKH*i:(X7d?2G!!@SBUP3QJ&p5*"JlZ&C-:8o-,l\]7$FK3YJb)a#]-Sn&?BQF_hReU-3cbJ/q2DE\
%Ga);O\.T.uOcVG`3!ot#"gIf]"?_Dif12#<XqKh/T^PtJg4lg=fR-^degPEiTi;qPpi0AY)AB[h@'Zd,K86\3cZ:3sGu5.eI-<Z^
%eUU*C*!Q4p;3R"sQ9dtl6ZkqCiS,.($+6[$.aqgrC!/?h6OB.J!N`.X)3AAB6'Cn=^3m!(3tMaq^VmJh7WQVLc.f;`^#Lr"@MHlK
%a(\dPJjTcZ;\210/4#J*"A/;._sn"%hfiTG+HmO0(:;a`ct6prU9KdD:MhXuJMB`(UEsOD8sm`tF0C0IA*iG1j&lseOI%]0TIl6.
%P3h?k:>g0T5gW4kc-tJ%E![@+L2mKT5!HU";?:U"T:>Y0=TF)1S<TlR9PH7(.[?4SU'fO(-M1o,bF?#SYtJ!r'#k=.!(:h.>;Bgl
%KA%*`E_BGD'HiQYZltrT9>s>P1FUB3]LW\kiCN=ILYViV.6B0s;mFpu:$hicrL9<V-iSNCHS$*-5ufaYOPKe_^:b:9ee.UZUoCTM
%Jq3Q+(<nM-^L45K.EUd3U2Se'-4q6&f0U)TW$AN7fVT!QW5.'b'mhMf?eB-KFu.e+&p@u9/[@dsCE^h4$Y49Nf]DM.85nbAI%!U0
%i@.C-!2S$nG_&p42GL!6mqEuZHD`0b:8HM0!j<@Fo*+*,HQGh`gF5ab5*fN_$bW<$kp:Zt8[$bq8u\Z=lN6P=0!.5U85q<i[Ck*X
%<\rp<_lGj/7!0_,n$S6Wc?\^EMJu_kLs(,sAG(#83a<4Kn$S5dJ`C!k][oJ.L[k+B<'*q2\J;_(9_9l[JX1fGq>.0OX8m&Q"U:X)
%Nf3(R#??WSDa/25:]XJig;AdVdVBSC.,p_73ZUdEPM=QWlYu[T.mc=h$W6O1$u&Wc/.e;OMNkY(ATH'd.?7L=DUkI]MI.r=[J89@
%&3UBMG<)P^n$>K@Tmt0;0s!C"#P2/2PfN)',]3%eLP4;Iq+o?",?`q`eG$(!h9U&!M(OpfNT(S;!c1f^K*cn#Dr*1Y-&cB;\;_aL
%r'V/k@3UGFa=*g^\L7"sjrSaeY:>aim\9.hamaB14Nn,cAgf+-,nNA**uYXo@cakaUqs>Z!mae8/s=?iP\S/ma=,Zk:KVh,a*Nl*
%QSn:P@B<7:,\=A3/X9n/;-m:uEM<bT18H'FM!n\LI6Y!Y/R_llkOL-->&#0\2q1)D8df&FA<[nUnLma%HA>H"L(e!SV[d?%U7^!&
%o_SBCOBI\'e/2P;k'0Y$Vm`n-H!7ABQY;k^\4BSlKL&'66Vl$rr7'''^eER[)EIp+8uXCpN&h%!cd]-(9HnW<,*uq-8o4+B-l83T
%Q)7Jg/M5ip;gB-)e:^+W\\L!J)mY(cA5S2EiC#`eWP]U7)YM7q#$b+d_mp=UjWZo$/h.nu$*'mW(EoecA1(:bd0MFiA-NHT6=a"+
%q8K=fh(!.L&uuLi1HYb=T=^Qh%50:aetQ<-2s=q5[:ckhBZ\U:Gmf[dc6nBdkm4XEV8`U#8"imiQ+%<lqCjK0?%Ecfe6+OFV#m^1
%71ertIGl(X85MXDj$nPr.%qE$7gFU;=A[V)[&L+;i^h<XKCX5upl04jgI3%W]1@"2h^*$oJ<V:_jbQ9N:QG3oE#EHQN;B1sRPmr@
%q/+T?YuZm/k3;bti_V3Q.!^)`ZV:b73G<<D/@/@WPO6d6aJo(n>,F9:he&eeXGqI3-H[cTR3VN",Uh5M.afRhGM%$e9B*I(6!s-q
%(H3"d<H40r"R4GS(L7:WZXRBKPcR2)(W,6rYeZYh?YF,1lY1\(P+'(pO,fYl!VQBt,\mRVAfkRFqBV8%?:r+G=AVqZX;-9.LskkR
%(a9&HDqAcm,V]J1\!!g-JBK?B)l\dl>dC.\#ZspWX;-9.3+HVNWXCsd:`+u*dM3e!8Xss3,H;5^6$XG&a^#'BS5u5[7YCq6E]>Tn
%8!su;Pp`LE?qI=;2WTm-,u/HQpe/C%$S`nSA.4T"`t4sA4,KK2rb=p+!=XWJ2/Z31(kq*u[l6UJ]FfJ#>5uAOWtPd"[:m\/(3t%B
%r1>rI5"(t'O:+V.L)2+t/o7Hs!3p4,Ts<KG1Hj;6$o1ElHM+E&grUGPGUYG9/oJX&__fm!63LR6T":,]0Tu1;8Wg@sr"FJqZbW4A
%n1--Q4LId@s6VqYJL^C:m5082S)jDoPn7O]?A9Cd%GGEm3`9+Q%mh+DPVA%m!UbW!e.ibWHjr2,omhZ+R.Q\j4JFs`E5uJuW3`rZ
%cLIe;UfC>IfM%82]td]u*e>K-NJI!NN\DA;\JZ<u-rWca@Eiu9Lj2/Wlu:G__Y*oO$:T2@Y92d2<_87Xd1."e`\JP&(pqQ7.)RiX
%FC/`"A<\dtm;Sl#")q_OHWl:.D7ca=V\OK"BZ\W]&+EI=I1ZIU0$q%bWh$_<QU+)6#"N&&Yp0T]JHb<EN#S0,`@eQW>)&W_2`ls"
%'c/[4GEGd9B(mH;;_TZ66^':HBK"08`J\jIGX8j+qbHZKgBS>L"JllI).^+gpqOVTn7md=[QrU""irQO4Vt9ZETPcEfi`ZW8`J6`
%%)#'`/h361/Lh]#DKN!!HAOZaI5'p$2<c#9i.c+k7$=71W$<uA->aW21np:&493C(l?FmN@"C??j$n]-1A@I\e2$qocQ^=U5"(&;
%PT$3+OO<parrUN`Y61JJEHG$O>R,LDA"'t%<.eA/0q9c;,[2p!V\H+@eMV#@A*^ZQfm<'X[LNsF_5_''pUI?[#=/FrNNTCM-l3/$
%A$+H?aJ`\.cBT3t'KQ:'[-aSRR"^P>eY4A-YB2BpI,[U`3'jMI=p>kH0E1&p=6ebX"^\ue@*gf%EVbq]p/HfNL9mEYchN'"GOCck
%5b1fkJlUErQD)>@A:gp&e.DsBO<@8'C)P:+XkO)k@-\#6]4_2^)4.oE-,sDb+SG\&&gkn3^n>N\oqEktDH)[_%):0"B^r2D;;hYS
%(2+RrFM-V>"dfZk\_VHKGkiI'\nMAKC?6'E@8_=#!@.+ge"^i5<Z+@Z2OnunU#=6;].mk_pW@Q*e3IO[O#U<O(g4_SOnoX#o8B])
%][>-frQ`1W-`NVMqbmC="a#LbMisYCQS\lUW%4".D3c:t7:/N=UG5q!Wh$F*Y1?"41Wk#Mc*::#%,,]k9/auZ+^\R$ANAVc;u$#)
%@/lhf]ntncT>#O`49'nfYAmhSQQ:(\GCjh/kSD6SBSj/X)X,Y+g71Gu;q`gb#Pc8OE?GO\/l=7J&+oB+S@So!l-UW?Yb5j4"$F1U
%8b<p1TYD#EBUbcj)=gZ0)79m<?*ca7JZY;!aW"P)KY585b$$pQ@Ib)-]UU`Jo$[b=>Wq]lD!huA``P]1i"R^fB+'OjAi,EEHjPJ$
%G#(nX#`;tu(3=Hmau;lA$PaO2);6:<339dfl>hQiSR[I:=dnS$*010g&r8*3ZW$pfA]..fGiV2gh]^%M+%[R4JCjK`0n+"Wco+Ar
%Fe;d*'8W=+O1lOk8#PXC',;<K_u&`D(DTG:b=i10OGUl5mLsa#!#(\h`U+a@*'k#i,nN@K4.(GnGchJlQ\#H1^0<[Ng56FC&`g>-
%UILL,)ZqQBJmd]@H^\VgMV<q!!YJu&rj33=S`P@uG)aL6@uDm==plW"`%oE4'.^c>H&3-QYplAbbAGTC=+/5s_!'M(+\2T-rjKm_
%*;nen`u/:FHb08rmY^O@lnHgC8Io#STP0giV!*It7P2N3^P%X\Qr1gpFB3dt_i%Zl]U0Rq%^TVZ9,M3h1A(?o6u?0(s4]WM?:f1t
%b.enBGNb@oUkL1eao)1;J\6Nb[?+g":Q*2"+O-1aE/t-)Z\H6n16S&aF3'R><o'e@2KfuM7^mkI4M`3dK$6oO=kHBO0K8'l".%Oq
%$P_1CD..-e/]#<XdY)&/F>_;ECi'X%i=[9G6ajFHq<a/D?ILH5eco>l\YenHZXh?D%6M'RYdR.c%BuA"DnW74Xoe_HS(PU9.jG:$
%mH78#6i$IDejUp^i-%JrMbEL!^E9`kP,(<CQJmURlL13C6,l3s?3N?H7?D#a"qh;Ei:1S*8$OmJ29LAY:9b53.U>Q[=5PJ@nT)$B
%r!6o=9MM+hno65s5$mi5=0^\&IH[EGDW!sEV7N[XQVm)m9--U.KPh@ekD!I9gfUYJX*"&//QU()@_(8jXHa`^KlWGROq56.+W#I0
%4q;!.ahCjr=)/g7`2^<Y`0rZ=]4A/fY1@oI\B-Bo;!T*$2\A3u3j0;ZWm8b&!7_]PeR_/?C;4e;U[#@!3Ml"'_fC$4eU]7o:i/u\
%Dj4PL3/^k])eFf=^:a!MpG<U0e95=I*@.k*LDu6;!S772ZtLb6$ieL"7D)eA=SHq+acp(uj-@Nlh`KMXAotjAGfJ\26?&CRJ2j@6
%Wd/ka?/X"]=M+d_?8L$;qt4"6n*)EDh9spg6\h!0%c(GW/2#mYr.R@k;snoJ$=c/.A$H>p:^Lq&!\^PG[\]GIp!gW]OMj_1Cp)eJ
%CYg]mR"jjM^Fh!L3r:5F)d,qF[CmGY[!%#pVCb53Y`$/Y+*tP_"`HB;hTDp?`_g>,XnoiCl@kBC/RI_4ERuWQP^X87R*ZqV+)HQj
%L46nUC\_Dtd!(:3mc?<S<p8;eU;]$V;Wq>R+2c$W`:Sk,&s*ZW+$P55#@WF;TFg=[TIGZr0ZFK].fB2=[lrC+n0aY,SJ3oo+oGnu
%gWPm_MjN3D?+%7CLFAC(cR(%BaS'8;1L?sZfah[_ogHnFe7EPhrD0!dVBJ+`U_I471"u@N"ZXG.p[Xb:.g8W$@GO)YAB[)S-G%H9
%0a/+OU7DE4`"W1n5RIL"8-(t!fKhf%:'%U'4)5I(!FtcQDHr)65Vr^-.;4#p$BXXlmo*7=??2*Le`p$QU/89]S"LH<gRiW6Gb"nH
%5F<&5'.&E1Qb=R85C!T<qIZ6&R-U6>g"lV'k<U(1#.p5RoN<VNM>]P9.:A/Fg3)Kl!7<%F8O,U9!Up,c!"al!!#1#*'K"ncY_6V[
%L8d]E<i^AT7trICBF]2`d.E&,+PSuk>.JP@P'a:2<gW(_KsL+!"Jl+OriC1\lP(K=_2P=a-olsllj]roWDc&qK<:>j3PTjn3],;"
%GRt)c_%,QaI8UCXmBE]Ii='*)Um?-T1'#_XmAR[,&HBNhr';(7+/ldh#Y7M&+'Ml:cn@iWY@BB4V5l:5*/bOg]fu4&91Rm)D-c]P
%jJonY[emgUFk3J+QRtug-b'M1h#h7Uog-\_]QHG0r>WWQk.?neJ=p\[e[o[dc^6Z$G4""Be%2Y_=^pFXUBFE*]pmm0+;B!Km;-OA
%X=PB.dG9!8)+l,rBq\@M-EMoGlm(8&lC+q1FW*SM@;g@R@U3T=(T)$_p)D1]?84,3mPPSfip3(V(q/9=dUqC2_E0>!gujr4W1^+?
%]^Q/)1QPgU0>U9fgS(g(cfcuX=Bk-'4JfFg0.#BmR>X_JG!<*6;_Qg]L1S-KdM'27ZDYBM.*Mhuap%+\H<o;ireh;T.JTZsD;G)E
%j+52-cS=Va#<hoCgYahkhcmjs0i!a1M_M^BRUY+%0'Z\<+><NL1g]HAj72P:7UTZiD#rOGEXI*.LFaISQ\oUC`Ya_O^U\aa/4(.<
%G$nk7[?1h(j9=H,M!oi=PkojsZEMJXp6B=rpRm#[>rb]nqfP@)(9;9ofs-BLZj='j/Ahk3rN?SDQ]O+E^%GJ]8jkUAMn6ip_dI,r
%;-b0Q=XYmGe`For2k^Q/Am+i:(3p;UOILB1_XY3M0.rq7^TCY40&D1V(PclDMG$K_q..a]`dtGa$ZA0N2=&s<,7p)?bR<=XW*#8=
%ITR8=fd`4eN,!D+!p')/4Xr(/Hd>BMFsnMf^A,=_9lICHf<tL=O""BocdSC213"WR<aZ_OYlaGfU/,j">Zt&Ss1i_jO&3\I:.;!@
%]29HWU=qm0oN'9G.qhNiJ&K>Q'VD/40AOn\@6<4j(m]%f/#I#5rdm7=Zc.jBF<]/,Ri0nb[nsPTWN%A4hi-7cW;:@t>-KfTk%$#<
%HIoO+Ff1Rh[XHlrapORY$?+f+\DOo7lQM!RH=U+SRm"ts*lm'LMfm<)lF`o7oH)mOIRK8^,5Y`c[0ImtDe"JW%O*S()>^(35]9!$
%mWkn;3NMM$Q!]sdjd@DZ]WfmGj0!J%4jg_oF1`hqCRHTm%JE-M0G[7*.HY&?d.Bo_H&bW2k-:kph(kCQ1-5Sl4:DRc5!D&\\7]Gf
%CsUE-+W!Lk9drGB:)Q)C;iV'/OH2\1d5"AL3BUa8M_%$2fu`pjN3Y:fS<$6-e'FP\V;J,IXgR=HVedot:[1.f9.N66FVqt/),j"j
%hPepI@7m.[)b$oqI`XK)=4pdRVtH2Cd#pasQ<l'6+.TIBUL*)'9"MqQC>=g[^ng--o<Kl[qOD@Bls8(G;=3Qeh(Y+H$rDum0<a$G
%o<_/;QA.m&/.KrN^e624)>^"jT<fm+B<^Irm]&,pEc^I@G[\,+7;fQ9Cu[>e\XD[?hlNL8kKV8obNseEnh]EqJX*DFmDijNiH=in
%>kf=Lbe;0nC1XT\nj$/-ZEa$ge5oU[@dT0+-d!N(mMT+'Ut!.&'0fqfjZW?OCmFNK[+T`Xa%bUdO3@NY+a.d1O?>%T^OF'pRX)M0
%olZe,1rGE8Y+);??%B?QO7p'a1;=$eoF!d;IGBg`-0CD"431rlBd>j-an<#"H%iV4GM?*/0WW@Q1Q]N\BKOrZ4PAile>N&(*>ZGj
%2\&ll.Xcj][CM)V=Xnp_rj7N.X]sAf1F`[,?U*`=!LI\1P;StEj&KFW`c5XT^"]^b'oK,@MTpK/d+-/'jJ%oSG;-,Sf\9'QMY>QH
%9>;%!1"unMLP(_c\J`tH"bIPVcqBk)G-Kf6QFH6]-Yq@8--Ym@b;'+2&<(LI>[]sE9jQZln)7gMYt/Hj.I(1![0dm\J%79U^QJKg
%He`tbND?iD36YOt!4b;j/iEPCVVHsN6@3OL>_AR2YG`)BerPl]cBn9eU4;mmQ:9etBcQjD$upSNfa`[/018/IU6fk,.\7A3"bh^_
%SF_Sdr1V;IViKJCb'$HQ*M'iIf,<e+WE0]I1j+M=b3@i"dCnouPf!>n0-uT6R^Fto7Lt1hqS;MM>-;7c#JH?YfZME2WM&LLYcV<$
%RX'6NK<?p<ENkk^_DQk`lf]Xk'+g7e*94/:NbZG5HJ]L5X8Zc"IEafc*-GT[`Ja9j2X5]nntYA@SMT[p0?&_)(M![F[H*)ZPWEI4
%FnQQ)_FN%?JD*Y`]1\70#tC1!<YaLThsig@>MnVH/+V^d3Bn!j*l:c?;ce3EI^Bd06Kj>TEDXps:e=X5e.l<5O2Df=]h6TU/^+`>
%+aIKe;choT(cu3Lq9#OX=r>0s4g(HW.o:[_f5M6jf,tt`#>Ttc&00a/q%7qFU*"]B\b@uIS8m&(.mJV=YYjj^k2,^2F2h(Tb`CZu
%CrH493T#WihBDPlIKUad4:&W*o"ua\R1np:T-lkC/"JYN?&SW*:sP,Fh/ci@\q6fPn>uOIY0GV&?'-cMb4u)gM$f]__JAse$L*4^
%2LeO]&(bd!TW'G\I^F;"kBuC>4"Um7na^W*V6m,&5ku!t_`\uF"6at\CkhM<O^#I_4$qh'lpKYbpRYuf1QFM7AOl4m1($1dh#!Xb
%c8b*Rfb(lKNHhW^G9:4`1QFLbFp&>L/-rr54F741BSm_;haN"<#1[uo2^Q$e#F;^;K6!8oK:SdH5=XPR.gDhW*qdl5fXp,//E*Rf
%NGaN1DpPohIIh9P(T(M#<7',0m`b"jY[XuK(IZYqg!m0)ATq<W2E'G,nq4D=5uUj0TjQ4#?C<sa\b&/qK2HN&Qa.VW"bjg$n@^Sb
%0_erlTO"nrqksW)RKhIr"!>I1RYT<tJsR,<Ve'ph$2<HV3&(it:dbQP6?E4`NbCEWKgS*lMN>5i#tej9k@_r.R(M[gc5B-CPRs[$
%OV)O@2XYHN3bOt).c]r-CttS7\[rRAS8m&XN+[oU)qejrguYtEDPsje#caGV/\([3cb@CS-Q#iIdBh&pCr"KRT7S.$3sIncFo-MM
%,^(g?I`R)F8L]2Oi0N>4b?=iA+\0P8oZ,ZB2TT/%IFFmpp.0QmoU-2KmC+lA5N!uA^p`JK(9G:b%ZPW&D`#XdC23`sq<upqN>4o,
%%HY.*BF%8]jI$7ngA^GQ>!D#"A$>[L?:M1i*#q$D4ufuM=#KJ&MEU1]=E,bRBP6/S)g9<M!UaU><en`\dppE@:*Ya"7hLKdYi.9-
%L>jW0=tA9n4$,0=mE*B'M).[7V>u=E'jr!?jAC7E>'96]_HjH,F0sN0C=4B>b5tI](up!UX>i]Cr#AkmFbW?J0g<P!%TJm7:NiLA
%H'iEuPq4%SD,23".m'#9(9\43Q!O:`@C#R1h[F;8DXW`*g[37Kl*UuT`FHIthNEbuTU<1mR-]+De>LeOfJVgtoKmZ,/'r^tKI^^C
%$IuYZc.`9XWWL,T)!RQ1deSG@FQ5)dgj:V*Wj+-6Z%Me*ZJD$;eT?N<c_E@(eSN0YK;5DX4*#-t#*"6FM44FJApmD:9SKVhnYLNn
%DCY@EX9.u2\?8<SZdZW6AmYcZ]$@n=V?4#MRg-=sR'Nl'*O_)U*I,jjf`B^bkYn5bo%[o`=+fsS!_@i1*dT;u]o-K+qX#PqkYYhN
%$YA\FoJSA#(T,"t-tqlQZ0JTcE7S2N\/d*KKu+s/QUV-Qfq@0*S[t'qg*2&e>@iUt7gd\;TICbcQW3\S"^fs@'YhAXA%TN!:mXWT
%:!)<tA%(`5)g>:01CqQ<7n\7PE--;.!3-NAN^e,g978KH]0:8gq96s:F9&9N6b@Gm=@bISF#9V^60b)uEZ!^=pUdWDMsEPgKl40m
%*HCf(LGfV>_\/0oYQ2?Z*S3#Xa7N1a$V6*8+*FWR';)tiHCi^dAp,"Y3l@c"'/9`I(PGmj0<Zf1aNK#0jq?iVdo9@UV\c4/Z_W:8
%-m54MJ"[B^`6;_;9,e-YPg+=o0?6?^9jPRD`iLkTFp,!#fl$\t44:8PV;Ui0E4.r)^DY10l2klTL;%ghS%N[o%N@q.E@tLBLZHk;
%e7qRY&G+loHL\nHgCWN7c"M128>!A88C$$PD>+t&[U3`L0cUe9^[4b/^Lo^d2EhSpI[+iPR9N/t6?YF6/B:;.Ph#CS/tElp(u9'H
%qni+<g&0WYG+Sq(GthT&Kg)`*32@5e>krn\DXNsem=mt&KXu]%S*Z6\D%i'QqU^dD@;^j:cJRW<jY_13B<UXq%(e-+%nP[?9AUP<
%FGd3-?cKX,KO4Z6/$-(G]l8G.QNpD/1VGKMQh2n8SJ15K\)+N4[iNqEf;%8%RbMObDN6?TluQH6d*rf%E@+Itd5V/"S)h4\+cA^c
%+SG_$"\g)cXY,D-l4q0b60_a3$CXl=g9&NbFc+\T..-tbeGBdl1jsDjg??-#jX^"?9JYj?9BoZQd"e9ekp(L4b>HUJ$;o+NKg#VC
%9t=p"^56!6.=)c*TkApC++f*AYP,&W_dSD^KZt^\fj9WN^BN<qkJ>4)PDSJZp3E*XSX8LG!+A=tjY\V;)L.V3l??<*gQ@rl<hZ\\
%dS_BD@2S]AcIm/_%C&oG5BbE33d1C*BHGXT<bqQeFI/)t["Pf`W^XAqgQ2&2FKo`<5@pIh@lDual-,PJn%&`bg9HP"eXiG,.4B!o
%"+QT#2EsjBh"M<22tp;R#JC\V"&HfGNk4QaRY$.ieDFT;>jb\X3`^?G_I[p]W]E9$]$$?s>bA'W-bF"h-^Jm4/%biKa7Ki&#0BR+
%#fNFc8`u%r:-.OS>J>9<<;YB$Lk?(sc5A"#e-s+*C3@CSq$s@Rq>M[\33DZQ#kJ[)J.=<aH$N-1'B$QJ5B76PD;AdWA+(;YhN[DE
%SSJrL9Ur:1>fJH5WNFV(Z_L/a>?X?s;q7nSj7`=#ErXs'lX>0O8#M^Z>sVDS*EtTfTV%//f\:Q+g_\Yk.HWotd.H/I;0@'!ATpYE
%3]uB4bEXtr8(I-?pIskjZEE=mG*Hm+bg_Y<S?nl1#,tsB8*L_eD!`"V3=AI2OS\FfNb*gTrAd_p,A3O8[C+JuD=-]>YPIn3QFr_o
%R)WR]XuA#8TW'GHYo(UNN24XDW_Z<um6$X+E=/";5XMJFFVXSbp?ZUM5),dp%pH@'Ei^h1L/SZ+hpe)oS(qm\)fJG0m-Q,:fB(C-
%VSrMRlb<tN$G^q=7;e<mqHM.X+0ks0HSt$lW(6?'i;:"F^E9a&OJG+lVQkEtlL14n"0R8Y%lho.H9bkB7`BroGl2kQ0`OVKUta#j
%rUSjLX9V]o,+ZmLJ7o3]e`<.a!LJhu"((S_]o6E]=:_o8]H4:VQSk/qomii*;snkc8t'Ct^hfU\nhPl48_[K$/ZZ93q[41XU9]%W
%9?Iemaf/B;<bj!#lR3O3XeSufL+iep==bVr[14-bn^omYV.0dTa^Wq*XnDMjZ;6ToG?NkGomg&/Z%,*iH9'MuL?3`sWr#m`T[KFu
%7`070@+CMn+AcoNXp:2^auG;\lN(SKhR4Kph,CO?I-!E5a,#/R_Qcr\K?7GH<I1KpEur:r[k"OY51t'mg+M2HNt\=VPPQ?aL$0.r
%W(e(/TV*_^5jj!cHPVpU9s8[7HB*(.IS+\$fj7O[]u;MN$e*IUj';\YTW'GH0ce)^dAM_@-m>&9l(t1a8T.L7"\fM](]Ig%UY[bm
%#'X5f>gcu5[&1!6K>]f/Ze];a]<:D9[(#g@j8T,O_R*$TE?P>h^&/W"RNH\aVf.RG4r)P?oIB"k6*,.I;.nc)?2@X9?!@+B=2]N_
%jG-6j3bR5j?HNf7hq3b^$Zl%peiDchP=@RoHY,Wj+*2W`Ou^@WEqNiR9Ad_YTNsRU0&?M95g"mJ+a\fmVOo-3p9lW"S_3rYHa@)C
%7eU#]O?Glqe(\mm'Qegpe*a&+F7pj_9eiQ_#O^V#m@K.KZ6q&68i_%!o;6>T'05b!@b5eX;udmNWI$9JB_pE2WcY;_V.26XoI6>(
%lJIt0V42Hn0HFn0.s9-^R9$0-Yn9Zbg?i#*N)s^n]3jXI!L[F!eP7OcDp5;H^!pt,MTiZfP+7H@-;_p[Y+Y#,afL\sd6!=-!mA+0
%h&D6q$5@M/-tmp2Aqbhu=huq*<h_U0P(KQu=lBJ(X<7t?'e&->:sbF_X.>W@hEcd^Fc9BYPE!;@=b/mL"U.UbHY/O\'tJE;k*/0.
%F%Q<L1TPURXpAT>l"['?))!eHF?)6GR8pg=l^[K+ZV'sJ,K^%T;[/L^..qN%XK,()g[06(bcK"9b\LS03.XC+"U.Ub7:ohB);NXN
%*!2&S\ELq/A6,Akk,=s;9pl_(6=pDMOBID]DTrNW6>"1I+L?YVA6,Akb,Cs^B@_3B[LV?A]%D/M>U3@*O?oSQVOorRC8ZqT-f'Y?
%k"kAJ;ZF2<Wh#)!6?uQl>,cS_MnH&1Nf?kAPto@\B=uNjdeV+CE'M4(4f&NYoc(6;c*k[[p+0b)e[G&XD)'cJMYY^92#S\&eJ?'p
%Bpl42^tPoqXnn(6(+J<?:sejCX9o-eiR,$E.FXeO8O6;!WpkR$3D-o!,),q$$CXjn?2HgV0MRS@#2<_=(Dfn=h0i-de'FUeV-?A@
%*K)r>:[)+^s2M]$h2Ek9q,"\,WH6)&]II3INF4s"DT=eN]ZR;/r?@R<a;d"7G!`0X6Y:ah"5(;FTpF=LrUpM?)YZsXBphBckCm!>
%pp\FrkHDXj+!La3HcIQSbA>fQV8Wh#aUT5k5q7!h8p+,5GgAYbjjU@1=5!lI`>0Rp`A=?JD277tqciKpJ:pbu^-s#1f36WsbJa(^
%>A1?+od.48Z&5]WBj(&>T*sChIbS_M*EIINS%2>\^7i\ETlQg!.9@CY."f@dU3H$+r]3l?Fp1Uni)?3O+-'le]\'39m%+GnpRJfX
%DP4L)?M<40_*DjReu<$"qX(Yghu46cY)\0AIX=o'\`%^6n=!BC(ZomEQs5SP;k\_p?N(ghr).WR46WA"+[2SmOQO90nqoT)6UB"E
%'J&3,JeU6V'JuXM?2FA!ispKpdbZ?BF8)AYK[9&7P^]L4kgM,79gtEm4o,]4/,"KW760R1W!r;I;"$PHd$4EL)4G^dM_50EkYe)1
%HX:$`-[4d?hS[8PRKeRb%g-n[dbK+E?Em"B.*-[h@V*26O@%QMJu7%kCZ"O*k-.?QgA;"emQD8Gn?bulrdFMLC0QQYmI/ajrk;?Q
%i`5ntb4!cZB>-QPYVYI.24[PE/+F+l;hlu3a4\U*SpX(d$9eX.B/+bs%YHKh2hN37DJ,+Q<USK!LIdjK/lEL(jrAI9HR!X@(]/&u
%1X:&&$(J+V%a%idd#+cpW@M5]7..Qa_YQ[^&;I0_%oB_D!YSCJ:,d1jr#^FYiU;6ef>%7L%tFBDoABK9]0CfFc+e],_sdWi]>+@8
%?iKZChuD]Rheq?Jk4DmXn>lLLnqE'al+D$I6#Q6>NpU=)-BOX9=5$afYPO/P4/&fr;cdFV][O)K5i"1$84^.6pu$;K\or&CIP;qP
%j$C4uf/Tk8qr1[Rd*reJC0dp%[j0H/W*9H,$)ohTXECGlQ4qT<\/I@U?]E^-1Y0E7:S=&hV/<1i\J;)%5dOlIY8GgOjCZWbg@lF"
%\U@nj7,"J9"h?3\k^]GXodu-qn[?C4!-QI-+<f:thDG8UgXH(=O'g]0^NfY;^]3!E9Jd=Yq?cmVjsdtGmHa/LeojUqmJEk#qZ5r8
%.?'RcTW'GHq6W6><>q28s%3OgK'@o.KpF^ElDKp99:\p]Gi911]N5fDVnCatl.?E<X/%VDE5*fKY]fgo;':9`2RqH^Yd'EVTcLj/
%%/L%25>$:r7QR>t3k71Fk\:%"GIm]sn+FUSQp9?eYFQE:fF%*-cGa>Km5)F0SXVLVc:1)c;ce4;&&rMAZ,cQ]aQDIsa**=a$_Pcs
%YV-mN]3q.uhKI=c.sOE;/aE]7_UOU;>4QFh6U=XP.":"a8"ch3J)="Z+4tM0/f)2i68/A9G:[aZh%$m/P<.=@2+U6*@cmfHD?L,;
%\T@]OkZh2Dc34L0#j!q?cCMRa5<8K*\2Id[qP%nZ68,p#K\Wn1$g:ag*RM,X]b<[s_AdfEmJ:o-!Vbrd2VTQlmTH4>LT$jpodkIj
%4mU8;ZN.ZLZ+QsdZYMW]F(Yl2WG?!U>iqgj>mo//&J[.!cGbZ+kJC#Gc39[6&HsGmV/p,S"Zr!/3d2$Q1`:W-)1^(j:gR)g>5uCM
%eqLeIJ3au<BhbR:LV]!m)nBH[Hb&i,']"?T\e#Q4jc5%PGfRZSnU:N&4UB"Q]W,2n=Nob(dA(^8<`"jtbe9oWkDZ1]9C\_Q!SQtF
%AF09?.VB`3nh,iHPdV#1C7Jo(5/93l*-J9Rm2j,/d!M1+FpXHp_5MCUXSD'bn:pMk?[Ui\l4`i:)p/e6>%ance\mJ.ot6gM8UY7j
%28pdZj:QF$a!t`7nd%,/1D=N?a.,1s:&:*crlsL6Eq76jqcunrV>@;Ciep2%ZlJ)ur1G\QdW4[Mnpi`D]=p[pqHcC3Tg1NW*TY0@
%X.8_.*V;dQ/K7cX%Eu*;oqd;jf0>`e6=)u4LTZu1&Q8SI'_0-iIX43J7[B-;RC79@>\=\HI[AZT;B6ZF?#cSFlpl?OaVng)ncjC4
%C!3.!od=hGFa4EGp%=A8DiiSFKX'"Vor-BS2*ZKYL7aPdW6B5*1B77.`B>bqb3$"#V\P6,0DjY87-V",#QNYqoCB\\30Wb5opEB5
%o:1jK*9=l48"@LhdN<8RfK;OopY=VE''Crck@`M']f@1^(=qj]a3ik"iO60(McSd+B5s[E2d0f3M[EO9g5'[Y8NRM#Q4>\;qj/dJ
%8nl2(5*<2?\$IZ1b9*qdiD<4bklJhFp<.oTk$GAd?<8>;;CpEM5M^_-o$X``V_Y"$0=J_A/F<'1qp_!>Zi]Ib@6%(l,TCo_j0nIc
%D)b4P:p^:;A!lZU`FU23_gEHZ#[^&gU(rPdJ8O?\$Gj`(*7fp(!:H"VZiW0+bUL0I,#E@uj8K>'U=5@(%th1R%#`D@I#++0W&3>%
%lpeme,8p4\.QULBU-6o#&Z\Z<SAgDH<LPbH:^;&J4^iT]euZPK?(*HDGd#/DT)Bod8b+&?=S'?-C8HDBTAT.JgCO!E9fnJ^):iC<
%f9#Qu^$NWHilq$]1oAHF*)c'D"\h9+B?N7?`1LjaE3u*0F')@E%eIE(4k!%q@gYqeQkVA?'OLQepfAG!8qT4=PVe&)/>^\VTs,F$
%RQaJ(m";-Kqt)Mm^@,m2RXe_37apslWW<Hq]#*4$9=K0,ZHZ$kZu;pb`a.c(r6SZ?NHjcSr+PCokD[$uDHuj&jK^G+Hb6W0)+U5Q
%j,E$Hhk"k7]>;,3b_-%>N%#uPUBj\o(lGJhW=7.!f_9kmJD/R0gVL`-8i2;I.;4S>$6MN`Ji!TYd2\%>TIC*/D!/rp,!IB$d6e2p
%QUi84>sQ8rU/NsojKcTp%T+Vn?0Xe-aJNSp'V2Q*9:[kF7]5O+Lh0(1V]\s0U!t/$RR8#ajj<!8BeHbDc-k;"74:!`64ea#VCFEX
%f(SWV6P5b[D";`gS1ujW*r`q^RR1]I#8!=H%A?Acn,ZS:'LQqIj-TV!SYET7GWIo=JmoBAKHVaWH:rAF(6@;ugUuSgKt?*:50T.#
%la%1\:>#`Gc5A:1;tbk^;169Ni_]?(e:2"ZL,D`T]4,eBFE9LB)5G@u#,7I9</,$-p*3Sa=b^g-\pbTeTo5?$5U6M-0g+CsG7^#4
%DIo7=OVBX+n/T<nFQ;#[;[iA7P@5HA/!5.uUOo@%Kr8bWaCUj-*5YO\]@;W*Pc`8$0W]@,PWEHi#Z'7iAjl:qEstFl+&`,9iHb)4
%LNk+*g)W+6#hWHa@7*>><alkU@8?9`]3o%R^%>MFe@46[Ggmr<Hh1QVVh<]sa`AB`A%HR,0A=bV;0O-2WE:eLf$Ag:p;&eeGD/LJ
%rEdCd_mcbi41d29O(q$b`VM+NBW8U\]92C*f/h"8>V@b2fX5jHoHp]?s6M\(F4JMQL"CWRH,CA@OP]@%Qqb#uFan6Y$]eS>I65E9
%mJu`CE(p#q/mM`3$$YXI>2?oRf,/oQMRqG\bBY\HOFgb7d.E(HN:rWQbHk:i4$5)h*3_=d_(I-LH:)PHWJM*ef#F;m#('NH[/gVX
%5s\GLc/T%[-gW9W%k1F]K]DOE>7WTpC[iM(ICH_BYW2E]m<2P0;Ec"&b/Zilm]^#n!lnf2I^8pUA!ZN&&:;h`'(4XCYkN8m;>rY8
%VT)5[;k,ghgD^6<5laJ!I2i2MGmJJ^LE&6Naqgbm0MD@TB%]s<XP0f+Jr?@tp$@]0d=.#a]qPrD,qo<NBjW@DP0kEVm0O+V?$it*
%la`Nl*\m?.6^T`#@N+_`H\M?9TF7HihiS]hkU?5Q'blA@O7_3\=2Ih;I9eL'qe%4dmIA9OoV&`+Wf?8:mjF_'*=sTJo,<$d8h:dF
%&<":d!A(-qPJ%BOZ'tr-H<pj,g*+^4gCWQ#j*Jr;p>Q^2nMc4[0/ROLkiI+9`mokKlth'X-t+`V`C7VT'30=\XmYc$<MoqR*_)8*
%bT_!(^A;eQkl=[SmmFtKh^!5o;<7+:.VBma\O24"hiktb#*$*-oY+T-kQt!ZChl*hFr38)I,6#@,.:Q>oE48F$).-ZZ_<TCCl8^c
%qe)>Ge_1eloDY&7AIV?QgAS<9e!Q<11%ZIULVSAf.UOZVn6iF8h-S]a_E^Ds(:\>mJC@^D28HV8oU5)4_%NXqqsmFM<"/(.m0C<Y
%D=d#\W1^+?>dK<k\$b1oOf##ClO*$dW6j2L/)N!2+JG-Oi=FM:S^TkG.(n$GgsYQ4?Vs'T0@/dT\&>7oJ!_1AXg&@^@;7lGard@O
%Qeu\e:<bi'S(HDW5Z;63VhM[Tl)+DK[0oOhj_s\LLUjTOY3t'3.K:BghfX"OB"+feHhg=3(S^]2>sVCcGh=%NRo^Hu'jVV;.^jf=
%oP;=tdDY-SR)[]02"U]_/XKJ]bK<*C0?3A0"hp=JYffULKTSmqnuRJ3D)"SO-(+@M[BrX!EL4cke)?!gT9&u)iY$S-QhRZB"LYf)
%Q=I@p/$hUGiREO0pK'"#Tbi2M\%/E@/Hq'=\ojT:@lq=;YjK&MS(u2&H3dc&/cJ=:6bG5>j8b_IrUh]YJ^FjkG+R@(*C@DaE=(N[
%6N8BcTc8SCPZ:V9C<bpqiY3aE6a@6-37o7qGq+CX-j1S>B_mO0"??`YW";?B:l%;3d$0/<N];#d?&G9XBo#BU3<2W:dp'`\)3:Zc
%9[E,/YBH9iL/FJ4V,r#<HTLeTJ`7<V&Ou7a#U;82@AKnK%FpnC$_sE]U?a3(&4UHbR/4N&,G6)3W1`AW_?f6GN1`KK7R0+E:dJ"e
%US3[\Yruos0EPqo,GI]DY_&__#bqW1a5p\i/hJ64m*Y^W/M$^s6O9/d>-YO\.=]_I$*8@skkYQ@Q/_DPB^D3RF23iNeOhcsH?ouB
%Km7S<#p0aHY3$m\[IF5^$Gk^'&omukhpM-j0f_X1GCQJM<(K=(-VY-/GDbZ#GHXf'=FK$Phf`mQgX#9Lm;3]pc'+2Q[V(&))lioS
%gC4DFN]Ou)8Deq9b.f%())Wj;DKj6HEM'$(pHpj2P4Zf;1AoKqrI*/Gdh'IKdo#Ho"dV'aKjs(VXlR%]_qc8-8$O.82+kI+1DY<j
%X3u+jJ+]p!@4Oa(SYH:)3%YRGQ&RtR]BNMc2SJ5XY@<j]qTte1h7u*H96F5:0;I/ep6gqMhr5b:/Ioa[`Ne'u=R#24NnC3gLcpV_
%YsE@XFsg<O8NucU>@O,LeXI0`VNC/&%>hLD@7+j"$pe\t7(>l*Rh0?e3Eh`0"B?hg@$>q1bDr=F25rN@WdU_DbD>:4QK=uAeT&VN
%<n2JMjdso#"'Im^g7I(u._Cj`(9dFrapriJ:MDg8G^i?=NSD/Fq,hX!T@_?.q?2;"f7FBR$I$68ijqjYZ0G%JDC[*4j,K8_\j$Xn
%N]0Hh)0UVn'SCU)G&(cWV-hS;2g<XcbcCZBaKd(U<=I)6q@Y',Ngde!^"Q2TQ$sj]UP;TETTduIMQB[!?N&M_F^WE(<>Qhu1/m!W
%1d**`B1=A^P:;<G/ets8nenVL(7f5`W4SCqf2m'6XXZ-Kl-$mp=bO#]O,ZALSE"-/?/[WHV$ri!%V[[O-G#cM\sCf9fCJ.?'KMoi
%H\kg%aKfrFc#hMcrns#r/bN52*F9:0p/6HjJ$808>XBhK;ks4s8CpPiVufu-,ljX?1;G%b6F^E;`MgXd))o;m4Vq>^E79Q9m<3_'
%i3nj7_PIu/$GSQ,g),QMg,Y?S1V=98o6Zb8Zsm@o%(5>39&r?#2ps813Hj.UlN:H!p.\Z;SeEM)TbkHf@m2GFG_T4iA&n<Nh]_?X
%Jf:)P`67JG5DY3--[kZioVDU2T#2J8]#4u*KO+iIkSf-1Mblc>PXn9/LIHLM@t`[38E9oKa:2jQk#:*aN'g\-`m3GJ^@[,g!/3fH
%$CX.+5B_J4CaU6"]kp"RWd4biG6S'SDb?0hc@$X9dJ]6miPQo`+_8a>dA^Cf*>5>50*k*>l*:]j%]*!HF(ZGTQDnh8V!bUgT]tXb
%RF7QKQN"fB';Y7LV1)Y.Phm.[oWOF)QBXS1e7&3T4:Nl]o$cGb1+0S(U"\fVQ[Zspe"ub$WIItj[?E/^\]gg9]J*L?1*8NqN9L\<
%4t2QH78G>34[qr/MFqLcfeSmom'[%cMa@>qeq<ll1oEqoY8Clt*E2OQU6Ick6CuE_($!eXf2Z+F,XCW7m6,un9V"El8V2PkT07<(
%#DuKj&5l,]_Ms6:NB'os<2@s=8e/C/\<YEqZmD4MjbnL8*=Pq)Xg=jG1i%'lC<S+W8p?KqG@etMe,A'gflF@hJ&a<K3lSbq$CX.+
%>D@;Y(G4nms'FhC?TN;4L>ij&PVSpPj@j5SaI,F,7j\6C+_t[bBf#'Qg'$^?$N^r=iXDq09ehlhF'5!3gWij;`!OqA()8\)gkeu+
%P23kdhF&3eV"?(3I9ZE0^(i.A]rU4c.&D\JFg%A.1UKth;!Da@F+UG4WdW/d.'I-@\PddGeA!/^T)DsV<dripZ$m`mhJ01\UfJ"B
%?>dI0gNE<]b#mH>)iIpF>tQ!j3>efpcL66,Sql&3J'O,sXI:N\gS"j6]FaGPWF,nBfFo=lJ/p][Z4BBpGK=n:H&EeG;aE'chdV4I
%I!5\daL7Rq9(.ilh:jj8V6$;@?MoM%nhlLKa21=<rI#=oasf=H:irLlDO2H61_]/o4JXO)q]'/]l^meUd*:_/Vbk(^s3Au<Nj=NG
%gkbk^2Z]DIS#O-Yp!1p(Nj=Of=mEi:Voanl^9`qLB%=Z0bhH&$R<37%&8?o=='m3YKS?&lpe`@]WiS8ks"rB//5q\Z`o$?):D4PE
%.Oe53h37WCAS:#VC5a>i`Fn45fc8&TSpM7]CHV/-L6L.OlWDN+<5QM8RWd_TI7tq?W\!q(8mnTjBdbpc5LdAG18C:i];UC;$C[\U
%dG(8F8/sah9Q!tD-<Tj(C]$\.A@#pm@hZH)4?_!!pMBq0B\"l`c7[3#GbrpYcgu3d$,(GP?I%kV-DJ3,Ce]AGQ_GJdJuimfC"Vi<
%5[au4oLh1[_RGgj_+kr\h8[a]mVJdYon<\Y^%;^%eP>%)6U4;4?'p=/SuAlH7qo:d1nhB7/(Sqge;%bE2"fU4>(@E@+mo9A:iQfT
%pa`-/BAPLlEl<iUlE@p%DN,?X(aVp2C:rVrD#]Vm%P+]t;3AFcPJdbsN>Ij7V9>VsG?^m2i?WDp;<*?o6hbeQFCD$i%k07>PVQ?@
%Tb.*%"Tr3-HkJHU.,ma6^%F"iaudAJa%sf?:0qi4M,Io%SIatYRirq3_n)BUid'!j'npO1.-1J_oEaP9'bc0O:)iq;-m9M?G&"n:
%IdG9a*_U;Fb+&IHjrrYpgj,I$T4;S0Bj0F:T][E6kd/>?pZBnm_T]e2:lHR!m-n<42;Qt%Y):a-)AP)Wch-.tbU=LY(*<eu,YV^T
%G!i+/#&imj[eQS?8Yh`/[9H8jo)u2O'2;qZ<A)E4B=uC7g/Zr3-WoK5V8aB+d^41%lY,CibV:DZkEYmf%cq&fjX9CG=22-YO,(kf
%mBeeCZ:mC3Ncq`,^m>i;EE)W%R]<W9m[La3^YFeAbrDn41"l\_OVJQeI;QWNYJGGkL1%q'$DT+"BZah&rd`#D/5;lld6,:/Ju1Nq
%:A4)t>F%qBm^P*kFq>UP]0KeX"U.Vm1@?W)Zt1f**=;?4.U>rObAgTEVccsdadgeVFA]%;8ii6?b!mhR8p=j;1L?tYl*b9$8?1*\
%9:[kFVH)ltBl.#?`69ZY8k53DpQ!'s*9W7?]OO(l`"d6q2hK7p7u>U\mE]RoBb2C44".;3(mTN=+Ll?G%D9I=&tBH2]-mqUpr\[,
%hf<X(/+-n<h'53N65kn@8,%+2F=O/C$^-$n0Gk$VRD.M&E!(k(m:bs"kh(lV]$m@)VP!c-q)aV^3D#^ge^K/Pb1R*MfWH6$WN.a\
%]"T%\cHdIdZjZr2I\+#[+L":.[lP?sjoeaW>6Y77i*<;bUQ@LP7E3mZ@O>'10ZVD=_aNeI3RiQKQ_1_$4QBK=obganTmu+\Yof#_
%_G4.$f?6e<@Thr!/1Y#naS'^V*>FZUJt;f-4&)ZdB+^ST3=^<SVrIfoSBd=BH6M"ea85s(5XHn!OS*thXROl!\k-"'po5,PfPqho
%h;)k&dG:[b;Vf\Y?+1ZYj8.@!Y#4t35?\T""[*PPY8hogo<3#u;]AA^X+0`c07W`.+$]brTDn\XI@36(Xun_)_Rsr4io*R(B]_!N
%F,0NBgFA$F,S"tujt>\*'n`gb4fEO=L1.MM$?8PA0-kSE4%$?JO'[$Hp[ut'HMJBV+SJak'ukDd`b'Ql<$eTEQY0fOZ;S?B,%CjF
%@sus^WVR&OeB8ZJia5V4N9uR_ND6kj;^ncHQa[&Cm#;7Y#@SY,oZGUhjF,@0#J;2GUY0cak@*H2&jl,(No8k&M0*3OE"/rUe=@?i
%1aN<Rb<`]r<l1C?WB2eLS8hMR.6hqK7MG3_8DT\:j,Ba*Bc((q9RsGnFiS*R1QErM@<[&TiJriGSX_R_33&bf02r3n#AVaSJ/CBi
%78>OnS?GS5_CEK+LM=3+L*"5`AeQ831P0VuMb<2eDr,)I3c`#@ibIdU>XG#R]WrRBmVP!K`OD$YQP;Q*CN#.H!.#gBgYK?)%klBC
%b0rMG@B_sGCHH*CKB9jip+QbCkiLK$]UnDSb1]SuCK!:\T7nT`o%VHF^7!)5fc"rh^_eieR&9.F?;krP\LjpESo3q3D=N^:phC%U
%DekOHH=<7t*%8"XQTi0<\;%8&__`'n&'C3Un\/Q_/s)FUDWo&bm'+/P-&r;Z*@auL/POE<;\Tp&FbQR/M^tJY`/A4h%`=HS)lg&*
%./,l0oXKF);#]ib#u"(3*=<5HF:Z+rFQ*k^.!'u3V78kn+jZH;BUO4#PKX>&Q-usn5?mUWB("&A1+*o=p:UMO'p&T[A]>edXE)<H
%7c$[_rPf_PLKG(T+IL'J<$_jII6L_tab&kFa>6&d",TR)$N#f5PrMn&"/#CJ2[F!kOS\/=;a%jZWItB%P6#[i"dr2_qAZcQS"ErU
%S;dL)6h0?ta5E#pc[4RKhJ[,QjkgS/#X9b4@!Qe9E+8Pms8A%Sn4EIdD&O@(Y5Z0"0`8K;Nj)mTo]3:7c;LRhO+F-e02SkS:H/d?
%c+hXWqe>QqqrPS"3t>U7M):I[iM.PI<Kh&:Ld02>g%$6UJbW=EA1s_1,7_Ya![!5*WiI%_)9!Y=+MKgO4goRI7.0kEEeO<-psl)5
%qGdAILf;kp]9>"*\Zk$H8VZ5\oi`m!QodA9II5.rgkiAf&Z,P^U(q&Ti^EGVW:bH$#^=DM/G334Wk#4t/djeh@>se\pu6ProCMK`
%f,5?pa7p3!4&BY&4kYgLjWXG"=0d?A[68e+^?eh==hHd@?Zti&LZDhBhR[IS9%LGkK#cMkFS^:ld+Jg#i@l(IJ3O`plV5t)hrF9N
%ZH^Ae3/h,@9_gWcg#lI*:lV^G'gK]V*8PTBC^NNC9A"=M2XcHnioG;&C^tV3(B(!Ip:Tgi28s&IhK[dRkp01Ins40?PBRi+a%PuE
%YK$[CE\Y*#rMB-g?;hYbX*.Sp-A(GL79t)XFbtZ.pIf4#;\us;0#;FHpG:F_J5d=(JG47:@sLdSi0Ls5EI*`gI"L#lEa</>*n%0*
%/?c#\]NH%p41f%hdm7)DG)'=hGgX"EA)XjDe-4^/b<8p02b!>&?Yg8344lF_\o@QKKM_@$&n:Wn#bCA@MkMXFe1G*b!ek:j"\gF8
%nH0%aOG5^t$6]W]RSk9F#8h5/NPPf5iX-AVV.daW+J:t<+po_$%k)*`+m#8S5m,7@2*`<M>X1U_RSO_9bOP./%#d0Rl0RaH$4MFr
%"&N=Qf0dG/TID_Q(5<#i%g#_WPX5I:JC":1#S!FJ"K7tBKa)pTU#FE:)F-Fk:dJ"e%K$2m"/I(sJ9hd"Ju0M+hV/kd+:YRV'Z'ha
%1qc+7DCJPeA](DTqd&>kVuO@Tf^-Nc0o_,o9I,I@BX,Pp0+Z`]jgXMb48#B^lNCWbfOL"Cc8`tZ>us2*U^DA=&b]%4Pr"FU2q8;1
%*%M"T9%YAW<R*SHgf?((##kVaA\oM`XE)<Xk)+K,8LRTS6_:OF#?EkF.._VqjP&s%98HZ7I7X`P;SncbnGcK\GkE#r?,(AaHF5fm
%`e5He<?kK[X,JLueHN##p,8!U0/$SP.`]37G\*F%?3S$VLh.eFf^_@pFj>4Hg%p;dN,\F3Md"[lj&Pm>Md&)++Y#-a=m(`F0e+hu
%f`m/(]\"Nu'3mubB,H!1K\DbhqoOTHV]=18D'j$=EMJ@FKp97'Usrb421<r1luK2L)c*PV`iE4j2k\e/`L=FG`B%YEMD]f<MMuMU
%aW"-ZF2k7_dl4/V#fW7F3Q4$l]T+jpPDY>rYfRhaXE2D].u\:O!q&^srPSg+k4.i@;K\D^Q?Utnk[q8E)n.\UD<SD3'uSbN[_ec"
%s0TaW:"Wq/8@pLVOZor\jV<C7L]7tdqEL,@a+phrn39/8YQ*F-q#/OuL]:U4UA-.'>+DZ:l,j_dZl%hl2'd)k_AjA=I?J;6Q\oL1
%=7[I%686FW!HVto]^QZZ.;m5-fg>>E=KRVLHpF_'dPk+6G#U]J]^QXHc0nb51l_$\G$WEG5M6ECR9l8,4/7D)f=/L`rNs8LMJ=rM
%-+tu9]:bh]osKA4]NCY7/EqkfgI29?YHQ2&O1)38LcZC0(9<XCf3O[p^$h7'GTE#HbVBS]];<2i\\)BJqRRtZpFfYgV_Oa`nb"XI
%BrU,6hQ_?<TGOK!=k>Jb63U(h_3WBlnOn:V:W?Sl>"^Y+o7h-i:$gsu?#'gHS/:R^:-eKFChjAP4"O$uH9to20Xrt,fU$H"d)+_j
%N;G.='f:%:1H:E8+`d*'j3i((_1T&0\Vnq%h;pmf;ce54ZfbhLYOo'+FM@H'k3c$HF2h')XnF?[NV1oWV#(po53&]P#+e?]i&T$;
%cWK@hUJ>CU]o\5`(GU-+A">E93m"o(82:5f`SCEQFj;u3>W(uPB<ZSs`n7W**KUiPY#q@06dG_T*2d$.bdkH";"uiBs4&a^g+jrr
%PV^EBk$;o(TW'G<Y)J>[^V0h/R-B<=XRrmFS/'AK.hi2cQl_!]1q;#Oi"/i25-4tl9jN;ZG%ljYgY6.F/l%)o]m;(XW=.'LY]aO1
%'Mt1O.GO0C(r>UV8cOa\_W-@Pn2ADni%</CfOq13:?nnXLn9AkcuYSdT<ZZZ8"If4HQa>J04O?5a#[iQF\:]^O^u@8MG:__Z&'-S
%1<$JJhT;YN]9p2`ZHa=XSbEU%GO1Tn')T_u+[BBeLl26j=M-LH<#6BV&%q8UqbiIFMF$KBlgaZiSi#fa"!Nf-GO`=d'..)(\]<Dn
%0g"EGF65bKBD-N?[@!>R5VLFcK!f;WYGJe#(?VL$LTQZhe.pWo&5jaZ_1T&0+ZeI8Q)!RMFbR]jghcSC_Ve/sK/%RoTc?d&W%7A9
%2g0@$6XangCi4(\6!%/pdk#J,O=,I91*(TIoB]X3F+R8c9`*alCr6.*\U,4[S8m%-NIqb)&b$t+mW#=L`_iWhmf(9sgn0tGpT`!]
%8"F\EF5J5^mTb]T3/C:UW)CBC^q9Q(LNd)`9q?Ejh'lXh/8\\A997,)NB^m!?@U<0dFc0C2sbn0Z@\sHn4C'8U?T)Mk5F9GIaV!e
%-VZM'mOq]H"\i:]jh2Vm5qZJB+3u+(63lUec;A-?apO]dN](@cq<pG!9uN(YR4EnO/I_>I\*P%\5XA=MG^7k'j*N]0`gi9"&r=gs
%F_a$`R9UIT]!X&%b0L!>,PocQHT1p.pJ%IAa.T*i,J;dm^q6:,i1!9RO$Q'1p?oY1\o'(3)l;@LOb+[-Ju5AgJ+A@9;uFnFX\/m?
%lu_ftaL+:\<F%o>-TEf[K?HT`_.A1LF+T"@O)S6g6^RHQU!!K@k6(r_fk%)69$>X!/dp+cZ9Z5d5s`uGm]s/>@)''YiNi('[+eFq
%jK_Os3C,s[-b(_-K?HT`_.A2/F/"8`%rb[56^RHQU!!L[k<oJJfk$LtEroV_UqpVnJocNqVOu[U@0X+lc!ZU>GbT:VSgZ2!(2>C5
%^RBbk_m4)Z[i:kmknMV'9J9*,1o\3V3M')LGeg]<DO%YG]9Lk$Bi3,=hr6s+9jN=I]ljp0CmW<&:()\a1YHOn0<ChG.srt9ok>#J
%/Bi1NiIIYD\q6g*E7q=Q0'i0tLI2Eo#n!+b_IZ$Y>o"sO%Ykag',397Qd'SHFBOiOLI2Eo#n!,MI[B_A&\>'iF3nKhU3!ntVU'57
%XA1C;lUNQ8'V#gN1jt&#JfM9O<!Z_E-o`S&BZ_rskFCV=+:Tq2'V#gN2#Zbn$e$;A=eFlMb;ogi"9hMli3KL\/t;/s/dp1"',<?P
%JBOZ,\1CSb>Sa8"-RrfP/t;$ojK]m;/diA`',3;%ln/[pU>F`P2AUAe9R6>Ak8e_E0l&qGT^[WFCd5k]Ueo?J&'D<Jqtt7E'f:&e
%8'GQAf[IkC0<!5mMe\:B67Y3s7g2UmJ`j?4mZ=liB:N[EE/?f_.qbt3e.k1E>S^T\juM@=5g_St6.9JV/?$2(@]eJFOFhP*Ju4TJ
%=cd]k`<s/n+U.$3"\mZ]IEi-OMph$48AR;P6.>^:p+q0fG_UG*?6!1,ELbWE:N.TTjCbj'jkgS/Y<==/@!Qe9E1lhQs8A&Ng.D-N
%D&O@(Xo?'!]QSY)?(KS2ch2SN^p]$V=Khjf5Hc*O^X4UsG]3V2q<qD1CKEtLS]^QXd1DVDaYV7Y?TLBSrL0AFAJBL0H0renkI$ZA
%Z3Iju@LkK&4Z[;*!;J[5j1c2',KHKk"mDKJ8K@Ri:ZBH6KLlf6<WI!<UH%I!##p#p2o69%@r]G2X``8-LO7cKCT=/C&akh$Z/2mS
%*7i799sVA^nDnl^<L9t@5h1/BWp:):o@g85@f_-QHa4S"bOaGgY%.QaC4#NaG1ijRZZpV!]Bn6AS_&>b"?&sa6G/=!dK/SgJRc2l
%\fng1Eg6W_>d<37NPTD3>[!(Ej1jIk]D['efESu>IE^aFo&":gm'NljZ]"VGk!k(AL=61.\:hE&jbth;kNjcpA1LFQkJ^cXNOAh!
%=Y)0Kg3W6Xn's<1cX"RkGNX^\"8#b`E=&o8\&?'EO*UJE]MM/lJlK3H*jV)n+V^7s(OpMlmP=6TMm+Bu=2522[gC#"]Y5Sj>qh7,
%7Fk;N$U_B0`?i1.,'Ge5^YR:fMCeIIH%Hie_;Y5O]Xf<5\pf##4KE]Ge1rpZ@lmY2:<cHrSEYa,h0n'--tqlQ=7t:YQF0k*5-dJ6
%CBN)RU4T7$eAgp6KP`"NeAfcoRG5Gc/Ylbj'K!Ls2WJVC+h0-l(Pgsp/a<BOXQK)2;*F>MkcPp5B7OZS\Q=`4c8b+%eU1_PX.:aj
%9(ueT2:*s&orkKcFL9,cX"gLj89^9of@EVT?)5p9R$2sWH:")JV`1bdQ]nOoLfXUELHY;B-V+pY5&H2;c*=D+'f8>_^QUFSrOP^:
%`]3c#a)^-U&em">(]>QEaq2m=d!V^(?<9c!JEjk+2G[Bc:`MLiWNLp(0CQEh^'mfMjnYPuBqDlu&@C&,N]^u%`$8k"bubAg29H*+
%]=)sFUOiC27)`WF+-&:\!pe$e=!3j@AHGSO/D#SFKWIhR+0.4H&=!.PqK*AF*r3M$\9:bS3t@QlqCZ)mm'd"*#`Pgj$SpHI3U[EI
%$VT][hjg"YF#l4=X"hVde]gNG13B!^>f,eWEpH)M.](&/+(?=FU-Wum%GEJdNFginkbVYMpS"G=4D;kV1<X.u-qLdaR;d-e3dY"b
%^S7JaO0F!DZ#!=M)-8aH;ZB`BEIq%4h9T$ECKNDI@5K)G=_ZbV[J9FT2qGWfHlY-$Z@s:qq;PhMfmH12(7$Y@0)Q\?GrL7&LU/?:
%0.nF%\g@9J^2]l,Q'&d:C4U@c3ZAH"QqMK.TV_Qrd?MPj_r$AFLpl0n!n1*Z*]p,4Qj,9?BK/<'L>&Aur+"-=_a+\7)PX?X[Qq3(
%Ac&#q$d?:Tll(mFgS:VCA'pOY?6j\'8'^hsBn:M[;WWJ#;%"p@KY3&Qc3%`/s&_,>0SkhBYeNC5XJ*oA4/3Qn3t_$%#+Z"G;Z<q7
%b$cYa?Gg`+*jBdJAKEfJ[t'o#.L;lM"j#-^A''tEJ=7*#aL9sY!aRtT44o6j7832-m.@B?/EIZ2`2jJ[n]*-3[I;3>:KmqniKo&.
%iZV<lhRC\8%C#@8frhLE/kS>cD*MmXmD\-ELAf\8VSh&>Z!S0H'J@@GCm;@q(:l@3/.E;hKu36FQ2]AUXmrRk2uShu@?.mIDW71*
%^HXe;@7eMimIWa;\-2lO"bO&QSJu:qm_pX(`",Kd+sADVHT"s:dPBH1UG6&G*s[BNlP)^_k:VFk`X,U'KW1W"^h[#B5QA<1`jqYl
%knbH@mPfXobJ4&GLCZWLk*o`WmWUmEr9$<CofN'A00]=$q_(ciT6]e`:7FSWK>$Qe<dD/QH91I7QRVg[ieO_IJu5Jcm1G!>H.E*6
%4'Tjo:?%%9EmP3o^9sB[["nbK/1E![n-=TrYU^1NPRVf@<'Q%6>#SLIfbZq+,MWJkg&5e0U+&6J^/.Z5rDqi>cXV&5?lm*1,Rt8Y
%3bOt)?HNel44q&%-Za3ReiDchPDiRK_Zo6JdHU'BJJ4P"5/FckpFk09qm6X"dn7jO@9\CUBdH\O+KhAOO]Lnl*$C-,_^gY5"+Gj6
%-<<c;c5cT[A.C:!R00D",:[BLR3Q#`[+g`u:E?*TU^fYO-(q?:Vob^X&%\GdZrBs;V`^WA>O$RRkXK4FPTOGRZd'Glo0_=7Cr$d<
%li^?Kj&M!3gfYcGl7`UueOhbR1WQ^uMKb[/9)?U[i1f/":g%`dr!<r':b>7s/-$d%6_Zkj,GYn>TV*`FJbWH=eW+?d-UceHHP!`_
%@9H=.cN:DG/V$f!'Ba%qbq8T3$ckeMiu#J@iE>?&='7e1!*dMFX?1tJcM/Wj^h:E!n@47Ko<r;j6e[%@VQ3"-N.0+]e*'&F??C;q
%8Ef/V,-o`GI:lWC[Vp!GgWJ_T$_q2f/cEBlckSB[Kbpo<d`gOQPQl>8(lXg:F*c4K.VS)SCiHV2R&ABj6.t1(96nu!EE(<7'afT`
%U3n!4dbmk.K:s0<rQ5fg1j+M=[.J:A(#[hlS2#UfHO1JML?KfF2%<Yodk'u\lFcG_9Y*EjE^8f!SirWU:,&]\AG`>=1)/B.]/"GO
%I+C=<W:Np<dDLQq\6Cc`+CL`rN]O"V#SAfn0$`5SJp#?ul;Ybd>hFkE4*(oBeiDchP9.?:cs[mHpDJ=NYf[gg)8A3b?NXHM`>=m=
%if]qb,p2_2`-lZ7>=l];Ea#r-,5jWD2?rAD(FUo0Ra9WX\M/4I0qdrP%M7bS:gR(lbs6,.7R5WI)^*@.TY.-aQgkS/.U3ir)'I.+
%TY.-aPCX6,%RA^<(Egq(TY.-YO0Ld'rNl^uHk=U&$I!o;95FCr=c@HH>Al,6ShNo?Pg`9B3JWab:UVt'b7J'H1L:S.1).e6ApG7(
%XE)>H_*Wk[g7TE=6\ACaGWf$I&0W![iFSC\ar.Ae$5kI,!YW-S):ge-n!gk8EPsMjpaI3QOn0;p4b3oeD*tW\bKQq%C!P0U+JG1-
%=<I;9p<X9n"m+RXOa9-_Ju1A;_>8D(TX=SR;NClYd$/,on,Yo\8:riGFl,[m9kiI9+*]?0[/2OTpNTZaP\)O`R*qIO0`k03].QGE
%F"FNZZf`spp$FB8Edm.)9p#H!e^a"TLB8F4FK`T5Fj>4hD!8*2,FItCBX#c"Y6GIW,%Q@)^((h-3TJZ:Tu2SD@+*XM_`DGC)E_Qo
%YRS\N3db&kN5'-Lo>N#j\E##\aiDV=DI334$PV\L:=AJVNRg.)mDfp0GrsgBJ/<q`6SGQD0)X9u4)<N2hWa.0fT%LcMHU#((88*E
%f@M5?=6SuN0W9^h[N3tNIh+k)$,n4'^*<!O:m$3?`bp-j$P`^+2PIX6=HWKHf[\8W'7&P#N!!JH6:0?MkLFGHb)u%Z7^s(@YcZ\P
%-sp1'j\ugB[pk<9Q"qi9CFc5$/?K_e>`:C@=)OnBMlcZCjS$6g!p.Sm@;.rRSIXTeqk'5RcS00b&*;]t!tP@lV:(k"i0>.l&n=,(
%E"N$h*cVN8$@f/$6E:O6TAqL.J.C%OD!)@fD25W<CK/0^*?@.$]FaG)Jb0^S-n_20pB)u74:2efnS7(mp?LqNW4IZBq2q>m=JTbN
%#G@%[:[n.tUI"d+4(K"`J%VHe]X2-EpuSZB6Mk=Yi=kK)c,f`$Ka$HShQoO&XN-Hc(`_:]pgN.>E9M9A`?h><#g73m,h]Je-LJ_X
%ZBZTSH>s85ehGiUOip)"LA<f?'#"bcinKAa=P,Zh.^V&R-VU6dLFAXM91ZMJ=GJ<:dt1YC-t0SY+t"3r?BUK8>/R(U$'PD?_+NJL
%b&0*g3gq`@OI`M\dB;^(LfL>dAcndfPr?m7e>]4^8cES9XW?cJ,pkhqEL($+T\D@eRkAg;30a!7(bdPlGO=$6h)OK#-\L$+B)LAR
%dfV=)#r#Ee0Nj7IW#=<2>10'0T!>pi=8)S0k?XCM6a1^;l#kXl]qg>>Kj^DR/EmV"=C+oB\7/cs"d`g<d]<>^nd`2kEA3?Y1p!Ya
%][-n3Y[/@'g]>Ne]shG7$=++S\/C2^MClSk0K*uCGL?8iCZ`o;_92DeFD.OhhNfagJu5^?,(f%W7me=-gTPs'Zb&n:*9u_(>o\H+
%5^?(BEu-51mc'PK>o\H+5^?)W?2OeHQ`Q/6im9gjMG)%YZA`c]4d>@iXms95001%$3!LdEqJ:?n7SD7)E0nDtY[M`;YdXYE@pjRV
%DfQXFkjAM<]se$R@pjRVa^*g,E#2T1rW\`Q",ffCmP53E=i[L\Qbi*rc=>8T8DQ!s6.8bV\a=h/H\VIfot!!?49X!@gEOi^?4]kQ
%Cn<7EIani6+/<;$Blr0Y[N4P-:$t(bG8&Q3%bl-QH?LQ4erEVSKJC/<a(ptie[LHs\T[:2Q.$;eTC5q_8(amARm2ArkO61]\*nhA
%rBG`)f0B8XJ,]9@ICo@%^H)8D5Q$DJ[-q5jS%`1>e082QcZ[XR3\VRf&;0o51PQ^F>r[;nY]tLSNGb/6A;l]D,:,Ip?_hFOO0k;r
%RW(EM+Ml'(O#'2\eH9.UdriHE`SInjNg`N!7T[*2)KeZ]FGdgt$V8?Vad6SeG/VfiEA3)%-^[lkDG(d9)a*-Qp3T^r@.%#]06W3_
%)[FSd*sp>QCK9&8dPu6N'Y14D@PB.Z7Jj3trUpNg^@2D\Ie*hlO#'XdS_dq,G`YL`p#!f]RB(Rf_kP6:!M^2*RF&(bZS%lZBue"$
%^J.nO[YT.#cq5o5i<'>$?f!gLhDBG5Iic?7@M^GGW(ii2c]\p7;lJ^F#E>(@(RmF3h7MD?^VK@5*XDB.HX1,_c!<%Q3%3)[VDppb
%#J<ktK2DQ2cc^3q:A`g\mCXa8cBJ:@4Sb00."@AZH:Be_heq%T&teE8>9D";5-N`ha`h)XjRE76e]/O!<2\A"=[5=Ie9=XPIEm?q
%j:o9R:HKgi(TLKWL%5a>(\.bq(OAl`r)[j2+)dOoHU\2uJW()p$l"0%$V8?VEpkRGqI(.O@Ibd8/:SpbpdHTPJk>(\M:hL9o]5l0
%8Ei'?V80G<_@e7bT[,,6KE)^dl7,4A-OuFd<u!t/`h^2U8m.%P'^oI$);lePo'Znt:)T\c6:LlA$3dBh*?da!TAs*dCA"u,3jct'
%Q>Gr2i2b-"dbJJ^X5*O:2hoo?o3h$X$he2%rH>`R3ZX_rJAD]5>ZNR-.rR3+7\(?"78XoY)&eM9dOs!6^*f>8I0%"5d5BrTAe'Q-
%QB4o+oWj@"=YsW.3=[R-3>e/eX_TnZ'SE\Ed(4H831GJG^mRpA32?X_]rY[b$i'.l+kq2*0g3^bR;=pK/IjIC>IBX@Ki(%3/XNN[
%OH3hUjcf<0_XX^GWu(XcH@p\Z;*G$'$OYr1*k&Fn[9%cmYI!f"jqgR8<<4-5Jq=%5c'pYIb'pmK'>Z@%@JoifJ,'!(]Dqg.0402L
%_,p[/h&jB2QbRqBYQ+=p?[h]-J,&d,rpTS'^AHjo44a*%5KAgKr8B<ds8-1'oU##2r;.T9oH-Q(:bM7f=+C89s8K@>q0rTU.p;~>
%AI9_PrivateDataEnd
